//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SmartLineProduction {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_SL_History")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_SL_History : global::System.Data.DataSet {
        
        private SF_Clienti_SerialNumbersDataTable tableSF_Clienti_SerialNumbers;
        
        private SerialNumbersDataTable tableSerialNumbers;
        
        private FirmwareDataTable tableFirmware;
        
        private BS_SN_HistoryDataTable tableBS_SN_History;
        
        private SerialNumbers_ObsoleteDataTable tableSerialNumbers_Obsolete;
        
        private global::System.Data.DataRelation relationSerialNumbers_SerialNumbers_Obsolete;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ds_SL_History() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ds_SL_History(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SF_Clienti_SerialNumbers"] != null)) {
                    base.Tables.Add(new SF_Clienti_SerialNumbersDataTable(ds.Tables["SF_Clienti_SerialNumbers"]));
                }
                if ((ds.Tables["SerialNumbers"] != null)) {
                    base.Tables.Add(new SerialNumbersDataTable(ds.Tables["SerialNumbers"]));
                }
                if ((ds.Tables["Firmware"] != null)) {
                    base.Tables.Add(new FirmwareDataTable(ds.Tables["Firmware"]));
                }
                if ((ds.Tables["BS_SN_History"] != null)) {
                    base.Tables.Add(new BS_SN_HistoryDataTable(ds.Tables["BS_SN_History"]));
                }
                if ((ds.Tables["SerialNumbers_Obsolete"] != null)) {
                    base.Tables.Add(new SerialNumbers_ObsoleteDataTable(ds.Tables["SerialNumbers_Obsolete"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SF_Clienti_SerialNumbersDataTable SF_Clienti_SerialNumbers {
            get {
                return this.tableSF_Clienti_SerialNumbers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SerialNumbersDataTable SerialNumbers {
            get {
                return this.tableSerialNumbers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FirmwareDataTable Firmware {
            get {
                return this.tableFirmware;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BS_SN_HistoryDataTable BS_SN_History {
            get {
                return this.tableBS_SN_History;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SerialNumbers_ObsoleteDataTable SerialNumbers_Obsolete {
            get {
                return this.tableSerialNumbers_Obsolete;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ds_SL_History cln = ((ds_SL_History)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SF_Clienti_SerialNumbers"] != null)) {
                    base.Tables.Add(new SF_Clienti_SerialNumbersDataTable(ds.Tables["SF_Clienti_SerialNumbers"]));
                }
                if ((ds.Tables["SerialNumbers"] != null)) {
                    base.Tables.Add(new SerialNumbersDataTable(ds.Tables["SerialNumbers"]));
                }
                if ((ds.Tables["Firmware"] != null)) {
                    base.Tables.Add(new FirmwareDataTable(ds.Tables["Firmware"]));
                }
                if ((ds.Tables["BS_SN_History"] != null)) {
                    base.Tables.Add(new BS_SN_HistoryDataTable(ds.Tables["BS_SN_History"]));
                }
                if ((ds.Tables["SerialNumbers_Obsolete"] != null)) {
                    base.Tables.Add(new SerialNumbers_ObsoleteDataTable(ds.Tables["SerialNumbers_Obsolete"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSF_Clienti_SerialNumbers = ((SF_Clienti_SerialNumbersDataTable)(base.Tables["SF_Clienti_SerialNumbers"]));
            if ((initTable == true)) {
                if ((this.tableSF_Clienti_SerialNumbers != null)) {
                    this.tableSF_Clienti_SerialNumbers.InitVars();
                }
            }
            this.tableSerialNumbers = ((SerialNumbersDataTable)(base.Tables["SerialNumbers"]));
            if ((initTable == true)) {
                if ((this.tableSerialNumbers != null)) {
                    this.tableSerialNumbers.InitVars();
                }
            }
            this.tableFirmware = ((FirmwareDataTable)(base.Tables["Firmware"]));
            if ((initTable == true)) {
                if ((this.tableFirmware != null)) {
                    this.tableFirmware.InitVars();
                }
            }
            this.tableBS_SN_History = ((BS_SN_HistoryDataTable)(base.Tables["BS_SN_History"]));
            if ((initTable == true)) {
                if ((this.tableBS_SN_History != null)) {
                    this.tableBS_SN_History.InitVars();
                }
            }
            this.tableSerialNumbers_Obsolete = ((SerialNumbers_ObsoleteDataTable)(base.Tables["SerialNumbers_Obsolete"]));
            if ((initTable == true)) {
                if ((this.tableSerialNumbers_Obsolete != null)) {
                    this.tableSerialNumbers_Obsolete.InitVars();
                }
            }
            this.relationSerialNumbers_SerialNumbers_Obsolete = this.Relations["SerialNumbers_SerialNumbers_Obsolete"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ds_SL_History";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_SL_History.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSF_Clienti_SerialNumbers = new SF_Clienti_SerialNumbersDataTable();
            base.Tables.Add(this.tableSF_Clienti_SerialNumbers);
            this.tableSerialNumbers = new SerialNumbersDataTable();
            base.Tables.Add(this.tableSerialNumbers);
            this.tableFirmware = new FirmwareDataTable();
            base.Tables.Add(this.tableFirmware);
            this.tableBS_SN_History = new BS_SN_HistoryDataTable();
            base.Tables.Add(this.tableBS_SN_History);
            this.tableSerialNumbers_Obsolete = new SerialNumbers_ObsoleteDataTable();
            base.Tables.Add(this.tableSerialNumbers_Obsolete);
            this.relationSerialNumbers_SerialNumbers_Obsolete = new global::System.Data.DataRelation("SerialNumbers_SerialNumbers_Obsolete", new global::System.Data.DataColumn[] {
                        this.tableSerialNumbers.Ser_SN_prodColumn}, new global::System.Data.DataColumn[] {
                        this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn}, false);
            this.Relations.Add(this.relationSerialNumbers_SerialNumbers_Obsolete);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSF_Clienti_SerialNumbers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSerialNumbers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFirmware() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBS_SN_History() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSerialNumbers_Obsolete() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_SL_History ds = new ds_SL_History();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SF_Clienti_SerialNumbersRowChangeEventHandler(object sender, SF_Clienti_SerialNumbersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SerialNumbersRowChangeEventHandler(object sender, SerialNumbersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FirmwareRowChangeEventHandler(object sender, FirmwareRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BS_SN_HistoryRowChangeEventHandler(object sender, BS_SN_HistoryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SerialNumbers_ObsoleteRowChangeEventHandler(object sender, SerialNumbers_ObsoleteRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SF_Clienti_SerialNumbersDataTable : global::System.Data.TypedTableBase<SF_Clienti_SerialNumbersRow> {
            
            private global::System.Data.DataColumn columnMastro;
            
            private global::System.Data.DataColumn columnCapoc;
            
            private global::System.Data.DataColumn columnConto;
            
            private global::System.Data.DataColumn columnSottoc;
            
            private global::System.Data.DataColumn columnCodAnagrafico;
            
            private global::System.Data.DataColumn columnRagSocCognome;
            
            private global::System.Data.DataColumn columnRagSocNome;
            
            private global::System.Data.DataColumn columnRagSocCompleta;
            
            private global::System.Data.DataColumn columnIndirizzoFiscale;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Clienti_SerialNumbersDataTable() {
                this.TableName = "SF_Clienti_SerialNumbers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_Clienti_SerialNumbersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SF_Clienti_SerialNumbersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MastroColumn {
                get {
                    return this.columnMastro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CapocColumn {
                get {
                    return this.columnCapoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContoColumn {
                get {
                    return this.columnConto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SottocColumn {
                get {
                    return this.columnSottoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodAnagraficoColumn {
                get {
                    return this.columnCodAnagrafico;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RagSocCognomeColumn {
                get {
                    return this.columnRagSocCognome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RagSocNomeColumn {
                get {
                    return this.columnRagSocNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RagSocCompletaColumn {
                get {
                    return this.columnRagSocCompleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IndirizzoFiscaleColumn {
                get {
                    return this.columnIndirizzoFiscale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Clienti_SerialNumbersRow this[int index] {
                get {
                    return ((SF_Clienti_SerialNumbersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Clienti_SerialNumbersRowChangeEventHandler SF_Clienti_SerialNumbersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Clienti_SerialNumbersRowChangeEventHandler SF_Clienti_SerialNumbersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Clienti_SerialNumbersRowChangeEventHandler SF_Clienti_SerialNumbersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Clienti_SerialNumbersRowChangeEventHandler SF_Clienti_SerialNumbersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSF_Clienti_SerialNumbersRow(SF_Clienti_SerialNumbersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Clienti_SerialNumbersRow AddSF_Clienti_SerialNumbersRow(short Mastro, byte Capoc, byte Conto, int Sottoc, int CodAnagrafico, string RagSocCognome, string RagSocNome, string RagSocCompleta, string IndirizzoFiscale) {
                SF_Clienti_SerialNumbersRow rowSF_Clienti_SerialNumbersRow = ((SF_Clienti_SerialNumbersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Mastro,
                        Capoc,
                        Conto,
                        Sottoc,
                        CodAnagrafico,
                        RagSocCognome,
                        RagSocNome,
                        RagSocCompleta,
                        IndirizzoFiscale};
                rowSF_Clienti_SerialNumbersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSF_Clienti_SerialNumbersRow);
                return rowSF_Clienti_SerialNumbersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SF_Clienti_SerialNumbersDataTable cln = ((SF_Clienti_SerialNumbersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SF_Clienti_SerialNumbersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnMastro = base.Columns["Mastro"];
                this.columnCapoc = base.Columns["Capoc"];
                this.columnConto = base.Columns["Conto"];
                this.columnSottoc = base.Columns["Sottoc"];
                this.columnCodAnagrafico = base.Columns["CodAnagrafico"];
                this.columnRagSocCognome = base.Columns["RagSocCognome"];
                this.columnRagSocNome = base.Columns["RagSocNome"];
                this.columnRagSocCompleta = base.Columns["RagSocCompleta"];
                this.columnIndirizzoFiscale = base.Columns["IndirizzoFiscale"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnMastro = new global::System.Data.DataColumn("Mastro", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMastro);
                this.columnCapoc = new global::System.Data.DataColumn("Capoc", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCapoc);
                this.columnConto = new global::System.Data.DataColumn("Conto", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConto);
                this.columnSottoc = new global::System.Data.DataColumn("Sottoc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSottoc);
                this.columnCodAnagrafico = new global::System.Data.DataColumn("CodAnagrafico", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodAnagrafico);
                this.columnRagSocCognome = new global::System.Data.DataColumn("RagSocCognome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRagSocCognome);
                this.columnRagSocNome = new global::System.Data.DataColumn("RagSocNome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRagSocNome);
                this.columnRagSocCompleta = new global::System.Data.DataColumn("RagSocCompleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRagSocCompleta);
                this.columnIndirizzoFiscale = new global::System.Data.DataColumn("IndirizzoFiscale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndirizzoFiscale);
                this.columnRagSocCognome.MaxLength = 50;
                this.columnRagSocNome.MaxLength = 50;
                this.columnRagSocCompleta.MaxLength = 100;
                this.columnIndirizzoFiscale.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Clienti_SerialNumbersRow NewSF_Clienti_SerialNumbersRow() {
                return ((SF_Clienti_SerialNumbersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SF_Clienti_SerialNumbersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SF_Clienti_SerialNumbersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SF_Clienti_SerialNumbersRowChanged != null)) {
                    this.SF_Clienti_SerialNumbersRowChanged(this, new SF_Clienti_SerialNumbersRowChangeEvent(((SF_Clienti_SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SF_Clienti_SerialNumbersRowChanging != null)) {
                    this.SF_Clienti_SerialNumbersRowChanging(this, new SF_Clienti_SerialNumbersRowChangeEvent(((SF_Clienti_SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SF_Clienti_SerialNumbersRowDeleted != null)) {
                    this.SF_Clienti_SerialNumbersRowDeleted(this, new SF_Clienti_SerialNumbersRowChangeEvent(((SF_Clienti_SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SF_Clienti_SerialNumbersRowDeleting != null)) {
                    this.SF_Clienti_SerialNumbersRowDeleting(this, new SF_Clienti_SerialNumbersRowChangeEvent(((SF_Clienti_SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSF_Clienti_SerialNumbersRow(SF_Clienti_SerialNumbersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_SL_History ds = new ds_SL_History();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SF_Clienti_SerialNumbersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SerialNumbersDataTable : global::System.Data.TypedTableBase<SerialNumbersRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSer_Kit;
            
            private global::System.Data.DataColumn columnSer_ID_Cli;
            
            private global::System.Data.DataColumn columnSer_Device;
            
            private global::System.Data.DataColumn columnSer_Device_ID_Code;
            
            private global::System.Data.DataColumn columnSer_OfficialSerial;
            
            private global::System.Data.DataColumn columnSer_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_SW_Code;
            
            private global::System.Data.DataColumn columnSer_SW_Code_Rev;
            
            private global::System.Data.DataColumn columnSer_SW_Std_Type;
            
            private global::System.Data.DataColumn columnSer_SN_prod;
            
            private global::System.Data.DataColumn columnSer_Commessa;
            
            private global::System.Data.DataColumn columnSer_DateProduction;
            
            private global::System.Data.DataColumn columnSer_Spedito;
            
            private global::System.Data.DataColumn columnSer_Data_Spedito;
            
            private global::System.Data.DataColumn columnSer_Substition_ID_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_Note;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersDataTable() {
                this.TableName = "SerialNumbers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SerialNumbersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_KitColumn {
                get {
                    return this.columnSer_Kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ID_CliColumn {
                get {
                    return this.columnSer_ID_Cli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DeviceColumn {
                get {
                    return this.columnSer_Device;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Device_ID_CodeColumn {
                get {
                    return this.columnSer_Device_ID_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_OfficialSerialColumn {
                get {
                    return this.columnSer_OfficialSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ReadSerialColumn {
                get {
                    return this.columnSer_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_CodeColumn {
                get {
                    return this.columnSer_SW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Code_RevColumn {
                get {
                    return this.columnSer_SW_Code_Rev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Std_TypeColumn {
                get {
                    return this.columnSer_SW_Std_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SN_prodColumn {
                get {
                    return this.columnSer_SN_prod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_CommessaColumn {
                get {
                    return this.columnSer_Commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DateProductionColumn {
                get {
                    return this.columnSer_DateProduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SpeditoColumn {
                get {
                    return this.columnSer_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Data_SpeditoColumn {
                get {
                    return this.columnSer_Data_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Substition_ID_ReadSerialColumn {
                get {
                    return this.columnSer_Substition_ID_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_NoteColumn {
                get {
                    return this.columnSer_Note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow this[int index] {
                get {
                    return ((SerialNumbersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSerialNumbersRow(SerialNumbersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow AddSerialNumbersRow(
                        string Ser_Kit, 
                        int Ser_ID_Cli, 
                        string Ser_Device, 
                        string Ser_Device_ID_Code, 
                        string Ser_OfficialSerial, 
                        string Ser_ReadSerial, 
                        string Ser_SW_Code, 
                        string Ser_SW_Code_Rev, 
                        bool Ser_SW_Std_Type, 
                        string Ser_SN_prod, 
                        string Ser_Commessa, 
                        System.DateTime Ser_DateProduction, 
                        bool Ser_Spedito, 
                        System.DateTime Ser_Data_Spedito, 
                        string Ser_Substition_ID_ReadSerial, 
                        string Ser_Note) {
                SerialNumbersRow rowSerialNumbersRow = ((SerialNumbersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Ser_Kit,
                        Ser_ID_Cli,
                        Ser_Device,
                        Ser_Device_ID_Code,
                        Ser_OfficialSerial,
                        Ser_ReadSerial,
                        Ser_SW_Code,
                        Ser_SW_Code_Rev,
                        Ser_SW_Std_Type,
                        Ser_SN_prod,
                        Ser_Commessa,
                        Ser_DateProduction,
                        Ser_Spedito,
                        Ser_Data_Spedito,
                        Ser_Substition_ID_ReadSerial,
                        Ser_Note};
                rowSerialNumbersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSerialNumbersRow);
                return rowSerialNumbersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow FindById(int Id) {
                return ((SerialNumbersRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SerialNumbersDataTable cln = ((SerialNumbersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SerialNumbersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSer_Kit = base.Columns["Ser_Kit"];
                this.columnSer_ID_Cli = base.Columns["Ser_ID_Cli"];
                this.columnSer_Device = base.Columns["Ser_Device"];
                this.columnSer_Device_ID_Code = base.Columns["Ser_Device_ID_Code"];
                this.columnSer_OfficialSerial = base.Columns["Ser_OfficialSerial"];
                this.columnSer_ReadSerial = base.Columns["Ser_ReadSerial"];
                this.columnSer_SW_Code = base.Columns["Ser_SW_Code"];
                this.columnSer_SW_Code_Rev = base.Columns["Ser_SW_Code_Rev"];
                this.columnSer_SW_Std_Type = base.Columns["Ser_SW_Std_Type"];
                this.columnSer_SN_prod = base.Columns["Ser_SN_prod"];
                this.columnSer_Commessa = base.Columns["Ser_Commessa"];
                this.columnSer_DateProduction = base.Columns["Ser_DateProduction"];
                this.columnSer_Spedito = base.Columns["Ser_Spedito"];
                this.columnSer_Data_Spedito = base.Columns["Ser_Data_Spedito"];
                this.columnSer_Substition_ID_ReadSerial = base.Columns["Ser_Substition_ID_ReadSerial"];
                this.columnSer_Note = base.Columns["Ser_Note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSer_Kit = new global::System.Data.DataColumn("Ser_Kit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Kit);
                this.columnSer_ID_Cli = new global::System.Data.DataColumn("Ser_ID_Cli", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ID_Cli);
                this.columnSer_Device = new global::System.Data.DataColumn("Ser_Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device);
                this.columnSer_Device_ID_Code = new global::System.Data.DataColumn("Ser_Device_ID_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device_ID_Code);
                this.columnSer_OfficialSerial = new global::System.Data.DataColumn("Ser_OfficialSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_OfficialSerial);
                this.columnSer_ReadSerial = new global::System.Data.DataColumn("Ser_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ReadSerial);
                this.columnSer_SW_Code = new global::System.Data.DataColumn("Ser_SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code);
                this.columnSer_SW_Code_Rev = new global::System.Data.DataColumn("Ser_SW_Code_Rev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code_Rev);
                this.columnSer_SW_Std_Type = new global::System.Data.DataColumn("Ser_SW_Std_Type", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Std_Type);
                this.columnSer_SN_prod = new global::System.Data.DataColumn("Ser_SN_prod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SN_prod);
                this.columnSer_Commessa = new global::System.Data.DataColumn("Ser_Commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Commessa);
                this.columnSer_DateProduction = new global::System.Data.DataColumn("Ser_DateProduction", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_DateProduction);
                this.columnSer_Spedito = new global::System.Data.DataColumn("Ser_Spedito", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Spedito);
                this.columnSer_Data_Spedito = new global::System.Data.DataColumn("Ser_Data_Spedito", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Data_Spedito);
                this.columnSer_Substition_ID_ReadSerial = new global::System.Data.DataColumn("Ser_Substition_ID_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Substition_ID_ReadSerial);
                this.columnSer_Note = new global::System.Data.DataColumn("Ser_Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Note);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnSer_Kit.MaxLength = 25;
                this.columnSer_Device.MaxLength = 25;
                this.columnSer_Device_ID_Code.MaxLength = 4;
                this.columnSer_OfficialSerial.MaxLength = 25;
                this.columnSer_ReadSerial.MaxLength = 25;
                this.columnSer_SW_Code.MaxLength = 25;
                this.columnSer_SW_Code_Rev.MaxLength = 5;
                this.columnSer_SN_prod.MaxLength = 11;
                this.columnSer_Commessa.MaxLength = 25;
                this.columnSer_Spedito.AllowDBNull = false;
                this.columnSer_Substition_ID_ReadSerial.MaxLength = 25;
                this.columnSer_Note.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow NewSerialNumbersRow() {
                return ((SerialNumbersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SerialNumbersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SerialNumbersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SerialNumbersRowChanged != null)) {
                    this.SerialNumbersRowChanged(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SerialNumbersRowChanging != null)) {
                    this.SerialNumbersRowChanging(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SerialNumbersRowDeleted != null)) {
                    this.SerialNumbersRowDeleted(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SerialNumbersRowDeleting != null)) {
                    this.SerialNumbersRowDeleting(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSerialNumbersRow(SerialNumbersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_SL_History ds = new ds_SL_History();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SerialNumbersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FirmwareDataTable : global::System.Data.TypedTableBase<FirmwareRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSW_Code;
            
            private global::System.Data.DataColumn columnSW_TipoDevice;
            
            private global::System.Data.DataColumn columnSW_Descrizione;
            
            private global::System.Data.DataColumn columnSW_Descrizione_EN;
            
            private global::System.Data.DataColumn columnSW_Versione;
            
            private global::System.Data.DataColumn columnSW_Revisione;
            
            private global::System.Data.DataColumn columnSW_Standard;
            
            private global::System.Data.DataColumn columnSW_FamProd;
            
            private global::System.Data.DataColumn columnSW_P_Opt_RF;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Oled;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_EmButt;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Backlight;
            
            private global::System.Data.DataColumn columnSW_P_Opt_ShiftPage;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Accel;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_SP;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Buzzer;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Vibracall;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_LedTorch;
            
            private global::System.Data.DataColumn columnSW_P_PLD;
            
            private global::System.Data.DataColumn columnSW_P_Opt_MaxPairDevices;
            
            private global::System.Data.DataColumn columnSW_R_Opt_RF;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Plug_Exp;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Plug_Ple;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Em_Keyb;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Can;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Prop_Out;
            
            private global::System.Data.DataColumn columnSW_R_Opt_TimeOut;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Cont_Keys;
            
            private global::System.Data.DataColumn columnSW_R_Opt_LockSameRow;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Use_SP;
            
            private global::System.Data.DataColumn columnSW_R_Opt_MaxPairDevices;
            
            private global::System.Data.DataColumn columnSW_R_Opt_ShiftPage;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Output_No;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Dig_Input_No;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Ana_Input_No;
            
            private global::System.Data.DataColumn columnSW_Revisioni;
            
            private global::System.Data.DataColumn columnSW_Funzionamento;
            
            private global::System.Data.DataColumn columnSW_Config;
            
            private global::System.Data.DataColumn columnSW_Obsolete_ver;
            
            private global::System.Data.DataColumn columnSW_Obsolete_ver_from_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareDataTable() {
                this.TableName = "Firmware";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FirmwareDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FirmwareDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_CodeColumn {
                get {
                    return this.columnSW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_TipoDeviceColumn {
                get {
                    return this.columnSW_TipoDevice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_DescrizioneColumn {
                get {
                    return this.columnSW_Descrizione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Descrizione_ENColumn {
                get {
                    return this.columnSW_Descrizione_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_VersioneColumn {
                get {
                    return this.columnSW_Versione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_RevisioneColumn {
                get {
                    return this.columnSW_Revisione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_StandardColumn {
                get {
                    return this.columnSW_Standard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_FamProdColumn {
                get {
                    return this.columnSW_FamProd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_RFColumn {
                get {
                    return this.columnSW_P_Opt_RF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_OledColumn {
                get {
                    return this.columnSW_P_Opt_Use_Oled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_EmButtColumn {
                get {
                    return this.columnSW_P_Opt_Use_EmButt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_BacklightColumn {
                get {
                    return this.columnSW_P_Opt_Use_Backlight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_ShiftPageColumn {
                get {
                    return this.columnSW_P_Opt_ShiftPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_AccelColumn {
                get {
                    return this.columnSW_P_Opt_Use_Accel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_SPColumn {
                get {
                    return this.columnSW_P_Opt_Use_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_BuzzerColumn {
                get {
                    return this.columnSW_P_Opt_Use_Buzzer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_VibracallColumn {
                get {
                    return this.columnSW_P_Opt_Use_Vibracall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_LedTorchColumn {
                get {
                    return this.columnSW_P_Opt_Use_LedTorch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_PLDColumn {
                get {
                    return this.columnSW_P_PLD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_MaxPairDevicesColumn {
                get {
                    return this.columnSW_P_Opt_MaxPairDevices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_RFColumn {
                get {
                    return this.columnSW_R_Opt_RF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Plug_ExpColumn {
                get {
                    return this.columnSW_R_Opt_Plug_Exp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Plug_PleColumn {
                get {
                    return this.columnSW_R_Opt_Plug_Ple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Em_KeybColumn {
                get {
                    return this.columnSW_R_Opt_Em_Keyb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_CanColumn {
                get {
                    return this.columnSW_R_Opt_Can;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Prop_OutColumn {
                get {
                    return this.columnSW_R_Opt_Prop_Out;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_TimeOutColumn {
                get {
                    return this.columnSW_R_Opt_TimeOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Cont_KeysColumn {
                get {
                    return this.columnSW_R_Opt_Cont_Keys;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_LockSameRowColumn {
                get {
                    return this.columnSW_R_Opt_LockSameRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Use_SPColumn {
                get {
                    return this.columnSW_R_Opt_Use_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_MaxPairDevicesColumn {
                get {
                    return this.columnSW_R_Opt_MaxPairDevices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_ShiftPageColumn {
                get {
                    return this.columnSW_R_Opt_ShiftPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Output_NoColumn {
                get {
                    return this.columnSW_R_Opt_Output_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Dig_Input_NoColumn {
                get {
                    return this.columnSW_R_Opt_Dig_Input_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Ana_Input_NoColumn {
                get {
                    return this.columnSW_R_Opt_Ana_Input_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_RevisioniColumn {
                get {
                    return this.columnSW_Revisioni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_FunzionamentoColumn {
                get {
                    return this.columnSW_Funzionamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_ConfigColumn {
                get {
                    return this.columnSW_Config;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Obsolete_verColumn {
                get {
                    return this.columnSW_Obsolete_ver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Obsolete_ver_from_dateColumn {
                get {
                    return this.columnSW_Obsolete_ver_from_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow this[int index] {
                get {
                    return ((FirmwareRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFirmwareRow(FirmwareRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow AddFirmwareRow(
                        string SW_Code, 
                        string SW_TipoDevice, 
                        string SW_Descrizione, 
                        string SW_Descrizione_EN, 
                        string SW_Versione, 
                        string SW_Revisione, 
                        bool SW_Standard, 
                        string SW_FamProd, 
                        string SW_P_Opt_RF, 
                        bool SW_P_Opt_Use_Oled, 
                        bool SW_P_Opt_Use_EmButt, 
                        bool SW_P_Opt_Use_Backlight, 
                        bool SW_P_Opt_ShiftPage, 
                        bool SW_P_Opt_Use_Accel, 
                        bool SW_P_Opt_Use_SP, 
                        bool SW_P_Opt_Use_Buzzer, 
                        bool SW_P_Opt_Use_Vibracall, 
                        bool SW_P_Opt_Use_LedTorch, 
                        bool SW_P_PLD, 
                        int SW_P_Opt_MaxPairDevices, 
                        string SW_R_Opt_RF, 
                        bool SW_R_Opt_Plug_Exp, 
                        bool SW_R_Opt_Plug_Ple, 
                        bool SW_R_Opt_Em_Keyb, 
                        bool SW_R_Opt_Can, 
                        bool SW_R_Opt_Prop_Out, 
                        string SW_R_Opt_TimeOut, 
                        int SW_R_Opt_Cont_Keys, 
                        bool SW_R_Opt_LockSameRow, 
                        bool SW_R_Opt_Use_SP, 
                        int SW_R_Opt_MaxPairDevices, 
                        bool SW_R_Opt_ShiftPage, 
                        int SW_R_Opt_Output_No, 
                        int SW_R_Opt_Dig_Input_No, 
                        int SW_R_Opt_Ana_Input_No, 
                        string SW_Revisioni, 
                        string SW_Funzionamento, 
                        string SW_Config, 
                        bool SW_Obsolete_ver, 
                        System.DateTime SW_Obsolete_ver_from_date) {
                FirmwareRow rowFirmwareRow = ((FirmwareRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SW_Code,
                        SW_TipoDevice,
                        SW_Descrizione,
                        SW_Descrizione_EN,
                        SW_Versione,
                        SW_Revisione,
                        SW_Standard,
                        SW_FamProd,
                        SW_P_Opt_RF,
                        SW_P_Opt_Use_Oled,
                        SW_P_Opt_Use_EmButt,
                        SW_P_Opt_Use_Backlight,
                        SW_P_Opt_ShiftPage,
                        SW_P_Opt_Use_Accel,
                        SW_P_Opt_Use_SP,
                        SW_P_Opt_Use_Buzzer,
                        SW_P_Opt_Use_Vibracall,
                        SW_P_Opt_Use_LedTorch,
                        SW_P_PLD,
                        SW_P_Opt_MaxPairDevices,
                        SW_R_Opt_RF,
                        SW_R_Opt_Plug_Exp,
                        SW_R_Opt_Plug_Ple,
                        SW_R_Opt_Em_Keyb,
                        SW_R_Opt_Can,
                        SW_R_Opt_Prop_Out,
                        SW_R_Opt_TimeOut,
                        SW_R_Opt_Cont_Keys,
                        SW_R_Opt_LockSameRow,
                        SW_R_Opt_Use_SP,
                        SW_R_Opt_MaxPairDevices,
                        SW_R_Opt_ShiftPage,
                        SW_R_Opt_Output_No,
                        SW_R_Opt_Dig_Input_No,
                        SW_R_Opt_Ana_Input_No,
                        SW_Revisioni,
                        SW_Funzionamento,
                        SW_Config,
                        SW_Obsolete_ver,
                        SW_Obsolete_ver_from_date};
                rowFirmwareRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFirmwareRow);
                return rowFirmwareRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow FindById(int Id) {
                return ((FirmwareRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FirmwareDataTable cln = ((FirmwareDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FirmwareDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSW_Code = base.Columns["SW_Code"];
                this.columnSW_TipoDevice = base.Columns["SW_TipoDevice"];
                this.columnSW_Descrizione = base.Columns["SW_Descrizione"];
                this.columnSW_Descrizione_EN = base.Columns["SW_Descrizione_EN"];
                this.columnSW_Versione = base.Columns["SW_Versione"];
                this.columnSW_Revisione = base.Columns["SW_Revisione"];
                this.columnSW_Standard = base.Columns["SW_Standard"];
                this.columnSW_FamProd = base.Columns["SW_FamProd"];
                this.columnSW_P_Opt_RF = base.Columns["SW_P_Opt_RF"];
                this.columnSW_P_Opt_Use_Oled = base.Columns["SW_P_Opt_Use_Oled"];
                this.columnSW_P_Opt_Use_EmButt = base.Columns["SW_P_Opt_Use_EmButt"];
                this.columnSW_P_Opt_Use_Backlight = base.Columns["SW_P_Opt_Use_Backlight"];
                this.columnSW_P_Opt_ShiftPage = base.Columns["SW_P_Opt_ShiftPage"];
                this.columnSW_P_Opt_Use_Accel = base.Columns["SW_P_Opt_Use_Accel"];
                this.columnSW_P_Opt_Use_SP = base.Columns["SW_P_Opt_Use_SP"];
                this.columnSW_P_Opt_Use_Buzzer = base.Columns["SW_P_Opt_Use_Buzzer"];
                this.columnSW_P_Opt_Use_Vibracall = base.Columns["SW_P_Opt_Use_Vibracall"];
                this.columnSW_P_Opt_Use_LedTorch = base.Columns["SW_P_Opt_Use_LedTorch"];
                this.columnSW_P_PLD = base.Columns["SW_P_PLD"];
                this.columnSW_P_Opt_MaxPairDevices = base.Columns["SW_P_Opt_MaxPairDevices"];
                this.columnSW_R_Opt_RF = base.Columns["SW_R_Opt_RF"];
                this.columnSW_R_Opt_Plug_Exp = base.Columns["SW_R_Opt_Plug_Exp"];
                this.columnSW_R_Opt_Plug_Ple = base.Columns["SW_R_Opt_Plug_Ple"];
                this.columnSW_R_Opt_Em_Keyb = base.Columns["SW_R_Opt_Em_Keyb"];
                this.columnSW_R_Opt_Can = base.Columns["SW_R_Opt_Can"];
                this.columnSW_R_Opt_Prop_Out = base.Columns["SW_R_Opt_Prop_Out"];
                this.columnSW_R_Opt_TimeOut = base.Columns["SW_R_Opt_TimeOut"];
                this.columnSW_R_Opt_Cont_Keys = base.Columns["SW_R_Opt_Cont_Keys"];
                this.columnSW_R_Opt_LockSameRow = base.Columns["SW_R_Opt_LockSameRow"];
                this.columnSW_R_Opt_Use_SP = base.Columns["SW_R_Opt_Use_SP"];
                this.columnSW_R_Opt_MaxPairDevices = base.Columns["SW_R_Opt_MaxPairDevices"];
                this.columnSW_R_Opt_ShiftPage = base.Columns["SW_R_Opt_ShiftPage"];
                this.columnSW_R_Opt_Output_No = base.Columns["SW_R_Opt_Output_No"];
                this.columnSW_R_Opt_Dig_Input_No = base.Columns["SW_R_Opt_Dig_Input_No"];
                this.columnSW_R_Opt_Ana_Input_No = base.Columns["SW_R_Opt_Ana_Input_No"];
                this.columnSW_Revisioni = base.Columns["SW_Revisioni"];
                this.columnSW_Funzionamento = base.Columns["SW_Funzionamento"];
                this.columnSW_Config = base.Columns["SW_Config"];
                this.columnSW_Obsolete_ver = base.Columns["SW_Obsolete_ver"];
                this.columnSW_Obsolete_ver_from_date = base.Columns["SW_Obsolete_ver_from_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSW_Code = new global::System.Data.DataColumn("SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Code);
                this.columnSW_TipoDevice = new global::System.Data.DataColumn("SW_TipoDevice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_TipoDevice);
                this.columnSW_Descrizione = new global::System.Data.DataColumn("SW_Descrizione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Descrizione);
                this.columnSW_Descrizione_EN = new global::System.Data.DataColumn("SW_Descrizione_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Descrizione_EN);
                this.columnSW_Versione = new global::System.Data.DataColumn("SW_Versione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Versione);
                this.columnSW_Revisione = new global::System.Data.DataColumn("SW_Revisione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Revisione);
                this.columnSW_Standard = new global::System.Data.DataColumn("SW_Standard", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Standard);
                this.columnSW_FamProd = new global::System.Data.DataColumn("SW_FamProd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_FamProd);
                this.columnSW_P_Opt_RF = new global::System.Data.DataColumn("SW_P_Opt_RF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_RF);
                this.columnSW_P_Opt_Use_Oled = new global::System.Data.DataColumn("SW_P_Opt_Use_Oled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Oled);
                this.columnSW_P_Opt_Use_EmButt = new global::System.Data.DataColumn("SW_P_Opt_Use_EmButt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_EmButt);
                this.columnSW_P_Opt_Use_Backlight = new global::System.Data.DataColumn("SW_P_Opt_Use_Backlight", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Backlight);
                this.columnSW_P_Opt_ShiftPage = new global::System.Data.DataColumn("SW_P_Opt_ShiftPage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_ShiftPage);
                this.columnSW_P_Opt_Use_Accel = new global::System.Data.DataColumn("SW_P_Opt_Use_Accel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Accel);
                this.columnSW_P_Opt_Use_SP = new global::System.Data.DataColumn("SW_P_Opt_Use_SP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_SP);
                this.columnSW_P_Opt_Use_Buzzer = new global::System.Data.DataColumn("SW_P_Opt_Use_Buzzer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Buzzer);
                this.columnSW_P_Opt_Use_Vibracall = new global::System.Data.DataColumn("SW_P_Opt_Use_Vibracall", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Vibracall);
                this.columnSW_P_Opt_Use_LedTorch = new global::System.Data.DataColumn("SW_P_Opt_Use_LedTorch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_LedTorch);
                this.columnSW_P_PLD = new global::System.Data.DataColumn("SW_P_PLD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_PLD);
                this.columnSW_P_Opt_MaxPairDevices = new global::System.Data.DataColumn("SW_P_Opt_MaxPairDevices", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_MaxPairDevices);
                this.columnSW_R_Opt_RF = new global::System.Data.DataColumn("SW_R_Opt_RF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_RF);
                this.columnSW_R_Opt_Plug_Exp = new global::System.Data.DataColumn("SW_R_Opt_Plug_Exp", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Plug_Exp);
                this.columnSW_R_Opt_Plug_Ple = new global::System.Data.DataColumn("SW_R_Opt_Plug_Ple", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Plug_Ple);
                this.columnSW_R_Opt_Em_Keyb = new global::System.Data.DataColumn("SW_R_Opt_Em_Keyb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Em_Keyb);
                this.columnSW_R_Opt_Can = new global::System.Data.DataColumn("SW_R_Opt_Can", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Can);
                this.columnSW_R_Opt_Prop_Out = new global::System.Data.DataColumn("SW_R_Opt_Prop_Out", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Prop_Out);
                this.columnSW_R_Opt_TimeOut = new global::System.Data.DataColumn("SW_R_Opt_TimeOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_TimeOut);
                this.columnSW_R_Opt_Cont_Keys = new global::System.Data.DataColumn("SW_R_Opt_Cont_Keys", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Cont_Keys);
                this.columnSW_R_Opt_LockSameRow = new global::System.Data.DataColumn("SW_R_Opt_LockSameRow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_LockSameRow);
                this.columnSW_R_Opt_Use_SP = new global::System.Data.DataColumn("SW_R_Opt_Use_SP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Use_SP);
                this.columnSW_R_Opt_MaxPairDevices = new global::System.Data.DataColumn("SW_R_Opt_MaxPairDevices", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_MaxPairDevices);
                this.columnSW_R_Opt_ShiftPage = new global::System.Data.DataColumn("SW_R_Opt_ShiftPage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_ShiftPage);
                this.columnSW_R_Opt_Output_No = new global::System.Data.DataColumn("SW_R_Opt_Output_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Output_No);
                this.columnSW_R_Opt_Dig_Input_No = new global::System.Data.DataColumn("SW_R_Opt_Dig_Input_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Dig_Input_No);
                this.columnSW_R_Opt_Ana_Input_No = new global::System.Data.DataColumn("SW_R_Opt_Ana_Input_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Ana_Input_No);
                this.columnSW_Revisioni = new global::System.Data.DataColumn("SW_Revisioni", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Revisioni);
                this.columnSW_Funzionamento = new global::System.Data.DataColumn("SW_Funzionamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Funzionamento);
                this.columnSW_Config = new global::System.Data.DataColumn("SW_Config", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Config);
                this.columnSW_Obsolete_ver = new global::System.Data.DataColumn("SW_Obsolete_ver", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Obsolete_ver);
                this.columnSW_Obsolete_ver_from_date = new global::System.Data.DataColumn("SW_Obsolete_ver_from_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Obsolete_ver_from_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnSW_Code.AllowDBNull = false;
                this.columnSW_Code.MaxLength = 25;
                this.columnSW_TipoDevice.AllowDBNull = false;
                this.columnSW_TipoDevice.MaxLength = 1;
                this.columnSW_Descrizione.MaxLength = 255;
                this.columnSW_Descrizione_EN.MaxLength = 255;
                this.columnSW_Versione.MaxLength = 6;
                this.columnSW_Revisione.MaxLength = 3;
                this.columnSW_Standard.AllowDBNull = false;
                this.columnSW_FamProd.MaxLength = 20;
                this.columnSW_P_Opt_RF.AllowDBNull = false;
                this.columnSW_P_Opt_RF.MaxLength = 10;
                this.columnSW_P_Opt_Use_Oled.AllowDBNull = false;
                this.columnSW_P_Opt_Use_EmButt.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Backlight.AllowDBNull = false;
                this.columnSW_P_Opt_ShiftPage.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Accel.AllowDBNull = false;
                this.columnSW_P_Opt_Use_SP.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Buzzer.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Vibracall.AllowDBNull = false;
                this.columnSW_P_Opt_Use_LedTorch.AllowDBNull = false;
                this.columnSW_P_PLD.AllowDBNull = false;
                this.columnSW_R_Opt_RF.AllowDBNull = false;
                this.columnSW_R_Opt_RF.MaxLength = 10;
                this.columnSW_R_Opt_Plug_Exp.AllowDBNull = false;
                this.columnSW_R_Opt_Plug_Ple.AllowDBNull = false;
                this.columnSW_R_Opt_Em_Keyb.AllowDBNull = false;
                this.columnSW_R_Opt_Can.AllowDBNull = false;
                this.columnSW_R_Opt_Prop_Out.AllowDBNull = false;
                this.columnSW_R_Opt_TimeOut.AllowDBNull = false;
                this.columnSW_R_Opt_TimeOut.MaxLength = 10;
                this.columnSW_R_Opt_LockSameRow.AllowDBNull = false;
                this.columnSW_R_Opt_Use_SP.AllowDBNull = false;
                this.columnSW_R_Opt_ShiftPage.AllowDBNull = false;
                this.columnSW_Revisioni.MaxLength = 2147483647;
                this.columnSW_Funzionamento.MaxLength = 2147483647;
                this.columnSW_Config.MaxLength = 2147483647;
                this.columnSW_Obsolete_ver.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow NewFirmwareRow() {
                return ((FirmwareRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FirmwareRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FirmwareRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FirmwareRowChanged != null)) {
                    this.FirmwareRowChanged(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FirmwareRowChanging != null)) {
                    this.FirmwareRowChanging(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FirmwareRowDeleted != null)) {
                    this.FirmwareRowDeleted(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FirmwareRowDeleting != null)) {
                    this.FirmwareRowDeleting(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFirmwareRow(FirmwareRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_SL_History ds = new ds_SL_History();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FirmwareDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BS_SN_HistoryDataTable : global::System.Data.TypedTableBase<BS_SN_HistoryRow> {
            
            private global::System.Data.DataColumn columnserialnumber;
            
            private global::System.Data.DataColumn columnversion;
            
            private global::System.Data.DataColumn columnrevision;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columndevice_id;
            
            private global::System.Data.DataColumn columncreated_at;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnextras;
            
            private global::System.Data.DataColumn columnuser_email;
            
            private global::System.Data.DataColumn columncustomer_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BS_SN_HistoryDataTable() {
                this.TableName = "BS_SN_History";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BS_SN_HistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BS_SN_HistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn serialnumberColumn {
                get {
                    return this.columnserialnumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn versionColumn {
                get {
                    return this.columnversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn revisionColumn {
                get {
                    return this.columnrevision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn device_idColumn {
                get {
                    return this.columndevice_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn created_atColumn {
                get {
                    return this.columncreated_at;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn extrasColumn {
                get {
                    return this.columnextras;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn user_emailColumn {
                get {
                    return this.columnuser_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn customer_nameColumn {
                get {
                    return this.columncustomer_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BS_SN_HistoryRow this[int index] {
                get {
                    return ((BS_SN_HistoryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BS_SN_HistoryRowChangeEventHandler BS_SN_HistoryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BS_SN_HistoryRowChangeEventHandler BS_SN_HistoryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BS_SN_HistoryRowChangeEventHandler BS_SN_HistoryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BS_SN_HistoryRowChangeEventHandler BS_SN_HistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBS_SN_HistoryRow(BS_SN_HistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BS_SN_HistoryRow AddBS_SN_HistoryRow(string serialnumber, string version, string revision, int user_id, string device_id, System.DateTime created_at, string type, string extras, string user_email, string customer_name) {
                BS_SN_HistoryRow rowBS_SN_HistoryRow = ((BS_SN_HistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        serialnumber,
                        version,
                        revision,
                        user_id,
                        device_id,
                        created_at,
                        type,
                        extras,
                        user_email,
                        customer_name};
                rowBS_SN_HistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBS_SN_HistoryRow);
                return rowBS_SN_HistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BS_SN_HistoryDataTable cln = ((BS_SN_HistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BS_SN_HistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnserialnumber = base.Columns["serialnumber"];
                this.columnversion = base.Columns["version"];
                this.columnrevision = base.Columns["revision"];
                this.columnuser_id = base.Columns["user_id"];
                this.columndevice_id = base.Columns["device_id"];
                this.columncreated_at = base.Columns["created_at"];
                this.columntype = base.Columns["type"];
                this.columnextras = base.Columns["extras"];
                this.columnuser_email = base.Columns["user_email"];
                this.columncustomer_name = base.Columns["customer_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnserialnumber = new global::System.Data.DataColumn("serialnumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserialnumber);
                this.columnversion = new global::System.Data.DataColumn("version", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnversion);
                this.columnrevision = new global::System.Data.DataColumn("revision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrevision);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columndevice_id = new global::System.Data.DataColumn("device_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndevice_id);
                this.columncreated_at = new global::System.Data.DataColumn("created_at", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated_at);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnextras = new global::System.Data.DataColumn("extras", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnextras);
                this.columnuser_email = new global::System.Data.DataColumn("user_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_email);
                this.columncustomer_name = new global::System.Data.DataColumn("customer_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer_name);
                this.columnserialnumber.MaxLength = 255;
                this.columnversion.MaxLength = 255;
                this.columnrevision.MaxLength = 255;
                this.columndevice_id.MaxLength = 255;
                this.columntype.MaxLength = 30;
                this.columnextras.MaxLength = 2147483647;
                this.columnuser_email.MaxLength = 255;
                this.columncustomer_name.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BS_SN_HistoryRow NewBS_SN_HistoryRow() {
                return ((BS_SN_HistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BS_SN_HistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BS_SN_HistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BS_SN_HistoryRowChanged != null)) {
                    this.BS_SN_HistoryRowChanged(this, new BS_SN_HistoryRowChangeEvent(((BS_SN_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BS_SN_HistoryRowChanging != null)) {
                    this.BS_SN_HistoryRowChanging(this, new BS_SN_HistoryRowChangeEvent(((BS_SN_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BS_SN_HistoryRowDeleted != null)) {
                    this.BS_SN_HistoryRowDeleted(this, new BS_SN_HistoryRowChangeEvent(((BS_SN_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BS_SN_HistoryRowDeleting != null)) {
                    this.BS_SN_HistoryRowDeleting(this, new BS_SN_HistoryRowChangeEvent(((BS_SN_HistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBS_SN_HistoryRow(BS_SN_HistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_SL_History ds = new ds_SL_History();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BS_SN_HistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SerialNumbers_ObsoleteDataTable : global::System.Data.TypedTableBase<SerialNumbers_ObsoleteRow> {
            
            private global::System.Data.DataColumn columnSer_Kit;
            
            private global::System.Data.DataColumn columnSer_ID_Cli;
            
            private global::System.Data.DataColumn columnSer_Device;
            
            private global::System.Data.DataColumn columnSer_Device_ID_Code;
            
            private global::System.Data.DataColumn columnSer_OfficialSerial;
            
            private global::System.Data.DataColumn columnSer_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_SW_Code;
            
            private global::System.Data.DataColumn columnSer_SW_Code_Rev;
            
            private global::System.Data.DataColumn columnSer_SW_Std_Type;
            
            private global::System.Data.DataColumn columnSer_SN_prod;
            
            private global::System.Data.DataColumn columnSer_Commessa;
            
            private global::System.Data.DataColumn columnSer_DateProduction;
            
            private global::System.Data.DataColumn columnSer_Spedito;
            
            private global::System.Data.DataColumn columnSer_Data_Spedito;
            
            private global::System.Data.DataColumn columnSer_Substition_ID_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_Note;
            
            private global::System.Data.DataColumn columnSer_ObsoleteFromDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteDataTable() {
                this.TableName = "SerialNumbers_Obsolete";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbers_ObsoleteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SerialNumbers_ObsoleteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_KitColumn {
                get {
                    return this.columnSer_Kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ID_CliColumn {
                get {
                    return this.columnSer_ID_Cli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DeviceColumn {
                get {
                    return this.columnSer_Device;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Device_ID_CodeColumn {
                get {
                    return this.columnSer_Device_ID_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_OfficialSerialColumn {
                get {
                    return this.columnSer_OfficialSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ReadSerialColumn {
                get {
                    return this.columnSer_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_CodeColumn {
                get {
                    return this.columnSer_SW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Code_RevColumn {
                get {
                    return this.columnSer_SW_Code_Rev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Std_TypeColumn {
                get {
                    return this.columnSer_SW_Std_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SN_prodColumn {
                get {
                    return this.columnSer_SN_prod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_CommessaColumn {
                get {
                    return this.columnSer_Commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DateProductionColumn {
                get {
                    return this.columnSer_DateProduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SpeditoColumn {
                get {
                    return this.columnSer_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Data_SpeditoColumn {
                get {
                    return this.columnSer_Data_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Substition_ID_ReadSerialColumn {
                get {
                    return this.columnSer_Substition_ID_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_NoteColumn {
                get {
                    return this.columnSer_Note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ObsoleteFromDateColumn {
                get {
                    return this.columnSer_ObsoleteFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow this[int index] {
                get {
                    return ((SerialNumbers_ObsoleteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSerialNumbers_ObsoleteRow(SerialNumbers_ObsoleteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow AddSerialNumbers_ObsoleteRow(
                        string Ser_Kit, 
                        int Ser_ID_Cli, 
                        string Ser_Device, 
                        string Ser_Device_ID_Code, 
                        string Ser_OfficialSerial, 
                        string Ser_ReadSerial, 
                        string Ser_SW_Code, 
                        string Ser_SW_Code_Rev, 
                        bool Ser_SW_Std_Type, 
                        SerialNumbersRow parentSerialNumbersRowBySerialNumbers_SerialNumbers_Obsolete, 
                        string Ser_Commessa, 
                        System.DateTime Ser_DateProduction, 
                        bool Ser_Spedito, 
                        System.DateTime Ser_Data_Spedito, 
                        string Ser_Substition_ID_ReadSerial, 
                        string Ser_Note, 
                        System.DateTime Ser_ObsoleteFromDate) {
                SerialNumbers_ObsoleteRow rowSerialNumbers_ObsoleteRow = ((SerialNumbers_ObsoleteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ser_Kit,
                        Ser_ID_Cli,
                        Ser_Device,
                        Ser_Device_ID_Code,
                        Ser_OfficialSerial,
                        Ser_ReadSerial,
                        Ser_SW_Code,
                        Ser_SW_Code_Rev,
                        Ser_SW_Std_Type,
                        null,
                        Ser_Commessa,
                        Ser_DateProduction,
                        Ser_Spedito,
                        Ser_Data_Spedito,
                        Ser_Substition_ID_ReadSerial,
                        Ser_Note,
                        Ser_ObsoleteFromDate};
                if ((parentSerialNumbersRowBySerialNumbers_SerialNumbers_Obsolete != null)) {
                    columnValuesArray[9] = parentSerialNumbersRowBySerialNumbers_SerialNumbers_Obsolete[10];
                }
                rowSerialNumbers_ObsoleteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSerialNumbers_ObsoleteRow);
                return rowSerialNumbers_ObsoleteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SerialNumbers_ObsoleteDataTable cln = ((SerialNumbers_ObsoleteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SerialNumbers_ObsoleteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSer_Kit = base.Columns["Ser_Kit"];
                this.columnSer_ID_Cli = base.Columns["Ser_ID_Cli"];
                this.columnSer_Device = base.Columns["Ser_Device"];
                this.columnSer_Device_ID_Code = base.Columns["Ser_Device_ID_Code"];
                this.columnSer_OfficialSerial = base.Columns["Ser_OfficialSerial"];
                this.columnSer_ReadSerial = base.Columns["Ser_ReadSerial"];
                this.columnSer_SW_Code = base.Columns["Ser_SW_Code"];
                this.columnSer_SW_Code_Rev = base.Columns["Ser_SW_Code_Rev"];
                this.columnSer_SW_Std_Type = base.Columns["Ser_SW_Std_Type"];
                this.columnSer_SN_prod = base.Columns["Ser_SN_prod"];
                this.columnSer_Commessa = base.Columns["Ser_Commessa"];
                this.columnSer_DateProduction = base.Columns["Ser_DateProduction"];
                this.columnSer_Spedito = base.Columns["Ser_Spedito"];
                this.columnSer_Data_Spedito = base.Columns["Ser_Data_Spedito"];
                this.columnSer_Substition_ID_ReadSerial = base.Columns["Ser_Substition_ID_ReadSerial"];
                this.columnSer_Note = base.Columns["Ser_Note"];
                this.columnSer_ObsoleteFromDate = base.Columns["Ser_ObsoleteFromDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSer_Kit = new global::System.Data.DataColumn("Ser_Kit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Kit);
                this.columnSer_ID_Cli = new global::System.Data.DataColumn("Ser_ID_Cli", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ID_Cli);
                this.columnSer_Device = new global::System.Data.DataColumn("Ser_Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device);
                this.columnSer_Device_ID_Code = new global::System.Data.DataColumn("Ser_Device_ID_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device_ID_Code);
                this.columnSer_OfficialSerial = new global::System.Data.DataColumn("Ser_OfficialSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_OfficialSerial);
                this.columnSer_ReadSerial = new global::System.Data.DataColumn("Ser_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ReadSerial);
                this.columnSer_SW_Code = new global::System.Data.DataColumn("Ser_SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code);
                this.columnSer_SW_Code_Rev = new global::System.Data.DataColumn("Ser_SW_Code_Rev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code_Rev);
                this.columnSer_SW_Std_Type = new global::System.Data.DataColumn("Ser_SW_Std_Type", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Std_Type);
                this.columnSer_SN_prod = new global::System.Data.DataColumn("Ser_SN_prod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SN_prod);
                this.columnSer_Commessa = new global::System.Data.DataColumn("Ser_Commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Commessa);
                this.columnSer_DateProduction = new global::System.Data.DataColumn("Ser_DateProduction", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_DateProduction);
                this.columnSer_Spedito = new global::System.Data.DataColumn("Ser_Spedito", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Spedito);
                this.columnSer_Data_Spedito = new global::System.Data.DataColumn("Ser_Data_Spedito", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Data_Spedito);
                this.columnSer_Substition_ID_ReadSerial = new global::System.Data.DataColumn("Ser_Substition_ID_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Substition_ID_ReadSerial);
                this.columnSer_Note = new global::System.Data.DataColumn("Ser_Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Note);
                this.columnSer_ObsoleteFromDate = new global::System.Data.DataColumn("Ser_ObsoleteFromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ObsoleteFromDate);
                this.columnSer_Kit.MaxLength = 25;
                this.columnSer_Device.MaxLength = 25;
                this.columnSer_Device_ID_Code.MaxLength = 4;
                this.columnSer_OfficialSerial.MaxLength = 25;
                this.columnSer_ReadSerial.MaxLength = 25;
                this.columnSer_SW_Code.MaxLength = 25;
                this.columnSer_SW_Code_Rev.MaxLength = 5;
                this.columnSer_SN_prod.MaxLength = 11;
                this.columnSer_Commessa.MaxLength = 25;
                this.columnSer_Spedito.AllowDBNull = false;
                this.columnSer_Substition_ID_ReadSerial.MaxLength = 25;
                this.columnSer_Note.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow NewSerialNumbers_ObsoleteRow() {
                return ((SerialNumbers_ObsoleteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SerialNumbers_ObsoleteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SerialNumbers_ObsoleteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SerialNumbers_ObsoleteRowChanged != null)) {
                    this.SerialNumbers_ObsoleteRowChanged(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SerialNumbers_ObsoleteRowChanging != null)) {
                    this.SerialNumbers_ObsoleteRowChanging(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SerialNumbers_ObsoleteRowDeleted != null)) {
                    this.SerialNumbers_ObsoleteRowDeleted(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SerialNumbers_ObsoleteRowDeleting != null)) {
                    this.SerialNumbers_ObsoleteRowDeleting(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSerialNumbers_ObsoleteRow(SerialNumbers_ObsoleteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_SL_History ds = new ds_SL_History();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SerialNumbers_ObsoleteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SF_Clienti_SerialNumbersRow : global::System.Data.DataRow {
            
            private SF_Clienti_SerialNumbersDataTable tableSF_Clienti_SerialNumbers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_Clienti_SerialNumbersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSF_Clienti_SerialNumbers = ((SF_Clienti_SerialNumbersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short Mastro {
                get {
                    try {
                        return ((short)(this[this.tableSF_Clienti_SerialNumbers.MastroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Mastro\' nella tabella \'SF_Clienti_SerialNumbers\' è DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.MastroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte Capoc {
                get {
                    try {
                        return ((byte)(this[this.tableSF_Clienti_SerialNumbers.CapocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Capoc\' nella tabella \'SF_Clienti_SerialNumbers\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.CapocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte Conto {
                get {
                    try {
                        return ((byte)(this[this.tableSF_Clienti_SerialNumbers.ContoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Conto\' nella tabella \'SF_Clienti_SerialNumbers\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.ContoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Sottoc {
                get {
                    try {
                        return ((int)(this[this.tableSF_Clienti_SerialNumbers.SottocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Sottoc\' nella tabella \'SF_Clienti_SerialNumbers\' è DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.SottocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CodAnagrafico {
                get {
                    try {
                        return ((int)(this[this.tableSF_Clienti_SerialNumbers.CodAnagraficoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'CodAnagrafico\' nella tabella \'SF_Clienti_SerialNumbers\' " +
                                "è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.CodAnagraficoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RagSocCognome {
                get {
                    try {
                        return ((string)(this[this.tableSF_Clienti_SerialNumbers.RagSocCognomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'RagSocCognome\' nella tabella \'SF_Clienti_SerialNumbers\' " +
                                "è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.RagSocCognomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RagSocNome {
                get {
                    try {
                        return ((string)(this[this.tableSF_Clienti_SerialNumbers.RagSocNomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'RagSocNome\' nella tabella \'SF_Clienti_SerialNumbers\' è D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.RagSocNomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RagSocCompleta {
                get {
                    try {
                        return ((string)(this[this.tableSF_Clienti_SerialNumbers.RagSocCompletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'RagSocCompleta\' nella tabella \'SF_Clienti_SerialNumbers\'" +
                                " è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.RagSocCompletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IndirizzoFiscale {
                get {
                    try {
                        return ((string)(this[this.tableSF_Clienti_SerialNumbers.IndirizzoFiscaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'IndirizzoFiscale\' nella tabella \'SF_Clienti_SerialNumber" +
                                "s\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Clienti_SerialNumbers.IndirizzoFiscaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMastroNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.MastroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMastroNull() {
                this[this.tableSF_Clienti_SerialNumbers.MastroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCapocNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.CapocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCapocNull() {
                this[this.tableSF_Clienti_SerialNumbers.CapocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContoNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.ContoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContoNull() {
                this[this.tableSF_Clienti_SerialNumbers.ContoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSottocNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.SottocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSottocNull() {
                this[this.tableSF_Clienti_SerialNumbers.SottocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCodAnagraficoNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.CodAnagraficoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCodAnagraficoNull() {
                this[this.tableSF_Clienti_SerialNumbers.CodAnagraficoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRagSocCognomeNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.RagSocCognomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRagSocCognomeNull() {
                this[this.tableSF_Clienti_SerialNumbers.RagSocCognomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRagSocNomeNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.RagSocNomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRagSocNomeNull() {
                this[this.tableSF_Clienti_SerialNumbers.RagSocNomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRagSocCompletaNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.RagSocCompletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRagSocCompletaNull() {
                this[this.tableSF_Clienti_SerialNumbers.RagSocCompletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIndirizzoFiscaleNull() {
                return this.IsNull(this.tableSF_Clienti_SerialNumbers.IndirizzoFiscaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIndirizzoFiscaleNull() {
                this[this.tableSF_Clienti_SerialNumbers.IndirizzoFiscaleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SerialNumbersRow : global::System.Data.DataRow {
            
            private SerialNumbersDataTable tableSerialNumbers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSerialNumbers = ((SerialNumbersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableSerialNumbers.IdColumn]));
                }
                set {
                    this[this.tableSerialNumbers.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Kit {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_KitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Kit\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Ser_ID_Cli {
                get {
                    try {
                        return ((int)(this[this.tableSerialNumbers.Ser_ID_CliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ID_Cli\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_ID_CliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device_ID_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_Device_ID_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device_ID_Code\' nella tabella \'SerialNumbers\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_Device_ID_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_OfficialSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_OfficialSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_OfficialSerial\' nella tabella \'SerialNumbers\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_OfficialSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ReadSerial\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_SW_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code_Rev {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_SW_Code_RevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code_Rev\' nella tabella \'SerialNumbers\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SW_Code_RevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_SW_Std_Type {
                get {
                    try {
                        return ((bool)(this[this.tableSerialNumbers.Ser_SW_Std_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Std_Type\' nella tabella \'SerialNumbers\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SW_Std_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SN_prod {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_SN_prodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SN_prod\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SN_prodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Commessa {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_CommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Commessa\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_CommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_DateProduction {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers.Ser_DateProductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_DateProduction\' nella tabella \'SerialNumbers\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_DateProductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_Spedito {
                get {
                    return ((bool)(this[this.tableSerialNumbers.Ser_SpeditoColumn]));
                }
                set {
                    this[this.tableSerialNumbers.Ser_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_Data_Spedito {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers.Ser_Data_SpeditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Data_Spedito\' nella tabella \'SerialNumbers\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_Data_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Substition_ID_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Substition_ID_ReadSerial\' nella tabella \'SerialNumbe" +
                                "rs\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Note {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Note\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_KitNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_KitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_KitNull() {
                this[this.tableSerialNumbers.Ser_KitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ID_CliNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_ID_CliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ID_CliNull() {
                this[this.tableSerialNumbers.Ser_ID_CliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DeviceNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DeviceNull() {
                this[this.tableSerialNumbers.Ser_DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Device_ID_CodeNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_Device_ID_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Device_ID_CodeNull() {
                this[this.tableSerialNumbers.Ser_Device_ID_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_OfficialSerialNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_OfficialSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_OfficialSerialNull() {
                this[this.tableSerialNumbers.Ser_OfficialSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ReadSerialNull() {
                this[this.tableSerialNumbers.Ser_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_CodeNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SW_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_CodeNull() {
                this[this.tableSerialNumbers.Ser_SW_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Code_RevNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SW_Code_RevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Code_RevNull() {
                this[this.tableSerialNumbers.Ser_SW_Code_RevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Std_TypeNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SW_Std_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Std_TypeNull() {
                this[this.tableSerialNumbers.Ser_SW_Std_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SN_prodNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SN_prodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SN_prodNull() {
                this[this.tableSerialNumbers.Ser_SN_prodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_CommessaNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_CommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_CommessaNull() {
                this[this.tableSerialNumbers.Ser_CommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DateProductionNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_DateProductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DateProductionNull() {
                this[this.tableSerialNumbers.Ser_DateProductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Data_SpeditoNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_Data_SpeditoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Data_SpeditoNull() {
                this[this.tableSerialNumbers.Ser_Data_SpeditoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Substition_ID_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Substition_ID_ReadSerialNull() {
                this[this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_NoteNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_NoteNull() {
                this[this.tableSerialNumbers.Ser_NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow[] GetSerialNumbers_ObsoleteRows() {
                if ((this.Table.ChildRelations["SerialNumbers_SerialNumbers_Obsolete"] == null)) {
                    return new SerialNumbers_ObsoleteRow[0];
                }
                else {
                    return ((SerialNumbers_ObsoleteRow[])(base.GetChildRows(this.Table.ChildRelations["SerialNumbers_SerialNumbers_Obsolete"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FirmwareRow : global::System.Data.DataRow {
            
            private FirmwareDataTable tableFirmware;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FirmwareRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFirmware = ((FirmwareDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableFirmware.IdColumn]));
                }
                set {
                    this[this.tableFirmware.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Code {
                get {
                    return ((string)(this[this.tableFirmware.SW_CodeColumn]));
                }
                set {
                    this[this.tableFirmware.SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_TipoDevice {
                get {
                    return ((string)(this[this.tableFirmware.SW_TipoDeviceColumn]));
                }
                set {
                    this[this.tableFirmware.SW_TipoDeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Descrizione {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_DescrizioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Descrizione\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_DescrizioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Descrizione_EN {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_Descrizione_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Descrizione_EN\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_Descrizione_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Versione {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_VersioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Versione\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_VersioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Revisione {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_RevisioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Revisione\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_RevisioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_Standard {
                get {
                    return ((bool)(this[this.tableFirmware.SW_StandardColumn]));
                }
                set {
                    this[this.tableFirmware.SW_StandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_FamProd {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_FamProdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_FamProd\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_FamProdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_P_Opt_RF {
                get {
                    return ((string)(this[this.tableFirmware.SW_P_Opt_RFColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_RFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Oled {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_OledColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_OledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_EmButt {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_EmButtColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_EmButtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Backlight {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_BacklightColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_BacklightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_ShiftPage {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_ShiftPageColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_ShiftPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Accel {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_AccelColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_AccelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_SP {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_SPColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Buzzer {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_BuzzerColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_BuzzerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Vibracall {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_VibracallColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_VibracallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_LedTorch {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_LedTorchColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_LedTorchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_PLD {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_PLDColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_PLDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_P_Opt_MaxPairDevices {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_P_Opt_MaxPairDevices\' nella tabella \'Firmware\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_R_Opt_RF {
                get {
                    return ((string)(this[this.tableFirmware.SW_R_Opt_RFColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_RFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Plug_Exp {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Plug_ExpColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Plug_ExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Plug_Ple {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Plug_PleColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Plug_PleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Em_Keyb {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Em_KeybColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Em_KeybColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Can {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_CanColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_CanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Prop_Out {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Prop_OutColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Prop_OutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_R_Opt_TimeOut {
                get {
                    return ((string)(this[this.tableFirmware.SW_R_Opt_TimeOutColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_TimeOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Cont_Keys {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Cont_KeysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Cont_Keys\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Cont_KeysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_LockSameRow {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_LockSameRowColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_LockSameRowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Use_SP {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Use_SPColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Use_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_MaxPairDevices {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_MaxPairDevices\' nella tabella \'Firmware\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_ShiftPage {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_ShiftPageColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_ShiftPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Output_No {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Output_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Output_No\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Output_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Dig_Input_No {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Dig_Input_No\' nella tabella \'Firmware\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Ana_Input_No {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Ana_Input_No\' nella tabella \'Firmware\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Revisioni {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_RevisioniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Revisioni\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_RevisioniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Funzionamento {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_FunzionamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Funzionamento\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_FunzionamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Config {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_ConfigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Config\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_ConfigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_Obsolete_ver {
                get {
                    return ((bool)(this[this.tableFirmware.SW_Obsolete_verColumn]));
                }
                set {
                    this[this.tableFirmware.SW_Obsolete_verColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SW_Obsolete_ver_from_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFirmware.SW_Obsolete_ver_from_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Obsolete_ver_from_date\' nella tabella \'Firmware\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_Obsolete_ver_from_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_DescrizioneNull() {
                return this.IsNull(this.tableFirmware.SW_DescrizioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_DescrizioneNull() {
                this[this.tableFirmware.SW_DescrizioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Descrizione_ENNull() {
                return this.IsNull(this.tableFirmware.SW_Descrizione_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Descrizione_ENNull() {
                this[this.tableFirmware.SW_Descrizione_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_VersioneNull() {
                return this.IsNull(this.tableFirmware.SW_VersioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_VersioneNull() {
                this[this.tableFirmware.SW_VersioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_RevisioneNull() {
                return this.IsNull(this.tableFirmware.SW_RevisioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_RevisioneNull() {
                this[this.tableFirmware.SW_RevisioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_FamProdNull() {
                return this.IsNull(this.tableFirmware.SW_FamProdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_FamProdNull() {
                this[this.tableFirmware.SW_FamProdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_P_Opt_MaxPairDevicesNull() {
                return this.IsNull(this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_P_Opt_MaxPairDevicesNull() {
                this[this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Cont_KeysNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Cont_KeysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Cont_KeysNull() {
                this[this.tableFirmware.SW_R_Opt_Cont_KeysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_MaxPairDevicesNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_MaxPairDevicesNull() {
                this[this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Output_NoNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Output_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Output_NoNull() {
                this[this.tableFirmware.SW_R_Opt_Output_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Dig_Input_NoNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Dig_Input_NoNull() {
                this[this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Ana_Input_NoNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Ana_Input_NoNull() {
                this[this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_RevisioniNull() {
                return this.IsNull(this.tableFirmware.SW_RevisioniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_RevisioniNull() {
                this[this.tableFirmware.SW_RevisioniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_FunzionamentoNull() {
                return this.IsNull(this.tableFirmware.SW_FunzionamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_FunzionamentoNull() {
                this[this.tableFirmware.SW_FunzionamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_ConfigNull() {
                return this.IsNull(this.tableFirmware.SW_ConfigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_ConfigNull() {
                this[this.tableFirmware.SW_ConfigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Obsolete_ver_from_dateNull() {
                return this.IsNull(this.tableFirmware.SW_Obsolete_ver_from_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Obsolete_ver_from_dateNull() {
                this[this.tableFirmware.SW_Obsolete_ver_from_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BS_SN_HistoryRow : global::System.Data.DataRow {
            
            private BS_SN_HistoryDataTable tableBS_SN_History;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BS_SN_HistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBS_SN_History = ((BS_SN_HistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string serialnumber {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.serialnumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'serialnumber\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.serialnumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string version {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.versionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'version\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.versionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string revision {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.revisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'revision\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.revisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableBS_SN_History.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'user_id\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string device_id {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.device_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'device_id\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.device_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime created_at {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBS_SN_History.created_atColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'created_at\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.created_atColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string type {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'type\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string extras {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.extrasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'extras\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.extrasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string user_email {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.user_emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'user_email\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.user_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string customer_name {
                get {
                    try {
                        return ((string)(this[this.tableBS_SN_History.customer_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'customer_name\' nella tabella \'BS_SN_History\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableBS_SN_History.customer_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsserialnumberNull() {
                return this.IsNull(this.tableBS_SN_History.serialnumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetserialnumberNull() {
                this[this.tableBS_SN_History.serialnumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsversionNull() {
                return this.IsNull(this.tableBS_SN_History.versionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetversionNull() {
                this[this.tableBS_SN_History.versionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsrevisionNull() {
                return this.IsNull(this.tableBS_SN_History.revisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetrevisionNull() {
                this[this.tableBS_SN_History.revisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableBS_SN_History.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setuser_idNull() {
                this[this.tableBS_SN_History.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isdevice_idNull() {
                return this.IsNull(this.tableBS_SN_History.device_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setdevice_idNull() {
                this[this.tableBS_SN_History.device_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iscreated_atNull() {
                return this.IsNull(this.tableBS_SN_History.created_atColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setcreated_atNull() {
                this[this.tableBS_SN_History.created_atColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IstypeNull() {
                return this.IsNull(this.tableBS_SN_History.typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SettypeNull() {
                this[this.tableBS_SN_History.typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsextrasNull() {
                return this.IsNull(this.tableBS_SN_History.extrasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetextrasNull() {
                this[this.tableBS_SN_History.extrasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isuser_emailNull() {
                return this.IsNull(this.tableBS_SN_History.user_emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setuser_emailNull() {
                this[this.tableBS_SN_History.user_emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Iscustomer_nameNull() {
                return this.IsNull(this.tableBS_SN_History.customer_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setcustomer_nameNull() {
                this[this.tableBS_SN_History.customer_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SerialNumbers_ObsoleteRow : global::System.Data.DataRow {
            
            private SerialNumbers_ObsoleteDataTable tableSerialNumbers_Obsolete;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbers_ObsoleteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSerialNumbers_Obsolete = ((SerialNumbers_ObsoleteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Kit {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_KitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Kit\' nella tabella \'SerialNumbers_Obsolete\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Ser_ID_Cli {
                get {
                    try {
                        return ((int)(this[this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ID_Cli\' nella tabella \'SerialNumbers_Obsolete\' è DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device\' nella tabella \'SerialNumbers_Obsolete\' è DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device_ID_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device_ID_Code\' nella tabella \'SerialNumbers_Obsolet" +
                                "e\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_OfficialSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_OfficialSerial\' nella tabella \'SerialNumbers_Obsolet" +
                                "e\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ReadSerial\' nella tabella \'SerialNumbers_Obsolete\' è" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code\' nella tabella \'SerialNumbers_Obsolete\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code_Rev {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code_Rev\' nella tabella \'SerialNumbers_Obsolete\' " +
                                "è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_SW_Std_Type {
                get {
                    try {
                        return ((bool)(this[this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Std_Type\' nella tabella \'SerialNumbers_Obsolete\' " +
                                "è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SN_prod {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SN_prod\' nella tabella \'SerialNumbers_Obsolete\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Commessa {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_CommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Commessa\' nella tabella \'SerialNumbers_Obsolete\' è D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_CommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_DateProduction {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_DateProduction\' nella tabella \'SerialNumbers_Obsolet" +
                                "e\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_Spedito {
                get {
                    return ((bool)(this[this.tableSerialNumbers_Obsolete.Ser_SpeditoColumn]));
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_Data_Spedito {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Data_Spedito\' nella tabella \'SerialNumbers_Obsolete\'" +
                                " è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Substition_ID_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Substition_ID_ReadSerial\' nella tabella \'SerialNumbe" +
                                "rs_Obsolete\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Note {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Note\' nella tabella \'SerialNumbers_Obsolete\' è DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_ObsoleteFromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ObsoleteFromDate\' nella tabella \'SerialNumbers_Obsol" +
                                "ete\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow SerialNumbersRow {
                get {
                    return ((SerialNumbersRow)(this.GetParentRow(this.Table.ParentRelations["SerialNumbers_SerialNumbers_Obsolete"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SerialNumbers_SerialNumbers_Obsolete"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_KitNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_KitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_KitNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_KitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ID_CliNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ID_CliNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DeviceNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DeviceNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Device_ID_CodeNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Device_ID_CodeNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_OfficialSerialNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_OfficialSerialNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ReadSerialNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_CodeNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_CodeNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Code_RevNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Code_RevNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Std_TypeNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Std_TypeNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SN_prodNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SN_prodNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_CommessaNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_CommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_CommessaNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_CommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DateProductionNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DateProductionNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Data_SpeditoNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Data_SpeditoNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Substition_ID_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Substition_ID_ReadSerialNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_NoteNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_NoteNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ObsoleteFromDateNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ObsoleteFromDateNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SF_Clienti_SerialNumbersRowChangeEvent : global::System.EventArgs {
            
            private SF_Clienti_SerialNumbersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Clienti_SerialNumbersRowChangeEvent(SF_Clienti_SerialNumbersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Clienti_SerialNumbersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SerialNumbersRowChangeEvent : global::System.EventArgs {
            
            private SerialNumbersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRowChangeEvent(SerialNumbersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FirmwareRowChangeEvent : global::System.EventArgs {
            
            private FirmwareRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRowChangeEvent(FirmwareRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BS_SN_HistoryRowChangeEvent : global::System.EventArgs {
            
            private BS_SN_HistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BS_SN_HistoryRowChangeEvent(BS_SN_HistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BS_SN_HistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SerialNumbers_ObsoleteRowChangeEvent : global::System.EventArgs {
            
            private SerialNumbers_ObsoleteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRowChangeEvent(SerialNumbers_ObsoleteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SmartLineProduction.ds_SL_HistoryTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SF_Clienti_SerialNumbersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SF_Clienti_SerialNumbersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SF_Clienti_SerialNumbers";
            tableMapping.ColumnMappings.Add("Mastro", "Mastro");
            tableMapping.ColumnMappings.Add("Capoc", "Capoc");
            tableMapping.ColumnMappings.Add("Conto", "Conto");
            tableMapping.ColumnMappings.Add("Sottoc", "Sottoc");
            tableMapping.ColumnMappings.Add("CodAnagrafico", "CodAnagrafico");
            tableMapping.ColumnMappings.Add("RagSocCognome", "RagSocCognome");
            tableMapping.ColumnMappings.Add("RagSocNome", "RagSocNome");
            tableMapping.ColumnMappings.Add("RagSocCompleta", "RagSocCompleta");
            tableMapping.ColumnMappings.Add("IndirizzoFiscale", "IndirizzoFiscale");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Mastro, Capoc, Conto, Sottoc, CodAnagrafico, RagSocCognome, RagSocNome, Ra" +
                "gSocCompleta, IndirizzoFiscale FROM dbo.SF_Clienti_SerialNumbers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_SL_History.SF_Clienti_SerialNumbersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_SL_History.SF_Clienti_SerialNumbersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_SL_History.SF_Clienti_SerialNumbersDataTable dataTable = new ds_SL_History.SF_Clienti_SerialNumbersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SerialNumbersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SerialNumbersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SerialNumbers";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Ser_Kit", "Ser_Kit");
            tableMapping.ColumnMappings.Add("Ser_ID_Cli", "Ser_ID_Cli");
            tableMapping.ColumnMappings.Add("Ser_Device", "Ser_Device");
            tableMapping.ColumnMappings.Add("Ser_Device_ID_Code", "Ser_Device_ID_Code");
            tableMapping.ColumnMappings.Add("Ser_OfficialSerial", "Ser_OfficialSerial");
            tableMapping.ColumnMappings.Add("Ser_ReadSerial", "Ser_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_SW_Code", "Ser_SW_Code");
            tableMapping.ColumnMappings.Add("Ser_SW_Code_Rev", "Ser_SW_Code_Rev");
            tableMapping.ColumnMappings.Add("Ser_SW_Std_Type", "Ser_SW_Std_Type");
            tableMapping.ColumnMappings.Add("Ser_SN_prod", "Ser_SN_prod");
            tableMapping.ColumnMappings.Add("Ser_Commessa", "Ser_Commessa");
            tableMapping.ColumnMappings.Add("Ser_DateProduction", "Ser_DateProduction");
            tableMapping.ColumnMappings.Add("Ser_Spedito", "Ser_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Data_Spedito", "Ser_Data_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Substition_ID_ReadSerial", "Ser_Substition_ID_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_Note", "Ser_Note");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [SerialNumbers] WHERE (([Id] = @Original_Id) AND ((@IsNull_Ser_Kit = " +
                "1 AND [Ser_Kit] IS NULL) OR ([Ser_Kit] = @Original_Ser_Kit)) AND ((@IsNull_Ser_I" +
                "D_Cli = 1 AND [Ser_ID_Cli] IS NULL) OR ([Ser_ID_Cli] = @Original_Ser_ID_Cli)) AN" +
                "D ((@IsNull_Ser_Device = 1 AND [Ser_Device] IS NULL) OR ([Ser_Device] = @Origina" +
                "l_Ser_Device)) AND ((@IsNull_Ser_Device_ID_Code = 1 AND [Ser_Device_ID_Code] IS " +
                "NULL) OR ([Ser_Device_ID_Code] = @Original_Ser_Device_ID_Code)) AND ((@IsNull_Se" +
                "r_OfficialSerial = 1 AND [Ser_OfficialSerial] IS NULL) OR ([Ser_OfficialSerial] " +
                "= @Original_Ser_OfficialSerial)) AND ((@IsNull_Ser_ReadSerial = 1 AND [Ser_ReadS" +
                "erial] IS NULL) OR ([Ser_ReadSerial] = @Original_Ser_ReadSerial)) AND ((@IsNull_" +
                "Ser_SW_Code = 1 AND [Ser_SW_Code] IS NULL) OR ([Ser_SW_Code] = @Original_Ser_SW_" +
                "Code)) AND ((@IsNull_Ser_SW_Code_Rev = 1 AND [Ser_SW_Code_Rev] IS NULL) OR ([Ser" +
                "_SW_Code_Rev] = @Original_Ser_SW_Code_Rev)) AND ((@IsNull_Ser_SW_Std_Type = 1 AN" +
                "D [Ser_SW_Std_Type] IS NULL) OR ([Ser_SW_Std_Type] = @Original_Ser_SW_Std_Type))" +
                " AND ((@IsNull_Ser_SN_prod = 1 AND [Ser_SN_prod] IS NULL) OR ([Ser_SN_prod] = @O" +
                "riginal_Ser_SN_prod)) AND ((@IsNull_Ser_Commessa = 1 AND [Ser_Commessa] IS NULL)" +
                " OR ([Ser_Commessa] = @Original_Ser_Commessa)) AND ((@IsNull_Ser_DateProduction " +
                "= 1 AND [Ser_DateProduction] IS NULL) OR ([Ser_DateProduction] = @Original_Ser_D" +
                "ateProduction)) AND ([Ser_Spedito] = @Original_Ser_Spedito) AND ((@IsNull_Ser_Da" +
                "ta_Spedito = 1 AND [Ser_Data_Spedito] IS NULL) OR ([Ser_Data_Spedito] = @Origina" +
                "l_Ser_Data_Spedito)) AND ((@IsNull_Ser_Substition_ID_ReadSerial = 1 AND [Ser_Sub" +
                "stition_ID_ReadSerial] IS NULL) OR ([Ser_Substition_ID_ReadSerial] = @Original_S" +
                "er_Substition_ID_ReadSerial)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Kit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device_ID_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_OfficialSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code_Rev", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Std_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SN_prod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Commessa", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_DateProduction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Data_Spedito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SerialNumbers] ([Ser_Kit], [Ser_ID_Cli], [Ser_Device], [Ser_Device_ID_Code], [Ser_OfficialSerial], [Ser_ReadSerial], [Ser_SW_Code], [Ser_SW_Code_Rev], [Ser_SW_Std_Type], [Ser_SN_prod], [Ser_Commessa], [Ser_DateProduction], [Ser_Spedito], [Ser_Data_Spedito], [Ser_Substition_ID_ReadSerial], [Ser_Note]) VALUES (@Ser_Kit, @Ser_ID_Cli, @Ser_Device, @Ser_Device_ID_Code, @Ser_OfficialSerial, @Ser_ReadSerial, @Ser_SW_Code, @Ser_SW_Code_Rev, @Ser_SW_Std_Type, @Ser_SN_prod, @Ser_Commessa, @Ser_DateProduction, @Ser_Spedito, @Ser_Data_Spedito, @Ser_Substition_ID_ReadSerial, @Ser_Note);
SELECT Id, Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note FROM SerialNumbers WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Note", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [SerialNumbers] SET [Ser_Kit] = @Ser_Kit, [Ser_ID_Cli] = @Ser_ID_Cli, [Ser" +
                "_Device] = @Ser_Device, [Ser_Device_ID_Code] = @Ser_Device_ID_Code, [Ser_Officia" +
                "lSerial] = @Ser_OfficialSerial, [Ser_ReadSerial] = @Ser_ReadSerial, [Ser_SW_Code" +
                "] = @Ser_SW_Code, [Ser_SW_Code_Rev] = @Ser_SW_Code_Rev, [Ser_SW_Std_Type] = @Ser" +
                "_SW_Std_Type, [Ser_SN_prod] = @Ser_SN_prod, [Ser_Commessa] = @Ser_Commessa, [Ser" +
                "_DateProduction] = @Ser_DateProduction, [Ser_Spedito] = @Ser_Spedito, [Ser_Data_" +
                "Spedito] = @Ser_Data_Spedito, [Ser_Substition_ID_ReadSerial] = @Ser_Substition_I" +
                "D_ReadSerial, [Ser_Note] = @Ser_Note WHERE (([Id] = @Original_Id) AND ((@IsNull_" +
                "Ser_Kit = 1 AND [Ser_Kit] IS NULL) OR ([Ser_Kit] = @Original_Ser_Kit)) AND ((@Is" +
                "Null_Ser_ID_Cli = 1 AND [Ser_ID_Cli] IS NULL) OR ([Ser_ID_Cli] = @Original_Ser_I" +
                "D_Cli)) AND ((@IsNull_Ser_Device = 1 AND [Ser_Device] IS NULL) OR ([Ser_Device] " +
                "= @Original_Ser_Device)) AND ((@IsNull_Ser_Device_ID_Code = 1 AND [Ser_Device_ID" +
                "_Code] IS NULL) OR ([Ser_Device_ID_Code] = @Original_Ser_Device_ID_Code)) AND ((" +
                "@IsNull_Ser_OfficialSerial = 1 AND [Ser_OfficialSerial] IS NULL) OR ([Ser_Offici" +
                "alSerial] = @Original_Ser_OfficialSerial)) AND ((@IsNull_Ser_ReadSerial = 1 AND " +
                "[Ser_ReadSerial] IS NULL) OR ([Ser_ReadSerial] = @Original_Ser_ReadSerial)) AND " +
                "((@IsNull_Ser_SW_Code = 1 AND [Ser_SW_Code] IS NULL) OR ([Ser_SW_Code] = @Origin" +
                "al_Ser_SW_Code)) AND ((@IsNull_Ser_SW_Code_Rev = 1 AND [Ser_SW_Code_Rev] IS NULL" +
                ") OR ([Ser_SW_Code_Rev] = @Original_Ser_SW_Code_Rev)) AND ((@IsNull_Ser_SW_Std_T" +
                "ype = 1 AND [Ser_SW_Std_Type] IS NULL) OR ([Ser_SW_Std_Type] = @Original_Ser_SW_" +
                "Std_Type)) AND ((@IsNull_Ser_SN_prod = 1 AND [Ser_SN_prod] IS NULL) OR ([Ser_SN_" +
                "prod] = @Original_Ser_SN_prod)) AND ((@IsNull_Ser_Commessa = 1 AND [Ser_Commessa" +
                "] IS NULL) OR ([Ser_Commessa] = @Original_Ser_Commessa)) AND ((@IsNull_Ser_DateP" +
                "roduction = 1 AND [Ser_DateProduction] IS NULL) OR ([Ser_DateProduction] = @Orig" +
                "inal_Ser_DateProduction)) AND ([Ser_Spedito] = @Original_Ser_Spedito) AND ((@IsN" +
                "ull_Ser_Data_Spedito = 1 AND [Ser_Data_Spedito] IS NULL) OR ([Ser_Data_Spedito] " +
                "= @Original_Ser_Data_Spedito)) AND ((@IsNull_Ser_Substition_ID_ReadSerial = 1 AN" +
                "D [Ser_Substition_ID_ReadSerial] IS NULL) OR ([Ser_Substition_ID_ReadSerial] = @" +
                "Original_Ser_Substition_ID_ReadSerial)));\r\nSELECT Id, Ser_Kit, Ser_ID_Cli, Ser_D" +
                "evice, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_" +
                "SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser" +
                "_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note FROM SerialNu" +
                "mbers WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Note", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Kit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device_ID_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_OfficialSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code_Rev", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Std_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SN_prod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Commessa", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_DateProduction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Data_Spedito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Id, Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, 
                         Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note
FROM            SerialNumbers
WHERE        (Ser_SN_prod IS NOT NULL)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_SL_History.SerialNumbersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_SL_History.SerialNumbersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_SL_History.SerialNumbersDataTable dataTable = new ds_SL_History.SerialNumbersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History.SerialNumbersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History dataSet) {
            return this.Adapter.Update(dataSet, "SerialNumbers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_Ser_Kit, 
                    global::System.Nullable<int> Original_Ser_ID_Cli, 
                    string Original_Ser_Device, 
                    string Original_Ser_Device_ID_Code, 
                    string Original_Ser_OfficialSerial, 
                    string Original_Ser_ReadSerial, 
                    string Original_Ser_SW_Code, 
                    string Original_Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Original_Ser_SW_Std_Type, 
                    string Original_Ser_SN_prod, 
                    string Original_Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_DateProduction, 
                    bool Original_Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_Data_Spedito, 
                    string Original_Ser_Substition_ID_ReadSerial) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Ser_Kit == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Ser_Kit));
            }
            if ((Original_Ser_ID_Cli.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Device == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Ser_Device));
            }
            if ((Original_Ser_Device_ID_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Ser_Device_ID_Code));
            }
            if ((Original_Ser_OfficialSerial == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Ser_OfficialSerial));
            }
            if ((Original_Ser_ReadSerial == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Ser_ReadSerial));
            }
            if ((Original_Ser_SW_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Ser_SW_Code));
            }
            if ((Original_Ser_SW_Code_Rev == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Ser_SW_Code_Rev));
            }
            if ((Original_Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_SN_prod == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Ser_SN_prod));
            }
            if ((Original_Ser_Commessa == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Ser_Commessa));
            }
            if ((Original_Ser_DateProduction.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_Ser_DateProduction.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_Ser_Spedito));
            if ((Original_Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_Ser_Substition_ID_ReadSerial));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note) {
            if ((Ser_Kit == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ser_Kit));
            }
            if ((Ser_ID_Cli.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Ser_Device == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Ser_Device));
            }
            if ((Ser_Device_ID_Code == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Ser_Device_ID_Code));
            }
            if ((Ser_OfficialSerial == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ser_OfficialSerial));
            }
            if ((Ser_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Ser_ReadSerial));
            }
            if ((Ser_SW_Code == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Ser_SW_Code));
            }
            if ((Ser_SW_Code_Rev == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Ser_SW_Code_Rev));
            }
            if ((Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ser_SN_prod == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ser_SN_prod));
            }
            if ((Ser_Commessa == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Ser_Commessa));
            }
            if ((Ser_DateProduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Ser_DateProduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Ser_Spedito));
            if ((Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Ser_Substition_ID_ReadSerial));
            }
            if ((Ser_Note == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Ser_Note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note, 
                    int Original_Id, 
                    string Original_Ser_Kit, 
                    global::System.Nullable<int> Original_Ser_ID_Cli, 
                    string Original_Ser_Device, 
                    string Original_Ser_Device_ID_Code, 
                    string Original_Ser_OfficialSerial, 
                    string Original_Ser_ReadSerial, 
                    string Original_Ser_SW_Code, 
                    string Original_Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Original_Ser_SW_Std_Type, 
                    string Original_Ser_SN_prod, 
                    string Original_Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_DateProduction, 
                    bool Original_Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_Data_Spedito, 
                    string Original_Ser_Substition_ID_ReadSerial, 
                    int Id) {
            if ((Ser_Kit == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ser_Kit));
            }
            if ((Ser_ID_Cli.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Ser_Device == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Ser_Device));
            }
            if ((Ser_Device_ID_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Ser_Device_ID_Code));
            }
            if ((Ser_OfficialSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ser_OfficialSerial));
            }
            if ((Ser_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Ser_ReadSerial));
            }
            if ((Ser_SW_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Ser_SW_Code));
            }
            if ((Ser_SW_Code_Rev == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Ser_SW_Code_Rev));
            }
            if ((Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ser_SN_prod == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Ser_SN_prod));
            }
            if ((Ser_Commessa == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Ser_Commessa));
            }
            if ((Ser_DateProduction.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Ser_DateProduction.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Ser_Spedito));
            if ((Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Ser_Substition_ID_ReadSerial));
            }
            if ((Ser_Note == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Ser_Note));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Id));
            if ((Original_Ser_Kit == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Ser_Kit));
            }
            if ((Original_Ser_ID_Cli.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Device == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Ser_Device));
            }
            if ((Original_Ser_Device_ID_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Ser_Device_ID_Code));
            }
            if ((Original_Ser_OfficialSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Ser_OfficialSerial));
            }
            if ((Original_Ser_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Ser_ReadSerial));
            }
            if ((Original_Ser_SW_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Ser_SW_Code));
            }
            if ((Original_Ser_SW_Code_Rev == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Ser_SW_Code_Rev));
            }
            if ((Original_Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_SN_prod == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Ser_SN_prod));
            }
            if ((Original_Ser_Commessa == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Ser_Commessa));
            }
            if ((Original_Ser_DateProduction.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_Ser_DateProduction.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Original_Ser_Spedito));
            if ((Original_Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Ser_Substition_ID_ReadSerial));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note, 
                    int Original_Id, 
                    string Original_Ser_Kit, 
                    global::System.Nullable<int> Original_Ser_ID_Cli, 
                    string Original_Ser_Device, 
                    string Original_Ser_Device_ID_Code, 
                    string Original_Ser_OfficialSerial, 
                    string Original_Ser_ReadSerial, 
                    string Original_Ser_SW_Code, 
                    string Original_Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Original_Ser_SW_Std_Type, 
                    string Original_Ser_SN_prod, 
                    string Original_Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_DateProduction, 
                    bool Original_Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_Data_Spedito, 
                    string Original_Ser_Substition_ID_ReadSerial) {
            return this.Update(Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note, Original_Id, Original_Ser_Kit, Original_Ser_ID_Cli, Original_Ser_Device, Original_Ser_Device_ID_Code, Original_Ser_OfficialSerial, Original_Ser_ReadSerial, Original_Ser_SW_Code, Original_Ser_SW_Code_Rev, Original_Ser_SW_Std_Type, Original_Ser_SN_prod, Original_Ser_Commessa, Original_Ser_DateProduction, Original_Ser_Spedito, Original_Ser_Data_Spedito, Original_Ser_Substition_ID_ReadSerial, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FirmwareTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FirmwareTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Firmware";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("SW_Code", "SW_Code");
            tableMapping.ColumnMappings.Add("SW_TipoDevice", "SW_TipoDevice");
            tableMapping.ColumnMappings.Add("SW_Descrizione", "SW_Descrizione");
            tableMapping.ColumnMappings.Add("SW_Descrizione_EN", "SW_Descrizione_EN");
            tableMapping.ColumnMappings.Add("SW_Versione", "SW_Versione");
            tableMapping.ColumnMappings.Add("SW_Revisione", "SW_Revisione");
            tableMapping.ColumnMappings.Add("SW_Standard", "SW_Standard");
            tableMapping.ColumnMappings.Add("SW_FamProd", "SW_FamProd");
            tableMapping.ColumnMappings.Add("SW_P_Opt_RF", "SW_P_Opt_RF");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Oled", "SW_P_Opt_Use_Oled");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_EmButt", "SW_P_Opt_Use_EmButt");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Backlight", "SW_P_Opt_Use_Backlight");
            tableMapping.ColumnMappings.Add("SW_P_Opt_ShiftPage", "SW_P_Opt_ShiftPage");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Accel", "SW_P_Opt_Use_Accel");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_SP", "SW_P_Opt_Use_SP");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Buzzer", "SW_P_Opt_Use_Buzzer");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Vibracall", "SW_P_Opt_Use_Vibracall");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_LedTorch", "SW_P_Opt_Use_LedTorch");
            tableMapping.ColumnMappings.Add("SW_P_PLD", "SW_P_PLD");
            tableMapping.ColumnMappings.Add("SW_P_Opt_MaxPairDevices", "SW_P_Opt_MaxPairDevices");
            tableMapping.ColumnMappings.Add("SW_R_Opt_RF", "SW_R_Opt_RF");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Plug_Exp", "SW_R_Opt_Plug_Exp");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Plug_Ple", "SW_R_Opt_Plug_Ple");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Em_Keyb", "SW_R_Opt_Em_Keyb");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Can", "SW_R_Opt_Can");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Prop_Out", "SW_R_Opt_Prop_Out");
            tableMapping.ColumnMappings.Add("SW_R_Opt_TimeOut", "SW_R_Opt_TimeOut");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Cont_Keys", "SW_R_Opt_Cont_Keys");
            tableMapping.ColumnMappings.Add("SW_R_Opt_LockSameRow", "SW_R_Opt_LockSameRow");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Use_SP", "SW_R_Opt_Use_SP");
            tableMapping.ColumnMappings.Add("SW_R_Opt_MaxPairDevices", "SW_R_Opt_MaxPairDevices");
            tableMapping.ColumnMappings.Add("SW_R_Opt_ShiftPage", "SW_R_Opt_ShiftPage");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Output_No", "SW_R_Opt_Output_No");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Dig_Input_No", "SW_R_Opt_Dig_Input_No");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Ana_Input_No", "SW_R_Opt_Ana_Input_No");
            tableMapping.ColumnMappings.Add("SW_Revisioni", "SW_Revisioni");
            tableMapping.ColumnMappings.Add("SW_Funzionamento", "SW_Funzionamento");
            tableMapping.ColumnMappings.Add("SW_Config", "SW_Config");
            tableMapping.ColumnMappings.Add("SW_Obsolete_ver", "SW_Obsolete_ver");
            tableMapping.ColumnMappings.Add("SW_Obsolete_ver_from_date", "SW_Obsolete_ver_from_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Firmware] WHERE (([Id] = @Original_Id) AND ([SW_Code] = @Origi" +
                "nal_SW_Code) AND ([SW_TipoDevice] = @Original_SW_TipoDevice) AND ((@IsNull_SW_De" +
                "scrizione = 1 AND [SW_Descrizione] IS NULL) OR ([SW_Descrizione] = @Original_SW_" +
                "Descrizione)) AND ((@IsNull_SW_Descrizione_EN = 1 AND [SW_Descrizione_EN] IS NUL" +
                "L) OR ([SW_Descrizione_EN] = @Original_SW_Descrizione_EN)) AND ((@IsNull_SW_Vers" +
                "ione = 1 AND [SW_Versione] IS NULL) OR ([SW_Versione] = @Original_SW_Versione)) " +
                "AND ((@IsNull_SW_Revisione = 1 AND [SW_Revisione] IS NULL) OR ([SW_Revisione] = " +
                "@Original_SW_Revisione)) AND ([SW_Standard] = @Original_SW_Standard) AND ((@IsNu" +
                "ll_SW_FamProd = 1 AND [SW_FamProd] IS NULL) OR ([SW_FamProd] = @Original_SW_FamP" +
                "rod)) AND ([SW_P_Opt_RF] = @Original_SW_P_Opt_RF) AND ([SW_P_Opt_Use_Oled] = @Or" +
                "iginal_SW_P_Opt_Use_Oled) AND ([SW_P_Opt_Use_EmButt] = @Original_SW_P_Opt_Use_Em" +
                "Butt) AND ([SW_P_Opt_Use_Backlight] = @Original_SW_P_Opt_Use_Backlight) AND ([SW" +
                "_P_Opt_ShiftPage] = @Original_SW_P_Opt_ShiftPage) AND ([SW_P_Opt_Use_Accel] = @O" +
                "riginal_SW_P_Opt_Use_Accel) AND ([SW_P_Opt_Use_SP] = @Original_SW_P_Opt_Use_SP) " +
                "AND ([SW_P_Opt_Use_Buzzer] = @Original_SW_P_Opt_Use_Buzzer) AND ([SW_P_Opt_Use_V" +
                "ibracall] = @Original_SW_P_Opt_Use_Vibracall) AND ([SW_P_Opt_Use_LedTorch] = @Or" +
                "iginal_SW_P_Opt_Use_LedTorch) AND ([SW_P_PLD] = @Original_SW_P_PLD) AND ((@IsNul" +
                "l_SW_P_Opt_MaxPairDevices = 1 AND [SW_P_Opt_MaxPairDevices] IS NULL) OR ([SW_P_O" +
                "pt_MaxPairDevices] = @Original_SW_P_Opt_MaxPairDevices)) AND ([SW_R_Opt_RF] = @O" +
                "riginal_SW_R_Opt_RF) AND ([SW_R_Opt_Plug_Exp] = @Original_SW_R_Opt_Plug_Exp) AND" +
                " ([SW_R_Opt_Plug_Ple] = @Original_SW_R_Opt_Plug_Ple) AND ([SW_R_Opt_Em_Keyb] = @" +
                "Original_SW_R_Opt_Em_Keyb) AND ([SW_R_Opt_Can] = @Original_SW_R_Opt_Can) AND ([S" +
                "W_R_Opt_Prop_Out] = @Original_SW_R_Opt_Prop_Out) AND ([SW_R_Opt_TimeOut] = @Orig" +
                "inal_SW_R_Opt_TimeOut) AND ((@IsNull_SW_R_Opt_Cont_Keys = 1 AND [SW_R_Opt_Cont_K" +
                "eys] IS NULL) OR ([SW_R_Opt_Cont_Keys] = @Original_SW_R_Opt_Cont_Keys)) AND ([SW" +
                "_R_Opt_LockSameRow] = @Original_SW_R_Opt_LockSameRow) AND ([SW_R_Opt_Use_SP] = @" +
                "Original_SW_R_Opt_Use_SP) AND ((@IsNull_SW_R_Opt_MaxPairDevices = 1 AND [SW_R_Op" +
                "t_MaxPairDevices] IS NULL) OR ([SW_R_Opt_MaxPairDevices] = @Original_SW_R_Opt_Ma" +
                "xPairDevices)) AND ([SW_R_Opt_ShiftPage] = @Original_SW_R_Opt_ShiftPage) AND ((@" +
                "IsNull_SW_R_Opt_Output_No = 1 AND [SW_R_Opt_Output_No] IS NULL) OR ([SW_R_Opt_Ou" +
                "tput_No] = @Original_SW_R_Opt_Output_No)) AND ((@IsNull_SW_R_Opt_Dig_Input_No = " +
                "1 AND [SW_R_Opt_Dig_Input_No] IS NULL) OR ([SW_R_Opt_Dig_Input_No] = @Original_S" +
                "W_R_Opt_Dig_Input_No)) AND ((@IsNull_SW_R_Opt_Ana_Input_No = 1 AND [SW_R_Opt_Ana" +
                "_Input_No] IS NULL) OR ([SW_R_Opt_Ana_Input_No] = @Original_SW_R_Opt_Ana_Input_N" +
                "o)) AND ([SW_Obsolete_ver] = @Original_SW_Obsolete_ver) AND ((@IsNull_SW_Obsolet" +
                "e_ver_from_date = 1 AND [SW_Obsolete_ver_from_date] IS NULL) OR ([SW_Obsolete_ve" +
                "r_from_date] = @Original_SW_Obsolete_ver_from_date)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Versione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Revisione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_FamProd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Firmware] ([SW_Code], [SW_TipoDevice], [SW_Descrizione], [SW_D" +
                "escrizione_EN], [SW_Versione], [SW_Revisione], [SW_Standard], [SW_FamProd], [SW_" +
                "P_Opt_RF], [SW_P_Opt_Use_Oled], [SW_P_Opt_Use_EmButt], [SW_P_Opt_Use_Backlight]," +
                " [SW_P_Opt_ShiftPage], [SW_P_Opt_Use_Accel], [SW_P_Opt_Use_SP], [SW_P_Opt_Use_Bu" +
                "zzer], [SW_P_Opt_Use_Vibracall], [SW_P_Opt_Use_LedTorch], [SW_P_PLD], [SW_P_Opt_" +
                "MaxPairDevices], [SW_R_Opt_RF], [SW_R_Opt_Plug_Exp], [SW_R_Opt_Plug_Ple], [SW_R_" +
                "Opt_Em_Keyb], [SW_R_Opt_Can], [SW_R_Opt_Prop_Out], [SW_R_Opt_TimeOut], [SW_R_Opt" +
                "_Cont_Keys], [SW_R_Opt_LockSameRow], [SW_R_Opt_Use_SP], [SW_R_Opt_MaxPairDevices" +
                "], [SW_R_Opt_ShiftPage], [SW_R_Opt_Output_No], [SW_R_Opt_Dig_Input_No], [SW_R_Op" +
                "t_Ana_Input_No], [SW_Revisioni], [SW_Funzionamento], [SW_Config], [SW_Obsolete_v" +
                "er], [SW_Obsolete_ver_from_date]) VALUES (@SW_Code, @SW_TipoDevice, @SW_Descrizi" +
                "one, @SW_Descrizione_EN, @SW_Versione, @SW_Revisione, @SW_Standard, @SW_FamProd," +
                " @SW_P_Opt_RF, @SW_P_Opt_Use_Oled, @SW_P_Opt_Use_EmButt, @SW_P_Opt_Use_Backlight" +
                ", @SW_P_Opt_ShiftPage, @SW_P_Opt_Use_Accel, @SW_P_Opt_Use_SP, @SW_P_Opt_Use_Buzz" +
                "er, @SW_P_Opt_Use_Vibracall, @SW_P_Opt_Use_LedTorch, @SW_P_PLD, @SW_P_Opt_MaxPai" +
                "rDevices, @SW_R_Opt_RF, @SW_R_Opt_Plug_Exp, @SW_R_Opt_Plug_Ple, @SW_R_Opt_Em_Key" +
                "b, @SW_R_Opt_Can, @SW_R_Opt_Prop_Out, @SW_R_Opt_TimeOut, @SW_R_Opt_Cont_Keys, @S" +
                "W_R_Opt_LockSameRow, @SW_R_Opt_Use_SP, @SW_R_Opt_MaxPairDevices, @SW_R_Opt_Shift" +
                "Page, @SW_R_Opt_Output_No, @SW_R_Opt_Dig_Input_No, @SW_R_Opt_Ana_Input_No, @SW_R" +
                "evisioni, @SW_Funzionamento, @SW_Config, @SW_Obsolete_ver, @SW_Obsolete_ver_from" +
                "_date);\r\nSELECT Id, SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, S" +
                "W_Versione, SW_Revisione, SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Use_Ole" +
                "d, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use" +
                "_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_U" +
                "se_LedTorch, SW_P_PLD, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, " +
                "SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_T" +
                "imeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxP" +
                "airDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_" +
                "Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW" +
                "_Obsolete_ver_from_date FROM Firmware WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisioni", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisioni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Funzionamento", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Funzionamento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Config", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Config", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Firmware] SET [SW_Code] = @SW_Code, [SW_TipoDevice] = @SW_TipoDevic" +
                "e, [SW_Descrizione] = @SW_Descrizione, [SW_Descrizione_EN] = @SW_Descrizione_EN," +
                " [SW_Versione] = @SW_Versione, [SW_Revisione] = @SW_Revisione, [SW_Standard] = @" +
                "SW_Standard, [SW_FamProd] = @SW_FamProd, [SW_P_Opt_RF] = @SW_P_Opt_RF, [SW_P_Opt" +
                "_Use_Oled] = @SW_P_Opt_Use_Oled, [SW_P_Opt_Use_EmButt] = @SW_P_Opt_Use_EmButt, [" +
                "SW_P_Opt_Use_Backlight] = @SW_P_Opt_Use_Backlight, [SW_P_Opt_ShiftPage] = @SW_P_" +
                "Opt_ShiftPage, [SW_P_Opt_Use_Accel] = @SW_P_Opt_Use_Accel, [SW_P_Opt_Use_SP] = @" +
                "SW_P_Opt_Use_SP, [SW_P_Opt_Use_Buzzer] = @SW_P_Opt_Use_Buzzer, [SW_P_Opt_Use_Vib" +
                "racall] = @SW_P_Opt_Use_Vibracall, [SW_P_Opt_Use_LedTorch] = @SW_P_Opt_Use_LedTo" +
                "rch, [SW_P_PLD] = @SW_P_PLD, [SW_P_Opt_MaxPairDevices] = @SW_P_Opt_MaxPairDevice" +
                "s, [SW_R_Opt_RF] = @SW_R_Opt_RF, [SW_R_Opt_Plug_Exp] = @SW_R_Opt_Plug_Exp, [SW_R" +
                "_Opt_Plug_Ple] = @SW_R_Opt_Plug_Ple, [SW_R_Opt_Em_Keyb] = @SW_R_Opt_Em_Keyb, [SW" +
                "_R_Opt_Can] = @SW_R_Opt_Can, [SW_R_Opt_Prop_Out] = @SW_R_Opt_Prop_Out, [SW_R_Opt" +
                "_TimeOut] = @SW_R_Opt_TimeOut, [SW_R_Opt_Cont_Keys] = @SW_R_Opt_Cont_Keys, [SW_R" +
                "_Opt_LockSameRow] = @SW_R_Opt_LockSameRow, [SW_R_Opt_Use_SP] = @SW_R_Opt_Use_SP," +
                " [SW_R_Opt_MaxPairDevices] = @SW_R_Opt_MaxPairDevices, [SW_R_Opt_ShiftPage] = @S" +
                "W_R_Opt_ShiftPage, [SW_R_Opt_Output_No] = @SW_R_Opt_Output_No, [SW_R_Opt_Dig_Inp" +
                "ut_No] = @SW_R_Opt_Dig_Input_No, [SW_R_Opt_Ana_Input_No] = @SW_R_Opt_Ana_Input_N" +
                "o, [SW_Revisioni] = @SW_Revisioni, [SW_Funzionamento] = @SW_Funzionamento, [SW_C" +
                "onfig] = @SW_Config, [SW_Obsolete_ver] = @SW_Obsolete_ver, [SW_Obsolete_ver_from" +
                "_date] = @SW_Obsolete_ver_from_date WHERE (([Id] = @Original_Id) AND ([SW_Code] " +
                "= @Original_SW_Code) AND ([SW_TipoDevice] = @Original_SW_TipoDevice) AND ((@IsNu" +
                "ll_SW_Descrizione = 1 AND [SW_Descrizione] IS NULL) OR ([SW_Descrizione] = @Orig" +
                "inal_SW_Descrizione)) AND ((@IsNull_SW_Descrizione_EN = 1 AND [SW_Descrizione_EN" +
                "] IS NULL) OR ([SW_Descrizione_EN] = @Original_SW_Descrizione_EN)) AND ((@IsNull" +
                "_SW_Versione = 1 AND [SW_Versione] IS NULL) OR ([SW_Versione] = @Original_SW_Ver" +
                "sione)) AND ((@IsNull_SW_Revisione = 1 AND [SW_Revisione] IS NULL) OR ([SW_Revis" +
                "ione] = @Original_SW_Revisione)) AND ([SW_Standard] = @Original_SW_Standard) AND" +
                " ((@IsNull_SW_FamProd = 1 AND [SW_FamProd] IS NULL) OR ([SW_FamProd] = @Original" +
                "_SW_FamProd)) AND ([SW_P_Opt_RF] = @Original_SW_P_Opt_RF) AND ([SW_P_Opt_Use_Ole" +
                "d] = @Original_SW_P_Opt_Use_Oled) AND ([SW_P_Opt_Use_EmButt] = @Original_SW_P_Op" +
                "t_Use_EmButt) AND ([SW_P_Opt_Use_Backlight] = @Original_SW_P_Opt_Use_Backlight) " +
                "AND ([SW_P_Opt_ShiftPage] = @Original_SW_P_Opt_ShiftPage) AND ([SW_P_Opt_Use_Acc" +
                "el] = @Original_SW_P_Opt_Use_Accel) AND ([SW_P_Opt_Use_SP] = @Original_SW_P_Opt_" +
                "Use_SP) AND ([SW_P_Opt_Use_Buzzer] = @Original_SW_P_Opt_Use_Buzzer) AND ([SW_P_O" +
                "pt_Use_Vibracall] = @Original_SW_P_Opt_Use_Vibracall) AND ([SW_P_Opt_Use_LedTorc" +
                "h] = @Original_SW_P_Opt_Use_LedTorch) AND ([SW_P_PLD] = @Original_SW_P_PLD) AND " +
                "((@IsNull_SW_P_Opt_MaxPairDevices = 1 AND [SW_P_Opt_MaxPairDevices] IS NULL) OR " +
                "([SW_P_Opt_MaxPairDevices] = @Original_SW_P_Opt_MaxPairDevices)) AND ([SW_R_Opt_" +
                "RF] = @Original_SW_R_Opt_RF) AND ([SW_R_Opt_Plug_Exp] = @Original_SW_R_Opt_Plug_" +
                "Exp) AND ([SW_R_Opt_Plug_Ple] = @Original_SW_R_Opt_Plug_Ple) AND ([SW_R_Opt_Em_K" +
                "eyb] = @Original_SW_R_Opt_Em_Keyb) AND ([SW_R_Opt_Can] = @Original_SW_R_Opt_Can)" +
                " AND ([SW_R_Opt_Prop_Out] = @Original_SW_R_Opt_Prop_Out) AND ([SW_R_Opt_TimeOut]" +
                " = @Original_SW_R_Opt_TimeOut) AND ((@IsNull_SW_R_Opt_Cont_Keys = 1 AND [SW_R_Op" +
                "t_Cont_Keys] IS NULL) OR ([SW_R_Opt_Cont_Keys] = @Original_SW_R_Opt_Cont_Keys)) " +
                "AND ([SW_R_Opt_LockSameRow] = @Original_SW_R_Opt_LockSameRow) AND ([SW_R_Opt_Use" +
                "_SP] = @Original_SW_R_Opt_Use_SP) AND ((@IsNull_SW_R_Opt_MaxPairDevices = 1 AND " +
                "[SW_R_Opt_MaxPairDevices] IS NULL) OR ([SW_R_Opt_MaxPairDevices] = @Original_SW_" +
                "R_Opt_MaxPairDevices)) AND ([SW_R_Opt_ShiftPage] = @Original_SW_R_Opt_ShiftPage)" +
                " AND ((@IsNull_SW_R_Opt_Output_No = 1 AND [SW_R_Opt_Output_No] IS NULL) OR ([SW_" +
                "R_Opt_Output_No] = @Original_SW_R_Opt_Output_No)) AND ((@IsNull_SW_R_Opt_Dig_Inp" +
                "ut_No = 1 AND [SW_R_Opt_Dig_Input_No] IS NULL) OR ([SW_R_Opt_Dig_Input_No] = @Or" +
                "iginal_SW_R_Opt_Dig_Input_No)) AND ((@IsNull_SW_R_Opt_Ana_Input_No = 1 AND [SW_R" +
                "_Opt_Ana_Input_No] IS NULL) OR ([SW_R_Opt_Ana_Input_No] = @Original_SW_R_Opt_Ana" +
                "_Input_No)) AND ([SW_Obsolete_ver] = @Original_SW_Obsolete_ver) AND ((@IsNull_SW" +
                "_Obsolete_ver_from_date = 1 AND [SW_Obsolete_ver_from_date] IS NULL) OR ([SW_Obs" +
                "olete_ver_from_date] = @Original_SW_Obsolete_ver_from_date)));\r\nSELECT Id, SW_Co" +
                "de, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione, SW_Revisione," +
                " SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, S" +
                "W_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, " +
                "SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch, SW_P_PLD, SW" +
                "_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, SW_R_Opt_Plug_Ple, SW_R_O" +
                "pt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_R_Opt_Cont_Key" +
                "s, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxPairDevices, SW_R_Opt_Shif" +
                "tPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Input_No, SW_Revi" +
                "sioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW_Obsolete_ver_from_date F" +
                "ROM Firmware WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisioni", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisioni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Funzionamento", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Funzionamento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Config", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Config", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Versione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Revisione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_FamProd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch, SW_P_PLD, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW_Obsolete_ver_from_date FROM dbo.Firmware";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT\r\n  MAX(Firmware.SW_Revisione) AS UltimaRevisione\r\nFROM dbo.Firmware\r\nwhere" +
                " (SW_Code = @CodFw)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodFw", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_SL_History.FirmwareDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_SL_History.FirmwareDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_SL_History.FirmwareDataTable dataTable = new ds_SL_History.FirmwareDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History.FirmwareDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History dataSet) {
            return this.Adapter.Update(dataSet, "Firmware");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_FamProd, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    bool Original_SW_P_PLD, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_SW_Code == null)) {
                throw new global::System.ArgumentNullException("Original_SW_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SW_Code));
            }
            if ((Original_SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("Original_SW_TipoDevice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SW_TipoDevice));
            }
            if ((Original_SW_Descrizione == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SW_Descrizione));
            }
            if ((Original_SW_Descrizione_EN == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SW_Descrizione_EN));
            }
            if ((Original_SW_Versione == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SW_Versione));
            }
            if ((Original_SW_Revisione == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SW_Revisione));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_SW_Standard));
            if ((Original_SW_FamProd == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_SW_FamProd));
            }
            if ((Original_SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_P_Opt_RF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SW_P_Opt_RF));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_SW_P_Opt_Use_Oled));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_SW_P_Opt_Use_EmButt));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_SW_P_Opt_Use_Backlight));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_SW_P_Opt_ShiftPage));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_SW_P_Opt_Use_Accel));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_SW_P_Opt_Use_SP));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_SW_P_Opt_Use_Buzzer));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_SW_P_Opt_Use_Vibracall));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_SW_P_Opt_Use_LedTorch));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_SW_P_PLD));
            if ((Original_SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_RF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_SW_R_Opt_RF));
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_SW_R_Opt_Plug_Exp));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_SW_R_Opt_Plug_Ple));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_SW_R_Opt_Em_Keyb));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((bool)(Original_SW_R_Opt_Can));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_SW_R_Opt_Prop_Out));
            if ((Original_SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_SW_R_Opt_TimeOut));
            }
            if ((Original_SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_SW_R_Opt_LockSameRow));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((bool)(Original_SW_R_Opt_Use_SP));
            if ((Original_SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_SW_R_Opt_ShiftPage));
            if ((Original_SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[47].Value = ((bool)(Original_SW_Obsolete_ver));
            if ((Original_SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((System.DateTime)(Original_SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_FamProd, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    bool SW_P_PLD, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date) {
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            if ((SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("SW_TipoDevice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SW_TipoDevice));
            }
            if ((SW_Descrizione == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SW_Descrizione));
            }
            if ((SW_Descrizione_EN == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SW_Descrizione_EN));
            }
            if ((SW_Versione == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SW_Versione));
            }
            if ((SW_Revisione == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SW_Revisione));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(SW_Standard));
            if ((SW_FamProd == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SW_FamProd));
            }
            if ((SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_P_Opt_RF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SW_P_Opt_RF));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(SW_P_Opt_Use_Oled));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(SW_P_Opt_Use_EmButt));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(SW_P_Opt_Use_Backlight));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(SW_P_Opt_ShiftPage));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(SW_P_Opt_Use_Accel));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(SW_P_Opt_Use_SP));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(SW_P_Opt_Use_Buzzer));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(SW_P_Opt_Use_Vibracall));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(SW_P_Opt_Use_LedTorch));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(SW_P_PLD));
            if ((SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_RF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(SW_R_Opt_RF));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(SW_R_Opt_Plug_Exp));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(SW_R_Opt_Plug_Ple));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(SW_R_Opt_Em_Keyb));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(SW_R_Opt_Can));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(SW_R_Opt_Prop_Out));
            if ((SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(SW_R_Opt_TimeOut));
            }
            if ((SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(SW_R_Opt_LockSameRow));
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(SW_R_Opt_Use_SP));
            if ((SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(SW_R_Opt_ShiftPage));
            if ((SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SW_Revisioni == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SW_Revisioni));
            }
            if ((SW_Funzionamento == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(SW_Funzionamento));
            }
            if ((SW_Config == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(SW_Config));
            }
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(SW_Obsolete_ver));
            if ((SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((System.DateTime)(SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_FamProd, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    bool SW_P_PLD, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date, 
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_FamProd, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    bool Original_SW_P_PLD, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date, 
                    int Id) {
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            if ((SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("SW_TipoDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SW_TipoDevice));
            }
            if ((SW_Descrizione == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SW_Descrizione));
            }
            if ((SW_Descrizione_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SW_Descrizione_EN));
            }
            if ((SW_Versione == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SW_Versione));
            }
            if ((SW_Revisione == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SW_Revisione));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(SW_Standard));
            if ((SW_FamProd == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SW_FamProd));
            }
            if ((SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_P_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SW_P_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(SW_P_Opt_Use_Oled));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(SW_P_Opt_Use_EmButt));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(SW_P_Opt_Use_Backlight));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(SW_P_Opt_ShiftPage));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(SW_P_Opt_Use_Accel));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(SW_P_Opt_Use_SP));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(SW_P_Opt_Use_Buzzer));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(SW_P_Opt_Use_Vibracall));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(SW_P_Opt_Use_LedTorch));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(SW_P_PLD));
            if ((SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(SW_R_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(SW_R_Opt_Plug_Exp));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(SW_R_Opt_Plug_Ple));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(SW_R_Opt_Em_Keyb));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(SW_R_Opt_Can));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(SW_R_Opt_Prop_Out));
            if ((SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(SW_R_Opt_TimeOut));
            }
            if ((SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(SW_R_Opt_LockSameRow));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(SW_R_Opt_Use_SP));
            if ((SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(SW_R_Opt_ShiftPage));
            if ((SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SW_Revisioni == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SW_Revisioni));
            }
            if ((SW_Funzionamento == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(SW_Funzionamento));
            }
            if ((SW_Config == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(SW_Config));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(SW_Obsolete_ver));
            if ((SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_Id));
            if ((Original_SW_Code == null)) {
                throw new global::System.ArgumentNullException("Original_SW_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_SW_Code));
            }
            if ((Original_SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("Original_SW_TipoDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_SW_TipoDevice));
            }
            if ((Original_SW_Descrizione == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_SW_Descrizione));
            }
            if ((Original_SW_Descrizione_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_SW_Descrizione_EN));
            }
            if ((Original_SW_Versione == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_SW_Versione));
            }
            if ((Original_SW_Revisione == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_SW_Revisione));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_SW_Standard));
            if ((Original_SW_FamProd == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_SW_FamProd));
            }
            if ((Original_SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_P_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_SW_P_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_SW_P_Opt_Use_Oled));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_SW_P_Opt_Use_EmButt));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_SW_P_Opt_Use_Backlight));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_SW_P_Opt_ShiftPage));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_SW_P_Opt_Use_Accel));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(Original_SW_P_Opt_Use_SP));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_SW_P_Opt_Use_Buzzer));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_SW_P_Opt_Use_Vibracall));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Original_SW_P_Opt_Use_LedTorch));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_SW_P_PLD));
            if ((Original_SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_SW_R_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(Original_SW_R_Opt_Plug_Exp));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_SW_R_Opt_Plug_Ple));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Original_SW_R_Opt_Em_Keyb));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_SW_R_Opt_Can));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_SW_R_Opt_Prop_Out));
            if ((Original_SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_SW_R_Opt_TimeOut));
            }
            if ((Original_SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(Original_SW_R_Opt_LockSameRow));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_SW_R_Opt_Use_SP));
            if ((Original_SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(Original_SW_R_Opt_ShiftPage));
            if ((Original_SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(Original_SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[87].Value = ((bool)(Original_SW_Obsolete_ver));
            if ((Original_SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_FamProd, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    bool SW_P_PLD, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date, 
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_FamProd, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    bool Original_SW_P_PLD, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date) {
            return this.Update(SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch, SW_P_PLD, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW_Obsolete_ver_from_date, Original_Id, Original_SW_Code, Original_SW_TipoDevice, Original_SW_Descrizione, Original_SW_Descrizione_EN, Original_SW_Versione, Original_SW_Revisione, Original_SW_Standard, Original_SW_FamProd, Original_SW_P_Opt_RF, Original_SW_P_Opt_Use_Oled, Original_SW_P_Opt_Use_EmButt, Original_SW_P_Opt_Use_Backlight, Original_SW_P_Opt_ShiftPage, Original_SW_P_Opt_Use_Accel, Original_SW_P_Opt_Use_SP, Original_SW_P_Opt_Use_Buzzer, Original_SW_P_Opt_Use_Vibracall, Original_SW_P_Opt_Use_LedTorch, Original_SW_P_PLD, Original_SW_P_Opt_MaxPairDevices, Original_SW_R_Opt_RF, Original_SW_R_Opt_Plug_Exp, Original_SW_R_Opt_Plug_Ple, Original_SW_R_Opt_Em_Keyb, Original_SW_R_Opt_Can, Original_SW_R_Opt_Prop_Out, Original_SW_R_Opt_TimeOut, Original_SW_R_Opt_Cont_Keys, Original_SW_R_Opt_LockSameRow, Original_SW_R_Opt_Use_SP, Original_SW_R_Opt_MaxPairDevices, Original_SW_R_Opt_ShiftPage, Original_SW_R_Opt_Output_No, Original_SW_R_Opt_Dig_Input_No, Original_SW_R_Opt_Ana_Input_No, Original_SW_Obsolete_ver, Original_SW_Obsolete_ver_from_date, Original_Id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GetLastRevision(string CodFw) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((CodFw == null)) {
                throw new global::System.ArgumentNullException("CodFw");
            }
            else {
                command.Parameters[0].Value = ((string)(CodFw));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BS_SN_HistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BS_SN_HistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BS_SN_History";
            tableMapping.ColumnMappings.Add("serialnumber", "serialnumber");
            tableMapping.ColumnMappings.Add("version", "version");
            tableMapping.ColumnMappings.Add("revision", "revision");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("device_id", "device_id");
            tableMapping.ColumnMappings.Add("created_at", "created_at");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("extras", "extras");
            tableMapping.ColumnMappings.Add("user_email", "user_email");
            tableMapping.ColumnMappings.Add("customer_name", "customer_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BS_SN_History] ([serialnumber], [version], [revision], [user_id], [device_id], [created_at], [type], [extras], [user_email], [customer_name]) VALUES (@serialnumber, @version, @revision, @user_id, @device_id, @created_at, @type, @extras, @user_email, @customer_name)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serialnumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serialnumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@version", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "version", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@revision", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "revision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@device_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "device_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created_at", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_at", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@extras", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "extras", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customer_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customer_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT serialnumber, version, revision, user_id, device_id, created_at, type, ext" +
                "ras, user_email, customer_name FROM dbo.BS_SN_History";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_SL_History.BS_SN_HistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_SL_History.BS_SN_HistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_SL_History.BS_SN_HistoryDataTable dataTable = new ds_SL_History.BS_SN_HistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History.BS_SN_HistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History dataSet) {
            return this.Adapter.Update(dataSet, "BS_SN_History");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string serialnumber, string version, string revision, global::System.Nullable<int> user_id, string device_id, global::System.Nullable<global::System.DateTime> created_at, string type, string extras, string user_email, string customer_name) {
            if ((serialnumber == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(serialnumber));
            }
            if ((version == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(version));
            }
            if ((revision == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(revision));
            }
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((device_id == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(device_id));
            }
            if ((created_at.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(created_at.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((type == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(type));
            }
            if ((extras == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(extras));
            }
            if ((user_email == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(user_email));
            }
            if ((customer_name == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(customer_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SerialNumbers_ObsoleteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SerialNumbers_ObsoleteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SerialNumbers_Obsolete";
            tableMapping.ColumnMappings.Add("Ser_Kit", "Ser_Kit");
            tableMapping.ColumnMappings.Add("Ser_ID_Cli", "Ser_ID_Cli");
            tableMapping.ColumnMappings.Add("Ser_Device", "Ser_Device");
            tableMapping.ColumnMappings.Add("Ser_Device_ID_Code", "Ser_Device_ID_Code");
            tableMapping.ColumnMappings.Add("Ser_OfficialSerial", "Ser_OfficialSerial");
            tableMapping.ColumnMappings.Add("Ser_ReadSerial", "Ser_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_SW_Code", "Ser_SW_Code");
            tableMapping.ColumnMappings.Add("Ser_SW_Code_Rev", "Ser_SW_Code_Rev");
            tableMapping.ColumnMappings.Add("Ser_SW_Std_Type", "Ser_SW_Std_Type");
            tableMapping.ColumnMappings.Add("Ser_SN_prod", "Ser_SN_prod");
            tableMapping.ColumnMappings.Add("Ser_Commessa", "Ser_Commessa");
            tableMapping.ColumnMappings.Add("Ser_DateProduction", "Ser_DateProduction");
            tableMapping.ColumnMappings.Add("Ser_Spedito", "Ser_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Data_Spedito", "Ser_Data_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Substition_ID_ReadSerial", "Ser_Substition_ID_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_Note", "Ser_Note");
            tableMapping.ColumnMappings.Add("Ser_ObsoleteFromDate", "Ser_ObsoleteFromDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SerialNumbers_Obsolete] ([Ser_Kit], [Ser_ID_Cli], [Ser_Device], [Ser_Device_ID_Code], [Ser_OfficialSerial], [Ser_ReadSerial], [Ser_SW_Code], [Ser_SW_Code_Rev], [Ser_SW_Std_Type], [Ser_SN_prod], [Ser_Commessa], [Ser_DateProduction], [Ser_Spedito], [Ser_Data_Spedito], [Ser_Substition_ID_ReadSerial], [Ser_Note], [Ser_ObsoleteFromDate]) VALUES (@Ser_Kit, @Ser_ID_Cli, @Ser_Device, @Ser_Device_ID_Code, @Ser_OfficialSerial, @Ser_ReadSerial, @Ser_SW_Code, @Ser_SW_Code_Rev, @Ser_SW_Std_Type, @Ser_SN_prod, @Ser_Commessa, @Ser_DateProduction, @Ser_Spedito, @Ser_Data_Spedito, @Ser_Substition_ID_ReadSerial, @Ser_Note, @Ser_ObsoleteFromDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Note", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ObsoleteFromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ObsoleteFromDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note, Ser_ObsoleteFromDate FROM dbo.SerialNumbers_Obsolete";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_SL_History.SerialNumbers_ObsoleteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_SL_History.SerialNumbers_ObsoleteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_SL_History.SerialNumbers_ObsoleteDataTable dataTable = new ds_SL_History.SerialNumbers_ObsoleteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History.SerialNumbers_ObsoleteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_SL_History dataSet) {
            return this.Adapter.Update(dataSet, "SerialNumbers_Obsolete");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note, 
                    global::System.Nullable<global::System.DateTime> Ser_ObsoleteFromDate) {
            if ((Ser_Kit == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ser_Kit));
            }
            if ((Ser_ID_Cli.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Ser_Device == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Ser_Device));
            }
            if ((Ser_Device_ID_Code == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Ser_Device_ID_Code));
            }
            if ((Ser_OfficialSerial == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ser_OfficialSerial));
            }
            if ((Ser_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Ser_ReadSerial));
            }
            if ((Ser_SW_Code == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Ser_SW_Code));
            }
            if ((Ser_SW_Code_Rev == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Ser_SW_Code_Rev));
            }
            if ((Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ser_SN_prod == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ser_SN_prod));
            }
            if ((Ser_Commessa == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Ser_Commessa));
            }
            if ((Ser_DateProduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Ser_DateProduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Ser_Spedito));
            if ((Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Ser_Substition_ID_ReadSerial));
            }
            if ((Ser_Note == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Ser_Note));
            }
            if ((Ser_ObsoleteFromDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(Ser_ObsoleteFromDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SerialNumbersTableAdapter _serialNumbersTableAdapter;
        
        private FirmwareTableAdapter _firmwareTableAdapter;
        
        private BS_SN_HistoryTableAdapter _bS_SN_HistoryTableAdapter;
        
        private SerialNumbers_ObsoleteTableAdapter _serialNumbers_ObsoleteTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SerialNumbersTableAdapter SerialNumbersTableAdapter {
            get {
                return this._serialNumbersTableAdapter;
            }
            set {
                this._serialNumbersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FirmwareTableAdapter FirmwareTableAdapter {
            get {
                return this._firmwareTableAdapter;
            }
            set {
                this._firmwareTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BS_SN_HistoryTableAdapter BS_SN_HistoryTableAdapter {
            get {
                return this._bS_SN_HistoryTableAdapter;
            }
            set {
                this._bS_SN_HistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SerialNumbers_ObsoleteTableAdapter SerialNumbers_ObsoleteTableAdapter {
            get {
                return this._serialNumbers_ObsoleteTableAdapter;
            }
            set {
                this._serialNumbers_ObsoleteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._serialNumbersTableAdapter != null) 
                            && (this._serialNumbersTableAdapter.Connection != null))) {
                    return this._serialNumbersTableAdapter.Connection;
                }
                if (((this._firmwareTableAdapter != null) 
                            && (this._firmwareTableAdapter.Connection != null))) {
                    return this._firmwareTableAdapter.Connection;
                }
                if (((this._bS_SN_HistoryTableAdapter != null) 
                            && (this._bS_SN_HistoryTableAdapter.Connection != null))) {
                    return this._bS_SN_HistoryTableAdapter.Connection;
                }
                if (((this._serialNumbers_ObsoleteTableAdapter != null) 
                            && (this._serialNumbers_ObsoleteTableAdapter.Connection != null))) {
                    return this._serialNumbers_ObsoleteTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._serialNumbersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._firmwareTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bS_SN_HistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(ds_SL_History dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._serialNumbersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SerialNumbers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._serialNumbersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._firmwareTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Firmware.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._firmwareTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bS_SN_HistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BS_SN_History.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bS_SN_HistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SerialNumbers_Obsolete.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._serialNumbers_ObsoleteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(ds_SL_History dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._serialNumbersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SerialNumbers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._serialNumbersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._firmwareTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Firmware.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._firmwareTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bS_SN_HistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BS_SN_History.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bS_SN_HistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SerialNumbers_Obsolete.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._serialNumbers_ObsoleteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(ds_SL_History dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SerialNumbers_Obsolete.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._serialNumbers_ObsoleteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bS_SN_HistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BS_SN_History.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bS_SN_HistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._firmwareTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Firmware.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._firmwareTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._serialNumbersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SerialNumbers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._serialNumbersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(ds_SL_History dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._serialNumbersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._serialNumbersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._firmwareTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._firmwareTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._bS_SN_HistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bS_SN_HistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._serialNumbers_ObsoleteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._serialNumbers_ObsoleteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager non contiene informazioni di connessione. Impostare la propri" +
                        "età TableAdapter di ciascun oggetto TableAdapterManager su un\'istanza TableAdapt" +
                        "er valida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Impossibile avviare la transazione. La connessione dati corrente non supporta le " +
                        "transazioni oppure lo stato corrente non consente l\'avvio della transazione.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._serialNumbersTableAdapter != null)) {
                    revertConnections.Add(this._serialNumbersTableAdapter, this._serialNumbersTableAdapter.Connection);
                    this._serialNumbersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._serialNumbersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._serialNumbersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._serialNumbersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._serialNumbersTableAdapter.Adapter);
                    }
                }
                if ((this._firmwareTableAdapter != null)) {
                    revertConnections.Add(this._firmwareTableAdapter, this._firmwareTableAdapter.Connection);
                    this._firmwareTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._firmwareTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._firmwareTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._firmwareTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._firmwareTableAdapter.Adapter);
                    }
                }
                if ((this._bS_SN_HistoryTableAdapter != null)) {
                    revertConnections.Add(this._bS_SN_HistoryTableAdapter, this._bS_SN_HistoryTableAdapter.Connection);
                    this._bS_SN_HistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bS_SN_HistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bS_SN_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bS_SN_HistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bS_SN_HistoryTableAdapter.Adapter);
                    }
                }
                if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                    revertConnections.Add(this._serialNumbers_ObsoleteTableAdapter, this._serialNumbers_ObsoleteTableAdapter.Connection);
                    this._serialNumbers_ObsoleteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._serialNumbers_ObsoleteTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._serialNumbers_ObsoleteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._serialNumbers_ObsoleteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._serialNumbers_ObsoleteTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._serialNumbersTableAdapter != null)) {
                    this._serialNumbersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._serialNumbersTableAdapter]));
                    this._serialNumbersTableAdapter.Transaction = null;
                }
                if ((this._firmwareTableAdapter != null)) {
                    this._firmwareTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._firmwareTableAdapter]));
                    this._firmwareTableAdapter.Transaction = null;
                }
                if ((this._bS_SN_HistoryTableAdapter != null)) {
                    this._bS_SN_HistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bS_SN_HistoryTableAdapter]));
                    this._bS_SN_HistoryTableAdapter.Transaction = null;
                }
                if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                    this._serialNumbers_ObsoleteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._serialNumbers_ObsoleteTableAdapter]));
                    this._serialNumbers_ObsoleteTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591