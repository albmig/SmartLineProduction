//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SmartLineProduction {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ds_Programmazione")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ds_Programmazione : global::System.Data.DataSet {
        
        private SF_LastSerialNumberDataTable tableSF_LastSerialNumber;
        
        private FirmwareDataTable tableFirmware;
        
        private SF_Commesse_SLDataTable tableSF_Commesse_SL;
        
        private FW_ClientiDataTable tableFW_Clienti;
        
        private SF_ArticoliToXSWRDataTable tableSF_ArticoliToXSWR;
        
        private SF_ArticoliDataTable tableSF_Articoli;
        
        private CommesseSL_CountDataTable tableCommesseSL_Count;
        
        private SerialNumbersDataTable tableSerialNumbers;
        
        private dt_Firmware_lookupCommesseSLDataTable tabledt_Firmware_lookupCommesseSL;
        
        private SerialNumbers_ObsoleteDataTable tableSerialNumbers_Obsolete;
        
        private SafetyPointRFIDDataTable tableSafetyPointRFID;
        
        private Fam_ProdDataTable tableFam_Prod;
        
        private dt_Tmp_ProgrammaDataTable tabledt_Tmp_Programma;
        
        private dt_Tmp_FwDataTable tabledt_Tmp_Fw;
        
        private global::System.Data.DataRelation relationdt_Tmp_Programma_dt_Firmware;
        
        private global::System.Data.DataRelation relationSF_Commesse_SL_dt_FW_Clienti;
        
        private global::System.Data.DataRelation relationSF_Commesse_SL_SF_ArticoliToXSWR;
        
        private global::System.Data.DataRelation relationSF_Commesse_SL_SF_Articoli;
        
        private global::System.Data.DataRelation relationSF_Commesse_SL_CommesseSL_Count;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ds_Programmazione() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ds_Programmazione(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SF_LastSerialNumber"] != null)) {
                    base.Tables.Add(new SF_LastSerialNumberDataTable(ds.Tables["SF_LastSerialNumber"]));
                }
                if ((ds.Tables["Firmware"] != null)) {
                    base.Tables.Add(new FirmwareDataTable(ds.Tables["Firmware"]));
                }
                if ((ds.Tables["SF_Commesse_SL"] != null)) {
                    base.Tables.Add(new SF_Commesse_SLDataTable(ds.Tables["SF_Commesse_SL"]));
                }
                if ((ds.Tables["FW_Clienti"] != null)) {
                    base.Tables.Add(new FW_ClientiDataTable(ds.Tables["FW_Clienti"]));
                }
                if ((ds.Tables["SF_ArticoliToXSWR"] != null)) {
                    base.Tables.Add(new SF_ArticoliToXSWRDataTable(ds.Tables["SF_ArticoliToXSWR"]));
                }
                if ((ds.Tables["SF_Articoli"] != null)) {
                    base.Tables.Add(new SF_ArticoliDataTable(ds.Tables["SF_Articoli"]));
                }
                if ((ds.Tables["CommesseSL_Count"] != null)) {
                    base.Tables.Add(new CommesseSL_CountDataTable(ds.Tables["CommesseSL_Count"]));
                }
                if ((ds.Tables["SerialNumbers"] != null)) {
                    base.Tables.Add(new SerialNumbersDataTable(ds.Tables["SerialNumbers"]));
                }
                if ((ds.Tables["dt_Firmware_lookupCommesseSL"] != null)) {
                    base.Tables.Add(new dt_Firmware_lookupCommesseSLDataTable(ds.Tables["dt_Firmware_lookupCommesseSL"]));
                }
                if ((ds.Tables["SerialNumbers_Obsolete"] != null)) {
                    base.Tables.Add(new SerialNumbers_ObsoleteDataTable(ds.Tables["SerialNumbers_Obsolete"]));
                }
                if ((ds.Tables["SafetyPointRFID"] != null)) {
                    base.Tables.Add(new SafetyPointRFIDDataTable(ds.Tables["SafetyPointRFID"]));
                }
                if ((ds.Tables["Fam_Prod"] != null)) {
                    base.Tables.Add(new Fam_ProdDataTable(ds.Tables["Fam_Prod"]));
                }
                if ((ds.Tables["dt_Tmp_Programma"] != null)) {
                    base.Tables.Add(new dt_Tmp_ProgrammaDataTable(ds.Tables["dt_Tmp_Programma"]));
                }
                if ((ds.Tables["dt_Tmp_Fw"] != null)) {
                    base.Tables.Add(new dt_Tmp_FwDataTable(ds.Tables["dt_Tmp_Fw"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SF_LastSerialNumberDataTable SF_LastSerialNumber {
            get {
                return this.tableSF_LastSerialNumber;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FirmwareDataTable Firmware {
            get {
                return this.tableFirmware;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SF_Commesse_SLDataTable SF_Commesse_SL {
            get {
                return this.tableSF_Commesse_SL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FW_ClientiDataTable FW_Clienti {
            get {
                return this.tableFW_Clienti;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SF_ArticoliToXSWRDataTable SF_ArticoliToXSWR {
            get {
                return this.tableSF_ArticoliToXSWR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SF_ArticoliDataTable SF_Articoli {
            get {
                return this.tableSF_Articoli;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommesseSL_CountDataTable CommesseSL_Count {
            get {
                return this.tableCommesseSL_Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SerialNumbersDataTable SerialNumbers {
            get {
                return this.tableSerialNumbers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_Firmware_lookupCommesseSLDataTable dt_Firmware_lookupCommesseSL {
            get {
                return this.tabledt_Firmware_lookupCommesseSL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SerialNumbers_ObsoleteDataTable SerialNumbers_Obsolete {
            get {
                return this.tableSerialNumbers_Obsolete;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SafetyPointRFIDDataTable SafetyPointRFID {
            get {
                return this.tableSafetyPointRFID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Fam_ProdDataTable Fam_Prod {
            get {
                return this.tableFam_Prod;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_Tmp_ProgrammaDataTable dt_Tmp_Programma {
            get {
                return this.tabledt_Tmp_Programma;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_Tmp_FwDataTable dt_Tmp_Fw {
            get {
                return this.tabledt_Tmp_Fw;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ds_Programmazione cln = ((ds_Programmazione)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SF_LastSerialNumber"] != null)) {
                    base.Tables.Add(new SF_LastSerialNumberDataTable(ds.Tables["SF_LastSerialNumber"]));
                }
                if ((ds.Tables["Firmware"] != null)) {
                    base.Tables.Add(new FirmwareDataTable(ds.Tables["Firmware"]));
                }
                if ((ds.Tables["SF_Commesse_SL"] != null)) {
                    base.Tables.Add(new SF_Commesse_SLDataTable(ds.Tables["SF_Commesse_SL"]));
                }
                if ((ds.Tables["FW_Clienti"] != null)) {
                    base.Tables.Add(new FW_ClientiDataTable(ds.Tables["FW_Clienti"]));
                }
                if ((ds.Tables["SF_ArticoliToXSWR"] != null)) {
                    base.Tables.Add(new SF_ArticoliToXSWRDataTable(ds.Tables["SF_ArticoliToXSWR"]));
                }
                if ((ds.Tables["SF_Articoli"] != null)) {
                    base.Tables.Add(new SF_ArticoliDataTable(ds.Tables["SF_Articoli"]));
                }
                if ((ds.Tables["CommesseSL_Count"] != null)) {
                    base.Tables.Add(new CommesseSL_CountDataTable(ds.Tables["CommesseSL_Count"]));
                }
                if ((ds.Tables["SerialNumbers"] != null)) {
                    base.Tables.Add(new SerialNumbersDataTable(ds.Tables["SerialNumbers"]));
                }
                if ((ds.Tables["dt_Firmware_lookupCommesseSL"] != null)) {
                    base.Tables.Add(new dt_Firmware_lookupCommesseSLDataTable(ds.Tables["dt_Firmware_lookupCommesseSL"]));
                }
                if ((ds.Tables["SerialNumbers_Obsolete"] != null)) {
                    base.Tables.Add(new SerialNumbers_ObsoleteDataTable(ds.Tables["SerialNumbers_Obsolete"]));
                }
                if ((ds.Tables["SafetyPointRFID"] != null)) {
                    base.Tables.Add(new SafetyPointRFIDDataTable(ds.Tables["SafetyPointRFID"]));
                }
                if ((ds.Tables["Fam_Prod"] != null)) {
                    base.Tables.Add(new Fam_ProdDataTable(ds.Tables["Fam_Prod"]));
                }
                if ((ds.Tables["dt_Tmp_Programma"] != null)) {
                    base.Tables.Add(new dt_Tmp_ProgrammaDataTable(ds.Tables["dt_Tmp_Programma"]));
                }
                if ((ds.Tables["dt_Tmp_Fw"] != null)) {
                    base.Tables.Add(new dt_Tmp_FwDataTable(ds.Tables["dt_Tmp_Fw"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSF_LastSerialNumber = ((SF_LastSerialNumberDataTable)(base.Tables["SF_LastSerialNumber"]));
            if ((initTable == true)) {
                if ((this.tableSF_LastSerialNumber != null)) {
                    this.tableSF_LastSerialNumber.InitVars();
                }
            }
            this.tableFirmware = ((FirmwareDataTable)(base.Tables["Firmware"]));
            if ((initTable == true)) {
                if ((this.tableFirmware != null)) {
                    this.tableFirmware.InitVars();
                }
            }
            this.tableSF_Commesse_SL = ((SF_Commesse_SLDataTable)(base.Tables["SF_Commesse_SL"]));
            if ((initTable == true)) {
                if ((this.tableSF_Commesse_SL != null)) {
                    this.tableSF_Commesse_SL.InitVars();
                }
            }
            this.tableFW_Clienti = ((FW_ClientiDataTable)(base.Tables["FW_Clienti"]));
            if ((initTable == true)) {
                if ((this.tableFW_Clienti != null)) {
                    this.tableFW_Clienti.InitVars();
                }
            }
            this.tableSF_ArticoliToXSWR = ((SF_ArticoliToXSWRDataTable)(base.Tables["SF_ArticoliToXSWR"]));
            if ((initTable == true)) {
                if ((this.tableSF_ArticoliToXSWR != null)) {
                    this.tableSF_ArticoliToXSWR.InitVars();
                }
            }
            this.tableSF_Articoli = ((SF_ArticoliDataTable)(base.Tables["SF_Articoli"]));
            if ((initTable == true)) {
                if ((this.tableSF_Articoli != null)) {
                    this.tableSF_Articoli.InitVars();
                }
            }
            this.tableCommesseSL_Count = ((CommesseSL_CountDataTable)(base.Tables["CommesseSL_Count"]));
            if ((initTable == true)) {
                if ((this.tableCommesseSL_Count != null)) {
                    this.tableCommesseSL_Count.InitVars();
                }
            }
            this.tableSerialNumbers = ((SerialNumbersDataTable)(base.Tables["SerialNumbers"]));
            if ((initTable == true)) {
                if ((this.tableSerialNumbers != null)) {
                    this.tableSerialNumbers.InitVars();
                }
            }
            this.tabledt_Firmware_lookupCommesseSL = ((dt_Firmware_lookupCommesseSLDataTable)(base.Tables["dt_Firmware_lookupCommesseSL"]));
            if ((initTable == true)) {
                if ((this.tabledt_Firmware_lookupCommesseSL != null)) {
                    this.tabledt_Firmware_lookupCommesseSL.InitVars();
                }
            }
            this.tableSerialNumbers_Obsolete = ((SerialNumbers_ObsoleteDataTable)(base.Tables["SerialNumbers_Obsolete"]));
            if ((initTable == true)) {
                if ((this.tableSerialNumbers_Obsolete != null)) {
                    this.tableSerialNumbers_Obsolete.InitVars();
                }
            }
            this.tableSafetyPointRFID = ((SafetyPointRFIDDataTable)(base.Tables["SafetyPointRFID"]));
            if ((initTable == true)) {
                if ((this.tableSafetyPointRFID != null)) {
                    this.tableSafetyPointRFID.InitVars();
                }
            }
            this.tableFam_Prod = ((Fam_ProdDataTable)(base.Tables["Fam_Prod"]));
            if ((initTable == true)) {
                if ((this.tableFam_Prod != null)) {
                    this.tableFam_Prod.InitVars();
                }
            }
            this.tabledt_Tmp_Programma = ((dt_Tmp_ProgrammaDataTable)(base.Tables["dt_Tmp_Programma"]));
            if ((initTable == true)) {
                if ((this.tabledt_Tmp_Programma != null)) {
                    this.tabledt_Tmp_Programma.InitVars();
                }
            }
            this.tabledt_Tmp_Fw = ((dt_Tmp_FwDataTable)(base.Tables["dt_Tmp_Fw"]));
            if ((initTable == true)) {
                if ((this.tabledt_Tmp_Fw != null)) {
                    this.tabledt_Tmp_Fw.InitVars();
                }
            }
            this.relationdt_Tmp_Programma_dt_Firmware = this.Relations["dt_Tmp_Programma_dt_Firmware"];
            this.relationSF_Commesse_SL_dt_FW_Clienti = this.Relations["SF_Commesse_SL_dt_FW_Clienti"];
            this.relationSF_Commesse_SL_SF_ArticoliToXSWR = this.Relations["SF_Commesse_SL_SF_ArticoliToXSWR"];
            this.relationSF_Commesse_SL_SF_Articoli = this.Relations["SF_Commesse_SL_SF_Articoli"];
            this.relationSF_Commesse_SL_CommesseSL_Count = this.Relations["SF_Commesse_SL_CommesseSL_Count"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ds_Programmazione";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ds_Programmazione.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSF_LastSerialNumber = new SF_LastSerialNumberDataTable();
            base.Tables.Add(this.tableSF_LastSerialNumber);
            this.tableFirmware = new FirmwareDataTable();
            base.Tables.Add(this.tableFirmware);
            this.tableSF_Commesse_SL = new SF_Commesse_SLDataTable();
            base.Tables.Add(this.tableSF_Commesse_SL);
            this.tableFW_Clienti = new FW_ClientiDataTable();
            base.Tables.Add(this.tableFW_Clienti);
            this.tableSF_ArticoliToXSWR = new SF_ArticoliToXSWRDataTable();
            base.Tables.Add(this.tableSF_ArticoliToXSWR);
            this.tableSF_Articoli = new SF_ArticoliDataTable();
            base.Tables.Add(this.tableSF_Articoli);
            this.tableCommesseSL_Count = new CommesseSL_CountDataTable();
            base.Tables.Add(this.tableCommesseSL_Count);
            this.tableSerialNumbers = new SerialNumbersDataTable();
            base.Tables.Add(this.tableSerialNumbers);
            this.tabledt_Firmware_lookupCommesseSL = new dt_Firmware_lookupCommesseSLDataTable();
            base.Tables.Add(this.tabledt_Firmware_lookupCommesseSL);
            this.tableSerialNumbers_Obsolete = new SerialNumbers_ObsoleteDataTable();
            base.Tables.Add(this.tableSerialNumbers_Obsolete);
            this.tableSafetyPointRFID = new SafetyPointRFIDDataTable();
            base.Tables.Add(this.tableSafetyPointRFID);
            this.tableFam_Prod = new Fam_ProdDataTable();
            base.Tables.Add(this.tableFam_Prod);
            this.tabledt_Tmp_Programma = new dt_Tmp_ProgrammaDataTable();
            base.Tables.Add(this.tabledt_Tmp_Programma);
            this.tabledt_Tmp_Fw = new dt_Tmp_FwDataTable();
            base.Tables.Add(this.tabledt_Tmp_Fw);
            this.relationdt_Tmp_Programma_dt_Firmware = new global::System.Data.DataRelation("dt_Tmp_Programma_dt_Firmware", new global::System.Data.DataColumn[] {
                        this.tabledt_Tmp_Programma.tmp_prog_codart_fwColumn}, new global::System.Data.DataColumn[] {
                        this.tableFirmware.SW_CodeColumn}, false);
            this.Relations.Add(this.relationdt_Tmp_Programma_dt_Firmware);
            this.relationSF_Commesse_SL_dt_FW_Clienti = new global::System.Data.DataRelation("SF_Commesse_SL_dt_FW_Clienti", new global::System.Data.DataColumn[] {
                        this.tableSF_Commesse_SL.CodAnagraficoColumn}, new global::System.Data.DataColumn[] {
                        this.tableFW_Clienti.Cod_NominativoColumn}, false);
            this.Relations.Add(this.relationSF_Commesse_SL_dt_FW_Clienti);
            this.relationSF_Commesse_SL_SF_ArticoliToXSWR = new global::System.Data.DataRelation("SF_Commesse_SL_SF_ArticoliToXSWR", new global::System.Data.DataColumn[] {
                        this.tableSF_Commesse_SL.Art_CommessaColumn}, new global::System.Data.DataColumn[] {
                        this.tableSF_ArticoliToXSWR.ArtCommessaColumn}, false);
            this.Relations.Add(this.relationSF_Commesse_SL_SF_ArticoliToXSWR);
            this.relationSF_Commesse_SL_SF_Articoli = new global::System.Data.DataRelation("SF_Commesse_SL_SF_Articoli", new global::System.Data.DataColumn[] {
                        this.tableSF_Commesse_SL.DeviceColumn}, new global::System.Data.DataColumn[] {
                        this.tableSF_Articoli.ArticoloColumn}, false);
            this.Relations.Add(this.relationSF_Commesse_SL_SF_Articoli);
            this.relationSF_Commesse_SL_CommesseSL_Count = new global::System.Data.DataRelation("SF_Commesse_SL_CommesseSL_Count", new global::System.Data.DataColumn[] {
                        this.tableSF_Commesse_SL.CommessaLongColumn,
                        this.tableSF_Commesse_SL.Art_CommessaColumn,
                        this.tableSF_Commesse_SL.DeviceColumn}, new global::System.Data.DataColumn[] {
                        this.tableCommesseSL_Count.Ser_CommessaColumn,
                        this.tableCommesseSL_Count.Ser_KitColumn,
                        this.tableCommesseSL_Count.Ser_DeviceColumn}, false);
            this.Relations.Add(this.relationSF_Commesse_SL_CommesseSL_Count);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSF_LastSerialNumber() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFirmware() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSF_Commesse_SL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFW_Clienti() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSF_ArticoliToXSWR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSF_Articoli() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCommesseSL_Count() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSerialNumbers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializedt_Firmware_lookupCommesseSL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSerialNumbers_Obsolete() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSafetyPointRFID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFam_Prod() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializedt_Tmp_Programma() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializedt_Tmp_Fw() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ds_Programmazione ds = new ds_Programmazione();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SF_LastSerialNumberRowChangeEventHandler(object sender, SF_LastSerialNumberRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FirmwareRowChangeEventHandler(object sender, FirmwareRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SF_Commesse_SLRowChangeEventHandler(object sender, SF_Commesse_SLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FW_ClientiRowChangeEventHandler(object sender, FW_ClientiRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SF_ArticoliToXSWRRowChangeEventHandler(object sender, SF_ArticoliToXSWRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SF_ArticoliRowChangeEventHandler(object sender, SF_ArticoliRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CommesseSL_CountRowChangeEventHandler(object sender, CommesseSL_CountRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SerialNumbersRowChangeEventHandler(object sender, SerialNumbersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void dt_Firmware_lookupCommesseSLRowChangeEventHandler(object sender, dt_Firmware_lookupCommesseSLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SerialNumbers_ObsoleteRowChangeEventHandler(object sender, SerialNumbers_ObsoleteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SafetyPointRFIDRowChangeEventHandler(object sender, SafetyPointRFIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Fam_ProdRowChangeEventHandler(object sender, Fam_ProdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void dt_Tmp_ProgrammaRowChangeEventHandler(object sender, dt_Tmp_ProgrammaRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void dt_Tmp_FwRowChangeEventHandler(object sender, dt_Tmp_FwRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SF_LastSerialNumberDataTable : global::System.Data.TypedTableBase<SF_LastSerialNumberRow> {
            
            private global::System.Data.DataColumn columnAnno;
            
            private global::System.Data.DataColumn columnLastSerialID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_LastSerialNumberDataTable() {
                this.TableName = "SF_LastSerialNumber";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_LastSerialNumberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SF_LastSerialNumberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AnnoColumn {
                get {
                    return this.columnAnno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastSerialIDColumn {
                get {
                    return this.columnLastSerialID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_LastSerialNumberRow this[int index] {
                get {
                    return ((SF_LastSerialNumberRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_LastSerialNumberRowChangeEventHandler SF_LastSerialNumberRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_LastSerialNumberRowChangeEventHandler SF_LastSerialNumberRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_LastSerialNumberRowChangeEventHandler SF_LastSerialNumberRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_LastSerialNumberRowChangeEventHandler SF_LastSerialNumberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSF_LastSerialNumberRow(SF_LastSerialNumberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_LastSerialNumberRow AddSF_LastSerialNumberRow(string Anno, int LastSerialID) {
                SF_LastSerialNumberRow rowSF_LastSerialNumberRow = ((SF_LastSerialNumberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Anno,
                        LastSerialID};
                rowSF_LastSerialNumberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSF_LastSerialNumberRow);
                return rowSF_LastSerialNumberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SF_LastSerialNumberDataTable cln = ((SF_LastSerialNumberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SF_LastSerialNumberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAnno = base.Columns["Anno"];
                this.columnLastSerialID = base.Columns["LastSerialID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAnno = new global::System.Data.DataColumn("Anno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnno);
                this.columnLastSerialID = new global::System.Data.DataColumn("LastSerialID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSerialID);
                this.columnAnno.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_LastSerialNumberRow NewSF_LastSerialNumberRow() {
                return ((SF_LastSerialNumberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SF_LastSerialNumberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SF_LastSerialNumberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SF_LastSerialNumberRowChanged != null)) {
                    this.SF_LastSerialNumberRowChanged(this, new SF_LastSerialNumberRowChangeEvent(((SF_LastSerialNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SF_LastSerialNumberRowChanging != null)) {
                    this.SF_LastSerialNumberRowChanging(this, new SF_LastSerialNumberRowChangeEvent(((SF_LastSerialNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SF_LastSerialNumberRowDeleted != null)) {
                    this.SF_LastSerialNumberRowDeleted(this, new SF_LastSerialNumberRowChangeEvent(((SF_LastSerialNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SF_LastSerialNumberRowDeleting != null)) {
                    this.SF_LastSerialNumberRowDeleting(this, new SF_LastSerialNumberRowChangeEvent(((SF_LastSerialNumberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSF_LastSerialNumberRow(SF_LastSerialNumberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SF_LastSerialNumberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FirmwareDataTable : global::System.Data.TypedTableBase<FirmwareRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSW_Code;
            
            private global::System.Data.DataColumn columnSW_TipoDevice;
            
            private global::System.Data.DataColumn columnSW_Descrizione;
            
            private global::System.Data.DataColumn columnSW_Descrizione_EN;
            
            private global::System.Data.DataColumn columnSW_Versione;
            
            private global::System.Data.DataColumn columnSW_Revisione;
            
            private global::System.Data.DataColumn columnSW_Standard;
            
            private global::System.Data.DataColumn columnSW_FamProd;
            
            private global::System.Data.DataColumn columnSW_P_Opt_RF;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Oled;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_EmButt;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Backlight;
            
            private global::System.Data.DataColumn columnSW_P_Opt_ShiftPage;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Accel;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_SP;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Buzzer;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Vibracall;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_LedTorch;
            
            private global::System.Data.DataColumn columnSW_P_PLD;
            
            private global::System.Data.DataColumn columnSW_P_Opt_MaxPairDevices;
            
            private global::System.Data.DataColumn columnSW_R_Opt_RF;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Plug_Exp;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Plug_Ple;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Em_Keyb;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Can;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Prop_Out;
            
            private global::System.Data.DataColumn columnSW_R_Opt_TimeOut;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Cont_Keys;
            
            private global::System.Data.DataColumn columnSW_R_Opt_LockSameRow;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Use_SP;
            
            private global::System.Data.DataColumn columnSW_R_Opt_MaxPairDevices;
            
            private global::System.Data.DataColumn columnSW_R_Opt_ShiftPage;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Output_No;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Dig_Input_No;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Ana_Input_No;
            
            private global::System.Data.DataColumn columnSW_Revisioni;
            
            private global::System.Data.DataColumn columnSW_Funzionamento;
            
            private global::System.Data.DataColumn columnSW_Config;
            
            private global::System.Data.DataColumn columnSW_Obsolete_ver;
            
            private global::System.Data.DataColumn columnSW_Obsolete_ver_from_date;
            
            private global::System.Data.DataColumn columnSW_Order;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Use_Radius;
            
            private global::System.Data.DataColumn columnSW_CustomPIC;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Radius;
            
            private global::System.Data.DataColumn columnSW_P_Lock;
            
            private global::System.Data.DataColumn columnSW_R_Lock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareDataTable() {
                this.TableName = "Firmware";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FirmwareDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FirmwareDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_CodeColumn {
                get {
                    return this.columnSW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_TipoDeviceColumn {
                get {
                    return this.columnSW_TipoDevice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_DescrizioneColumn {
                get {
                    return this.columnSW_Descrizione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Descrizione_ENColumn {
                get {
                    return this.columnSW_Descrizione_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_VersioneColumn {
                get {
                    return this.columnSW_Versione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_RevisioneColumn {
                get {
                    return this.columnSW_Revisione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_StandardColumn {
                get {
                    return this.columnSW_Standard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_FamProdColumn {
                get {
                    return this.columnSW_FamProd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_RFColumn {
                get {
                    return this.columnSW_P_Opt_RF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_OledColumn {
                get {
                    return this.columnSW_P_Opt_Use_Oled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_EmButtColumn {
                get {
                    return this.columnSW_P_Opt_Use_EmButt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_BacklightColumn {
                get {
                    return this.columnSW_P_Opt_Use_Backlight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_ShiftPageColumn {
                get {
                    return this.columnSW_P_Opt_ShiftPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_AccelColumn {
                get {
                    return this.columnSW_P_Opt_Use_Accel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_SPColumn {
                get {
                    return this.columnSW_P_Opt_Use_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_BuzzerColumn {
                get {
                    return this.columnSW_P_Opt_Use_Buzzer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_VibracallColumn {
                get {
                    return this.columnSW_P_Opt_Use_Vibracall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_LedTorchColumn {
                get {
                    return this.columnSW_P_Opt_Use_LedTorch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_PLDColumn {
                get {
                    return this.columnSW_P_PLD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_MaxPairDevicesColumn {
                get {
                    return this.columnSW_P_Opt_MaxPairDevices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_RFColumn {
                get {
                    return this.columnSW_R_Opt_RF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Plug_ExpColumn {
                get {
                    return this.columnSW_R_Opt_Plug_Exp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Plug_PleColumn {
                get {
                    return this.columnSW_R_Opt_Plug_Ple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Em_KeybColumn {
                get {
                    return this.columnSW_R_Opt_Em_Keyb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_CanColumn {
                get {
                    return this.columnSW_R_Opt_Can;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Prop_OutColumn {
                get {
                    return this.columnSW_R_Opt_Prop_Out;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_TimeOutColumn {
                get {
                    return this.columnSW_R_Opt_TimeOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Cont_KeysColumn {
                get {
                    return this.columnSW_R_Opt_Cont_Keys;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_LockSameRowColumn {
                get {
                    return this.columnSW_R_Opt_LockSameRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Use_SPColumn {
                get {
                    return this.columnSW_R_Opt_Use_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_MaxPairDevicesColumn {
                get {
                    return this.columnSW_R_Opt_MaxPairDevices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_ShiftPageColumn {
                get {
                    return this.columnSW_R_Opt_ShiftPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Output_NoColumn {
                get {
                    return this.columnSW_R_Opt_Output_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Dig_Input_NoColumn {
                get {
                    return this.columnSW_R_Opt_Dig_Input_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Ana_Input_NoColumn {
                get {
                    return this.columnSW_R_Opt_Ana_Input_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_RevisioniColumn {
                get {
                    return this.columnSW_Revisioni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_FunzionamentoColumn {
                get {
                    return this.columnSW_Funzionamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_ConfigColumn {
                get {
                    return this.columnSW_Config;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Obsolete_verColumn {
                get {
                    return this.columnSW_Obsolete_ver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Obsolete_ver_from_dateColumn {
                get {
                    return this.columnSW_Obsolete_ver_from_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_OrderColumn {
                get {
                    return this.columnSW_Order;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Use_RadiusColumn {
                get {
                    return this.columnSW_R_Opt_Use_Radius;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_CustomPICColumn {
                get {
                    return this.columnSW_CustomPIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_RadiusColumn {
                get {
                    return this.columnSW_P_Opt_Use_Radius;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_LockColumn {
                get {
                    return this.columnSW_P_Lock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_LockColumn {
                get {
                    return this.columnSW_R_Lock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow this[int index] {
                get {
                    return ((FirmwareRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FirmwareRowChangeEventHandler FirmwareRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFirmwareRow(FirmwareRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow AddFirmwareRow(
                        dt_Tmp_ProgrammaRow parentdt_Tmp_ProgrammaRowBydt_Tmp_Programma_dt_Firmware, 
                        string SW_TipoDevice, 
                        string SW_Descrizione, 
                        string SW_Descrizione_EN, 
                        string SW_Versione, 
                        string SW_Revisione, 
                        bool SW_Standard, 
                        string SW_FamProd, 
                        string SW_P_Opt_RF, 
                        bool SW_P_Opt_Use_Oled, 
                        bool SW_P_Opt_Use_EmButt, 
                        bool SW_P_Opt_Use_Backlight, 
                        bool SW_P_Opt_ShiftPage, 
                        bool SW_P_Opt_Use_Accel, 
                        bool SW_P_Opt_Use_SP, 
                        bool SW_P_Opt_Use_Buzzer, 
                        bool SW_P_Opt_Use_Vibracall, 
                        bool SW_P_Opt_Use_LedTorch, 
                        bool SW_P_PLD, 
                        int SW_P_Opt_MaxPairDevices, 
                        string SW_R_Opt_RF, 
                        bool SW_R_Opt_Plug_Exp, 
                        bool SW_R_Opt_Plug_Ple, 
                        bool SW_R_Opt_Em_Keyb, 
                        bool SW_R_Opt_Can, 
                        bool SW_R_Opt_Prop_Out, 
                        string SW_R_Opt_TimeOut, 
                        int SW_R_Opt_Cont_Keys, 
                        bool SW_R_Opt_LockSameRow, 
                        bool SW_R_Opt_Use_SP, 
                        int SW_R_Opt_MaxPairDevices, 
                        bool SW_R_Opt_ShiftPage, 
                        int SW_R_Opt_Output_No, 
                        int SW_R_Opt_Dig_Input_No, 
                        int SW_R_Opt_Ana_Input_No, 
                        string SW_Revisioni, 
                        string SW_Funzionamento, 
                        string SW_Config, 
                        bool SW_Obsolete_ver, 
                        System.DateTime SW_Obsolete_ver_from_date, 
                        string SW_Order, 
                        bool SW_R_Opt_Use_Radius, 
                        bool SW_CustomPIC, 
                        bool SW_P_Opt_Use_Radius, 
                        int SW_P_Lock, 
                        int SW_R_Lock) {
                FirmwareRow rowFirmwareRow = ((FirmwareRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        SW_TipoDevice,
                        SW_Descrizione,
                        SW_Descrizione_EN,
                        SW_Versione,
                        SW_Revisione,
                        SW_Standard,
                        SW_FamProd,
                        SW_P_Opt_RF,
                        SW_P_Opt_Use_Oled,
                        SW_P_Opt_Use_EmButt,
                        SW_P_Opt_Use_Backlight,
                        SW_P_Opt_ShiftPage,
                        SW_P_Opt_Use_Accel,
                        SW_P_Opt_Use_SP,
                        SW_P_Opt_Use_Buzzer,
                        SW_P_Opt_Use_Vibracall,
                        SW_P_Opt_Use_LedTorch,
                        SW_P_PLD,
                        SW_P_Opt_MaxPairDevices,
                        SW_R_Opt_RF,
                        SW_R_Opt_Plug_Exp,
                        SW_R_Opt_Plug_Ple,
                        SW_R_Opt_Em_Keyb,
                        SW_R_Opt_Can,
                        SW_R_Opt_Prop_Out,
                        SW_R_Opt_TimeOut,
                        SW_R_Opt_Cont_Keys,
                        SW_R_Opt_LockSameRow,
                        SW_R_Opt_Use_SP,
                        SW_R_Opt_MaxPairDevices,
                        SW_R_Opt_ShiftPage,
                        SW_R_Opt_Output_No,
                        SW_R_Opt_Dig_Input_No,
                        SW_R_Opt_Ana_Input_No,
                        SW_Revisioni,
                        SW_Funzionamento,
                        SW_Config,
                        SW_Obsolete_ver,
                        SW_Obsolete_ver_from_date,
                        SW_Order,
                        SW_R_Opt_Use_Radius,
                        SW_CustomPIC,
                        SW_P_Opt_Use_Radius,
                        SW_P_Lock,
                        SW_R_Lock};
                if ((parentdt_Tmp_ProgrammaRowBydt_Tmp_Programma_dt_Firmware != null)) {
                    columnValuesArray[1] = parentdt_Tmp_ProgrammaRowBydt_Tmp_Programma_dt_Firmware[4];
                }
                rowFirmwareRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFirmwareRow);
                return rowFirmwareRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow FindById(int Id) {
                return ((FirmwareRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FirmwareDataTable cln = ((FirmwareDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FirmwareDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSW_Code = base.Columns["SW_Code"];
                this.columnSW_TipoDevice = base.Columns["SW_TipoDevice"];
                this.columnSW_Descrizione = base.Columns["SW_Descrizione"];
                this.columnSW_Descrizione_EN = base.Columns["SW_Descrizione_EN"];
                this.columnSW_Versione = base.Columns["SW_Versione"];
                this.columnSW_Revisione = base.Columns["SW_Revisione"];
                this.columnSW_Standard = base.Columns["SW_Standard"];
                this.columnSW_FamProd = base.Columns["SW_FamProd"];
                this.columnSW_P_Opt_RF = base.Columns["SW_P_Opt_RF"];
                this.columnSW_P_Opt_Use_Oled = base.Columns["SW_P_Opt_Use_Oled"];
                this.columnSW_P_Opt_Use_EmButt = base.Columns["SW_P_Opt_Use_EmButt"];
                this.columnSW_P_Opt_Use_Backlight = base.Columns["SW_P_Opt_Use_Backlight"];
                this.columnSW_P_Opt_ShiftPage = base.Columns["SW_P_Opt_ShiftPage"];
                this.columnSW_P_Opt_Use_Accel = base.Columns["SW_P_Opt_Use_Accel"];
                this.columnSW_P_Opt_Use_SP = base.Columns["SW_P_Opt_Use_SP"];
                this.columnSW_P_Opt_Use_Buzzer = base.Columns["SW_P_Opt_Use_Buzzer"];
                this.columnSW_P_Opt_Use_Vibracall = base.Columns["SW_P_Opt_Use_Vibracall"];
                this.columnSW_P_Opt_Use_LedTorch = base.Columns["SW_P_Opt_Use_LedTorch"];
                this.columnSW_P_PLD = base.Columns["SW_P_PLD"];
                this.columnSW_P_Opt_MaxPairDevices = base.Columns["SW_P_Opt_MaxPairDevices"];
                this.columnSW_R_Opt_RF = base.Columns["SW_R_Opt_RF"];
                this.columnSW_R_Opt_Plug_Exp = base.Columns["SW_R_Opt_Plug_Exp"];
                this.columnSW_R_Opt_Plug_Ple = base.Columns["SW_R_Opt_Plug_Ple"];
                this.columnSW_R_Opt_Em_Keyb = base.Columns["SW_R_Opt_Em_Keyb"];
                this.columnSW_R_Opt_Can = base.Columns["SW_R_Opt_Can"];
                this.columnSW_R_Opt_Prop_Out = base.Columns["SW_R_Opt_Prop_Out"];
                this.columnSW_R_Opt_TimeOut = base.Columns["SW_R_Opt_TimeOut"];
                this.columnSW_R_Opt_Cont_Keys = base.Columns["SW_R_Opt_Cont_Keys"];
                this.columnSW_R_Opt_LockSameRow = base.Columns["SW_R_Opt_LockSameRow"];
                this.columnSW_R_Opt_Use_SP = base.Columns["SW_R_Opt_Use_SP"];
                this.columnSW_R_Opt_MaxPairDevices = base.Columns["SW_R_Opt_MaxPairDevices"];
                this.columnSW_R_Opt_ShiftPage = base.Columns["SW_R_Opt_ShiftPage"];
                this.columnSW_R_Opt_Output_No = base.Columns["SW_R_Opt_Output_No"];
                this.columnSW_R_Opt_Dig_Input_No = base.Columns["SW_R_Opt_Dig_Input_No"];
                this.columnSW_R_Opt_Ana_Input_No = base.Columns["SW_R_Opt_Ana_Input_No"];
                this.columnSW_Revisioni = base.Columns["SW_Revisioni"];
                this.columnSW_Funzionamento = base.Columns["SW_Funzionamento"];
                this.columnSW_Config = base.Columns["SW_Config"];
                this.columnSW_Obsolete_ver = base.Columns["SW_Obsolete_ver"];
                this.columnSW_Obsolete_ver_from_date = base.Columns["SW_Obsolete_ver_from_date"];
                this.columnSW_Order = base.Columns["SW_Order"];
                this.columnSW_R_Opt_Use_Radius = base.Columns["SW_R_Opt_Use_Radius"];
                this.columnSW_CustomPIC = base.Columns["SW_CustomPIC"];
                this.columnSW_P_Opt_Use_Radius = base.Columns["SW_P_Opt_Use_Radius"];
                this.columnSW_P_Lock = base.Columns["SW_P_Lock"];
                this.columnSW_R_Lock = base.Columns["SW_R_Lock"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSW_Code = new global::System.Data.DataColumn("SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Code);
                this.columnSW_TipoDevice = new global::System.Data.DataColumn("SW_TipoDevice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_TipoDevice);
                this.columnSW_Descrizione = new global::System.Data.DataColumn("SW_Descrizione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Descrizione);
                this.columnSW_Descrizione_EN = new global::System.Data.DataColumn("SW_Descrizione_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Descrizione_EN);
                this.columnSW_Versione = new global::System.Data.DataColumn("SW_Versione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Versione);
                this.columnSW_Revisione = new global::System.Data.DataColumn("SW_Revisione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Revisione);
                this.columnSW_Standard = new global::System.Data.DataColumn("SW_Standard", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Standard);
                this.columnSW_FamProd = new global::System.Data.DataColumn("SW_FamProd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_FamProd);
                this.columnSW_P_Opt_RF = new global::System.Data.DataColumn("SW_P_Opt_RF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_RF);
                this.columnSW_P_Opt_Use_Oled = new global::System.Data.DataColumn("SW_P_Opt_Use_Oled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Oled);
                this.columnSW_P_Opt_Use_EmButt = new global::System.Data.DataColumn("SW_P_Opt_Use_EmButt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_EmButt);
                this.columnSW_P_Opt_Use_Backlight = new global::System.Data.DataColumn("SW_P_Opt_Use_Backlight", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Backlight);
                this.columnSW_P_Opt_ShiftPage = new global::System.Data.DataColumn("SW_P_Opt_ShiftPage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_ShiftPage);
                this.columnSW_P_Opt_Use_Accel = new global::System.Data.DataColumn("SW_P_Opt_Use_Accel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Accel);
                this.columnSW_P_Opt_Use_SP = new global::System.Data.DataColumn("SW_P_Opt_Use_SP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_SP);
                this.columnSW_P_Opt_Use_Buzzer = new global::System.Data.DataColumn("SW_P_Opt_Use_Buzzer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Buzzer);
                this.columnSW_P_Opt_Use_Vibracall = new global::System.Data.DataColumn("SW_P_Opt_Use_Vibracall", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Vibracall);
                this.columnSW_P_Opt_Use_LedTorch = new global::System.Data.DataColumn("SW_P_Opt_Use_LedTorch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_LedTorch);
                this.columnSW_P_PLD = new global::System.Data.DataColumn("SW_P_PLD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_PLD);
                this.columnSW_P_Opt_MaxPairDevices = new global::System.Data.DataColumn("SW_P_Opt_MaxPairDevices", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_MaxPairDevices);
                this.columnSW_R_Opt_RF = new global::System.Data.DataColumn("SW_R_Opt_RF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_RF);
                this.columnSW_R_Opt_Plug_Exp = new global::System.Data.DataColumn("SW_R_Opt_Plug_Exp", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Plug_Exp);
                this.columnSW_R_Opt_Plug_Ple = new global::System.Data.DataColumn("SW_R_Opt_Plug_Ple", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Plug_Ple);
                this.columnSW_R_Opt_Em_Keyb = new global::System.Data.DataColumn("SW_R_Opt_Em_Keyb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Em_Keyb);
                this.columnSW_R_Opt_Can = new global::System.Data.DataColumn("SW_R_Opt_Can", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Can);
                this.columnSW_R_Opt_Prop_Out = new global::System.Data.DataColumn("SW_R_Opt_Prop_Out", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Prop_Out);
                this.columnSW_R_Opt_TimeOut = new global::System.Data.DataColumn("SW_R_Opt_TimeOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_TimeOut);
                this.columnSW_R_Opt_Cont_Keys = new global::System.Data.DataColumn("SW_R_Opt_Cont_Keys", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Cont_Keys);
                this.columnSW_R_Opt_LockSameRow = new global::System.Data.DataColumn("SW_R_Opt_LockSameRow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_LockSameRow);
                this.columnSW_R_Opt_Use_SP = new global::System.Data.DataColumn("SW_R_Opt_Use_SP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Use_SP);
                this.columnSW_R_Opt_MaxPairDevices = new global::System.Data.DataColumn("SW_R_Opt_MaxPairDevices", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_MaxPairDevices);
                this.columnSW_R_Opt_ShiftPage = new global::System.Data.DataColumn("SW_R_Opt_ShiftPage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_ShiftPage);
                this.columnSW_R_Opt_Output_No = new global::System.Data.DataColumn("SW_R_Opt_Output_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Output_No);
                this.columnSW_R_Opt_Dig_Input_No = new global::System.Data.DataColumn("SW_R_Opt_Dig_Input_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Dig_Input_No);
                this.columnSW_R_Opt_Ana_Input_No = new global::System.Data.DataColumn("SW_R_Opt_Ana_Input_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Ana_Input_No);
                this.columnSW_Revisioni = new global::System.Data.DataColumn("SW_Revisioni", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Revisioni);
                this.columnSW_Funzionamento = new global::System.Data.DataColumn("SW_Funzionamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Funzionamento);
                this.columnSW_Config = new global::System.Data.DataColumn("SW_Config", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Config);
                this.columnSW_Obsolete_ver = new global::System.Data.DataColumn("SW_Obsolete_ver", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Obsolete_ver);
                this.columnSW_Obsolete_ver_from_date = new global::System.Data.DataColumn("SW_Obsolete_ver_from_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Obsolete_ver_from_date);
                this.columnSW_Order = new global::System.Data.DataColumn("SW_Order", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Order);
                this.columnSW_R_Opt_Use_Radius = new global::System.Data.DataColumn("SW_R_Opt_Use_Radius", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Use_Radius);
                this.columnSW_CustomPIC = new global::System.Data.DataColumn("SW_CustomPIC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_CustomPIC);
                this.columnSW_P_Opt_Use_Radius = new global::System.Data.DataColumn("SW_P_Opt_Use_Radius", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Radius);
                this.columnSW_P_Lock = new global::System.Data.DataColumn("SW_P_Lock", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Lock);
                this.columnSW_R_Lock = new global::System.Data.DataColumn("SW_R_Lock", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Lock);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnSW_Code.AllowDBNull = false;
                this.columnSW_Code.MaxLength = 25;
                this.columnSW_TipoDevice.AllowDBNull = false;
                this.columnSW_TipoDevice.MaxLength = 1;
                this.columnSW_Descrizione.MaxLength = 255;
                this.columnSW_Descrizione_EN.MaxLength = 255;
                this.columnSW_Versione.MaxLength = 6;
                this.columnSW_Revisione.MaxLength = 3;
                this.columnSW_Standard.AllowDBNull = false;
                this.columnSW_FamProd.MaxLength = 20;
                this.columnSW_P_Opt_RF.AllowDBNull = false;
                this.columnSW_P_Opt_RF.MaxLength = 10;
                this.columnSW_P_Opt_Use_Oled.AllowDBNull = false;
                this.columnSW_P_Opt_Use_EmButt.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Backlight.AllowDBNull = false;
                this.columnSW_P_Opt_ShiftPage.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Accel.AllowDBNull = false;
                this.columnSW_P_Opt_Use_SP.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Buzzer.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Vibracall.AllowDBNull = false;
                this.columnSW_P_Opt_Use_LedTorch.AllowDBNull = false;
                this.columnSW_P_PLD.AllowDBNull = false;
                this.columnSW_R_Opt_RF.AllowDBNull = false;
                this.columnSW_R_Opt_RF.MaxLength = 10;
                this.columnSW_R_Opt_Plug_Exp.AllowDBNull = false;
                this.columnSW_R_Opt_Plug_Ple.AllowDBNull = false;
                this.columnSW_R_Opt_Em_Keyb.AllowDBNull = false;
                this.columnSW_R_Opt_Can.AllowDBNull = false;
                this.columnSW_R_Opt_Prop_Out.AllowDBNull = false;
                this.columnSW_R_Opt_TimeOut.AllowDBNull = false;
                this.columnSW_R_Opt_TimeOut.MaxLength = 10;
                this.columnSW_R_Opt_LockSameRow.AllowDBNull = false;
                this.columnSW_R_Opt_Use_SP.AllowDBNull = false;
                this.columnSW_R_Opt_ShiftPage.AllowDBNull = false;
                this.columnSW_Revisioni.MaxLength = 2147483647;
                this.columnSW_Funzionamento.MaxLength = 2147483647;
                this.columnSW_Config.MaxLength = 2147483647;
                this.columnSW_Obsolete_ver.AllowDBNull = false;
                this.columnSW_Order.ReadOnly = true;
                this.columnSW_Order.MaxLength = 6;
                this.columnSW_R_Opt_Use_Radius.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow NewFirmwareRow() {
                return ((FirmwareRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FirmwareRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FirmwareRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FirmwareRowChanged != null)) {
                    this.FirmwareRowChanged(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FirmwareRowChanging != null)) {
                    this.FirmwareRowChanging(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FirmwareRowDeleted != null)) {
                    this.FirmwareRowDeleted(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FirmwareRowDeleting != null)) {
                    this.FirmwareRowDeleting(this, new FirmwareRowChangeEvent(((FirmwareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFirmwareRow(FirmwareRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FirmwareDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SF_Commesse_SLDataTable : global::System.Data.TypedTableBase<SF_Commesse_SLRow> {
            
            private global::System.Data.DataColumn columnTipoOrdine;
            
            private global::System.Data.DataColumn columnCommessaLong;
            
            private global::System.Data.DataColumn columnCommessaShort;
            
            private global::System.Data.DataColumn columnData_Ordine;
            
            private global::System.Data.DataColumn columnData_Conferma_Consegna;
            
            private global::System.Data.DataColumn columnNumero_Ordine;
            
            private global::System.Data.DataColumn columnNumero_Riga;
            
            private global::System.Data.DataColumn columnCodAnagrafico;
            
            private global::System.Data.DataColumn columnRagione_Sociale;
            
            private global::System.Data.DataColumn columnArt_Commessa;
            
            private global::System.Data.DataColumn columnUM;
            
            private global::System.Data.DataColumn columnQta_Ordinata;
            
            private global::System.Data.DataColumn columnQta_da_Evadere;
            
            private global::System.Data.DataColumn columnStatoCommessa;
            
            private global::System.Data.DataColumn columnTipoRiga;
            
            private global::System.Data.DataColumn columnIs_Kit;
            
            private global::System.Data.DataColumn columnIs_SWR_P;
            
            private global::System.Data.DataColumn columnIs_SWR_R;
            
            private global::System.Data.DataColumn columnDataFineValidita;
            
            private global::System.Data.DataColumn columnDevice;
            
            private global::System.Data.DataColumn columnSW_Device;
            
            private global::System.Data.DataColumn columnQta_Evasa;
            
            private global::System.Data.DataColumn columnSer_Commessa;
            
            private global::System.Data.DataColumn columnSer_Kit;
            
            private global::System.Data.DataColumn columnSer_Device;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLDataTable() {
                this.TableName = "SF_Commesse_SL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_Commesse_SLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SF_Commesse_SLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoOrdineColumn {
                get {
                    return this.columnTipoOrdine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommessaLongColumn {
                get {
                    return this.columnCommessaLong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommessaShortColumn {
                get {
                    return this.columnCommessaShort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Data_OrdineColumn {
                get {
                    return this.columnData_Ordine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Data_Conferma_ConsegnaColumn {
                get {
                    return this.columnData_Conferma_Consegna;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Numero_OrdineColumn {
                get {
                    return this.columnNumero_Ordine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Numero_RigaColumn {
                get {
                    return this.columnNumero_Riga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodAnagraficoColumn {
                get {
                    return this.columnCodAnagrafico;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ragione_SocialeColumn {
                get {
                    return this.columnRagione_Sociale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Art_CommessaColumn {
                get {
                    return this.columnArt_Commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UMColumn {
                get {
                    return this.columnUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Qta_OrdinataColumn {
                get {
                    return this.columnQta_Ordinata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Qta_da_EvadereColumn {
                get {
                    return this.columnQta_da_Evadere;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatoCommessaColumn {
                get {
                    return this.columnStatoCommessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TipoRigaColumn {
                get {
                    return this.columnTipoRiga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Is_KitColumn {
                get {
                    return this.columnIs_Kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Is_SWR_PColumn {
                get {
                    return this.columnIs_SWR_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Is_SWR_RColumn {
                get {
                    return this.columnIs_SWR_R;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DataFineValiditaColumn {
                get {
                    return this.columnDataFineValidita;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DeviceColumn {
                get {
                    return this.columnDevice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_DeviceColumn {
                get {
                    return this.columnSW_Device;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Qta_EvasaColumn {
                get {
                    return this.columnQta_Evasa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_CommessaColumn {
                get {
                    return this.columnSer_Commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_KitColumn {
                get {
                    return this.columnSer_Kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DeviceColumn {
                get {
                    return this.columnSer_Device;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow this[int index] {
                get {
                    return ((SF_Commesse_SLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Commesse_SLRowChangeEventHandler SF_Commesse_SLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Commesse_SLRowChangeEventHandler SF_Commesse_SLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Commesse_SLRowChangeEventHandler SF_Commesse_SLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_Commesse_SLRowChangeEventHandler SF_Commesse_SLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSF_Commesse_SLRow(SF_Commesse_SLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow AddSF_Commesse_SLRow(
                        string TipoOrdine, 
                        string CommessaLong, 
                        string CommessaShort, 
                        string Data_Ordine, 
                        string Data_Conferma_Consegna, 
                        int Numero_Ordine, 
                        int Numero_Riga, 
                        int CodAnagrafico, 
                        string Ragione_Sociale, 
                        string Art_Commessa, 
                        string UM, 
                        decimal Qta_Ordinata, 
                        decimal Qta_da_Evadere, 
                        string StatoCommessa, 
                        string TipoRiga, 
                        int Is_Kit, 
                        int Is_SWR_P, 
                        int Is_SWR_R, 
                        string DataFineValidita, 
                        string Device, 
                        string SW_Device, 
                        int Qta_Evasa, 
                        string Ser_Commessa, 
                        string Ser_Kit, 
                        string Ser_Device) {
                SF_Commesse_SLRow rowSF_Commesse_SLRow = ((SF_Commesse_SLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TipoOrdine,
                        CommessaLong,
                        CommessaShort,
                        Data_Ordine,
                        Data_Conferma_Consegna,
                        Numero_Ordine,
                        Numero_Riga,
                        CodAnagrafico,
                        Ragione_Sociale,
                        Art_Commessa,
                        UM,
                        Qta_Ordinata,
                        Qta_da_Evadere,
                        StatoCommessa,
                        TipoRiga,
                        Is_Kit,
                        Is_SWR_P,
                        Is_SWR_R,
                        DataFineValidita,
                        Device,
                        SW_Device,
                        Qta_Evasa,
                        Ser_Commessa,
                        Ser_Kit,
                        Ser_Device};
                rowSF_Commesse_SLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSF_Commesse_SLRow);
                return rowSF_Commesse_SLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SF_Commesse_SLDataTable cln = ((SF_Commesse_SLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SF_Commesse_SLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnTipoOrdine = base.Columns["TipoOrdine"];
                this.columnCommessaLong = base.Columns["CommessaLong"];
                this.columnCommessaShort = base.Columns["CommessaShort"];
                this.columnData_Ordine = base.Columns["Data_Ordine"];
                this.columnData_Conferma_Consegna = base.Columns["Data_Conferma_Consegna"];
                this.columnNumero_Ordine = base.Columns["Numero_Ordine"];
                this.columnNumero_Riga = base.Columns["Numero_Riga"];
                this.columnCodAnagrafico = base.Columns["CodAnagrafico"];
                this.columnRagione_Sociale = base.Columns["Ragione_Sociale"];
                this.columnArt_Commessa = base.Columns["Art_Commessa"];
                this.columnUM = base.Columns["UM"];
                this.columnQta_Ordinata = base.Columns["Qta_Ordinata"];
                this.columnQta_da_Evadere = base.Columns["Qta_da_Evadere"];
                this.columnStatoCommessa = base.Columns["StatoCommessa"];
                this.columnTipoRiga = base.Columns["TipoRiga"];
                this.columnIs_Kit = base.Columns["Is_Kit"];
                this.columnIs_SWR_P = base.Columns["Is_SWR_P"];
                this.columnIs_SWR_R = base.Columns["Is_SWR_R"];
                this.columnDataFineValidita = base.Columns["DataFineValidita"];
                this.columnDevice = base.Columns["Device"];
                this.columnSW_Device = base.Columns["SW_Device"];
                this.columnQta_Evasa = base.Columns["Qta_Evasa"];
                this.columnSer_Commessa = base.Columns["Ser_Commessa"];
                this.columnSer_Kit = base.Columns["Ser_Kit"];
                this.columnSer_Device = base.Columns["Ser_Device"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnTipoOrdine = new global::System.Data.DataColumn("TipoOrdine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoOrdine);
                this.columnCommessaLong = new global::System.Data.DataColumn("CommessaLong", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommessaLong);
                this.columnCommessaShort = new global::System.Data.DataColumn("CommessaShort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommessaShort);
                this.columnData_Ordine = new global::System.Data.DataColumn("Data_Ordine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_Ordine);
                this.columnData_Conferma_Consegna = new global::System.Data.DataColumn("Data_Conferma_Consegna", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnData_Conferma_Consegna);
                this.columnNumero_Ordine = new global::System.Data.DataColumn("Numero_Ordine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero_Ordine);
                this.columnNumero_Riga = new global::System.Data.DataColumn("Numero_Riga", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero_Riga);
                this.columnCodAnagrafico = new global::System.Data.DataColumn("CodAnagrafico", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodAnagrafico);
                this.columnRagione_Sociale = new global::System.Data.DataColumn("Ragione_Sociale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRagione_Sociale);
                this.columnArt_Commessa = new global::System.Data.DataColumn("Art_Commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArt_Commessa);
                this.columnUM = new global::System.Data.DataColumn("UM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUM);
                this.columnQta_Ordinata = new global::System.Data.DataColumn("Qta_Ordinata", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQta_Ordinata);
                this.columnQta_da_Evadere = new global::System.Data.DataColumn("Qta_da_Evadere", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQta_da_Evadere);
                this.columnStatoCommessa = new global::System.Data.DataColumn("StatoCommessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatoCommessa);
                this.columnTipoRiga = new global::System.Data.DataColumn("TipoRiga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipoRiga);
                this.columnIs_Kit = new global::System.Data.DataColumn("Is_Kit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_Kit);
                this.columnIs_SWR_P = new global::System.Data.DataColumn("Is_SWR_P", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_SWR_P);
                this.columnIs_SWR_R = new global::System.Data.DataColumn("Is_SWR_R", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_SWR_R);
                this.columnDataFineValidita = new global::System.Data.DataColumn("DataFineValidita", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataFineValidita);
                this.columnDevice = new global::System.Data.DataColumn("Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDevice);
                this.columnSW_Device = new global::System.Data.DataColumn("SW_Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Device);
                this.columnQta_Evasa = new global::System.Data.DataColumn("Qta_Evasa", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQta_Evasa);
                this.columnSer_Commessa = new global::System.Data.DataColumn("Ser_Commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Commessa);
                this.columnSer_Kit = new global::System.Data.DataColumn("Ser_Kit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Kit);
                this.columnSer_Device = new global::System.Data.DataColumn("Ser_Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device);
                this.columnTipoOrdine.MaxLength = 3;
                this.columnCommessaLong.MaxLength = 20;
                this.columnCommessaShort.MaxLength = 20;
                this.columnData_Ordine.MaxLength = 30;
                this.columnData_Conferma_Consegna.MaxLength = 30;
                this.columnRagione_Sociale.MaxLength = 50;
                this.columnArt_Commessa.MaxLength = 25;
                this.columnUM.MaxLength = 3;
                this.columnStatoCommessa.MaxLength = 1;
                this.columnTipoRiga.MaxLength = 1;
                this.columnIs_Kit.AllowDBNull = false;
                this.columnIs_SWR_P.AllowDBNull = false;
                this.columnIs_SWR_R.AllowDBNull = false;
                this.columnDataFineValidita.MaxLength = 30;
                this.columnDevice.MaxLength = 25;
                this.columnSW_Device.MaxLength = 25;
                this.columnQta_Evasa.ReadOnly = true;
                this.columnSer_Commessa.MaxLength = 25;
                this.columnSer_Kit.MaxLength = 25;
                this.columnSer_Device.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow NewSF_Commesse_SLRow() {
                return ((SF_Commesse_SLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SF_Commesse_SLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SF_Commesse_SLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SF_Commesse_SLRowChanged != null)) {
                    this.SF_Commesse_SLRowChanged(this, new SF_Commesse_SLRowChangeEvent(((SF_Commesse_SLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SF_Commesse_SLRowChanging != null)) {
                    this.SF_Commesse_SLRowChanging(this, new SF_Commesse_SLRowChangeEvent(((SF_Commesse_SLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SF_Commesse_SLRowDeleted != null)) {
                    this.SF_Commesse_SLRowDeleted(this, new SF_Commesse_SLRowChangeEvent(((SF_Commesse_SLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SF_Commesse_SLRowDeleting != null)) {
                    this.SF_Commesse_SLRowDeleting(this, new SF_Commesse_SLRowChangeEvent(((SF_Commesse_SLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSF_Commesse_SLRow(SF_Commesse_SLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SF_Commesse_SLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FW_ClientiDataTable : global::System.Data.TypedTableBase<FW_ClientiRow> {
            
            private global::System.Data.DataColumn columnCod_Nominativo;
            
            private global::System.Data.DataColumn columnSW_Code;
            
            private global::System.Data.DataColumn columnSW_Des1;
            
            private global::System.Data.DataColumn columnSW_Des2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FW_ClientiDataTable() {
                this.TableName = "FW_Clienti";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FW_ClientiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FW_ClientiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Cod_NominativoColumn {
                get {
                    return this.columnCod_Nominativo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_CodeColumn {
                get {
                    return this.columnSW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Des1Column {
                get {
                    return this.columnSW_Des1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Des2Column {
                get {
                    return this.columnSW_Des2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FW_ClientiRow this[int index] {
                get {
                    return ((FW_ClientiRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FW_ClientiRowChangeEventHandler FW_ClientiRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FW_ClientiRowChangeEventHandler FW_ClientiRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FW_ClientiRowChangeEventHandler FW_ClientiRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FW_ClientiRowChangeEventHandler FW_ClientiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFW_ClientiRow(FW_ClientiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FW_ClientiRow AddFW_ClientiRow(SF_Commesse_SLRow parentSF_Commesse_SLRowBySF_Commesse_SL_dt_FW_Clienti, string SW_Code, string SW_Des1, string SW_Des2) {
                FW_ClientiRow rowFW_ClientiRow = ((FW_ClientiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SW_Code,
                        SW_Des1,
                        SW_Des2};
                if ((parentSF_Commesse_SLRowBySF_Commesse_SL_dt_FW_Clienti != null)) {
                    columnValuesArray[0] = parentSF_Commesse_SLRowBySF_Commesse_SL_dt_FW_Clienti[7];
                }
                rowFW_ClientiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFW_ClientiRow);
                return rowFW_ClientiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FW_ClientiDataTable cln = ((FW_ClientiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FW_ClientiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCod_Nominativo = base.Columns["Cod_Nominativo"];
                this.columnSW_Code = base.Columns["SW_Code"];
                this.columnSW_Des1 = base.Columns["SW_Des1"];
                this.columnSW_Des2 = base.Columns["SW_Des2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCod_Nominativo = new global::System.Data.DataColumn("Cod_Nominativo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_Nominativo);
                this.columnSW_Code = new global::System.Data.DataColumn("SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Code);
                this.columnSW_Des1 = new global::System.Data.DataColumn("SW_Des1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Des1);
                this.columnSW_Des2 = new global::System.Data.DataColumn("SW_Des2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Des2);
                this.columnCod_Nominativo.AllowDBNull = false;
                this.columnSW_Code.MaxLength = 25;
                this.columnSW_Des1.MaxLength = 255;
                this.columnSW_Des2.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FW_ClientiRow NewFW_ClientiRow() {
                return ((FW_ClientiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FW_ClientiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FW_ClientiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FW_ClientiRowChanged != null)) {
                    this.FW_ClientiRowChanged(this, new FW_ClientiRowChangeEvent(((FW_ClientiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FW_ClientiRowChanging != null)) {
                    this.FW_ClientiRowChanging(this, new FW_ClientiRowChangeEvent(((FW_ClientiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FW_ClientiRowDeleted != null)) {
                    this.FW_ClientiRowDeleted(this, new FW_ClientiRowChangeEvent(((FW_ClientiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FW_ClientiRowDeleting != null)) {
                    this.FW_ClientiRowDeleting(this, new FW_ClientiRowChangeEvent(((FW_ClientiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFW_ClientiRow(FW_ClientiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FW_ClientiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SF_ArticoliToXSWRDataTable : global::System.Data.TypedTableBase<SF_ArticoliToXSWRRow> {
            
            private global::System.Data.DataColumn columnArtCommessa;
            
            private global::System.Data.DataColumn columnCodiceFw;
            
            private global::System.Data.DataColumn columnDescrizione;
            
            private global::System.Data.DataColumn columnDescrizioneEstesa;
            
            private global::System.Data.DataColumn columnDataInizioValidita;
            
            private global::System.Data.DataColumn columnDataFineValidita;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliToXSWRDataTable() {
                this.TableName = "SF_ArticoliToXSWR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_ArticoliToXSWRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SF_ArticoliToXSWRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArtCommessaColumn {
                get {
                    return this.columnArtCommessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodiceFwColumn {
                get {
                    return this.columnCodiceFw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescrizioneColumn {
                get {
                    return this.columnDescrizione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescrizioneEstesaColumn {
                get {
                    return this.columnDescrizioneEstesa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DataInizioValiditaColumn {
                get {
                    return this.columnDataInizioValidita;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DataFineValiditaColumn {
                get {
                    return this.columnDataFineValidita;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliToXSWRRow this[int index] {
                get {
                    return ((SF_ArticoliToXSWRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliToXSWRRowChangeEventHandler SF_ArticoliToXSWRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliToXSWRRowChangeEventHandler SF_ArticoliToXSWRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliToXSWRRowChangeEventHandler SF_ArticoliToXSWRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliToXSWRRowChangeEventHandler SF_ArticoliToXSWRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSF_ArticoliToXSWRRow(SF_ArticoliToXSWRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliToXSWRRow AddSF_ArticoliToXSWRRow(SF_Commesse_SLRow parentSF_Commesse_SLRowBySF_Commesse_SL_SF_ArticoliToXSWR, string CodiceFw, string Descrizione, string DescrizioneEstesa, string DataInizioValidita, string DataFineValidita) {
                SF_ArticoliToXSWRRow rowSF_ArticoliToXSWRRow = ((SF_ArticoliToXSWRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CodiceFw,
                        Descrizione,
                        DescrizioneEstesa,
                        DataInizioValidita,
                        DataFineValidita};
                if ((parentSF_Commesse_SLRowBySF_Commesse_SL_SF_ArticoliToXSWR != null)) {
                    columnValuesArray[0] = parentSF_Commesse_SLRowBySF_Commesse_SL_SF_ArticoliToXSWR[9];
                }
                rowSF_ArticoliToXSWRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSF_ArticoliToXSWRRow);
                return rowSF_ArticoliToXSWRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SF_ArticoliToXSWRDataTable cln = ((SF_ArticoliToXSWRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SF_ArticoliToXSWRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnArtCommessa = base.Columns["ArtCommessa"];
                this.columnCodiceFw = base.Columns["CodiceFw"];
                this.columnDescrizione = base.Columns["Descrizione"];
                this.columnDescrizioneEstesa = base.Columns["DescrizioneEstesa"];
                this.columnDataInizioValidita = base.Columns["DataInizioValidita"];
                this.columnDataFineValidita = base.Columns["DataFineValidita"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnArtCommessa = new global::System.Data.DataColumn("ArtCommessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArtCommessa);
                this.columnCodiceFw = new global::System.Data.DataColumn("CodiceFw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodiceFw);
                this.columnDescrizione = new global::System.Data.DataColumn("Descrizione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescrizione);
                this.columnDescrizioneEstesa = new global::System.Data.DataColumn("DescrizioneEstesa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescrizioneEstesa);
                this.columnDataInizioValidita = new global::System.Data.DataColumn("DataInizioValidita", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataInizioValidita);
                this.columnDataFineValidita = new global::System.Data.DataColumn("DataFineValidita", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataFineValidita);
                this.columnArtCommessa.ReadOnly = true;
                this.columnArtCommessa.MaxLength = 25;
                this.columnCodiceFw.ReadOnly = true;
                this.columnCodiceFw.MaxLength = 25;
                this.columnDescrizione.MaxLength = 50;
                this.columnDescrizioneEstesa.MaxLength = 2147483647;
                this.columnDataInizioValidita.ReadOnly = true;
                this.columnDataInizioValidita.MaxLength = 30;
                this.columnDataFineValidita.ReadOnly = true;
                this.columnDataFineValidita.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliToXSWRRow NewSF_ArticoliToXSWRRow() {
                return ((SF_ArticoliToXSWRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SF_ArticoliToXSWRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SF_ArticoliToXSWRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SF_ArticoliToXSWRRowChanged != null)) {
                    this.SF_ArticoliToXSWRRowChanged(this, new SF_ArticoliToXSWRRowChangeEvent(((SF_ArticoliToXSWRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SF_ArticoliToXSWRRowChanging != null)) {
                    this.SF_ArticoliToXSWRRowChanging(this, new SF_ArticoliToXSWRRowChangeEvent(((SF_ArticoliToXSWRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SF_ArticoliToXSWRRowDeleted != null)) {
                    this.SF_ArticoliToXSWRRowDeleted(this, new SF_ArticoliToXSWRRowChangeEvent(((SF_ArticoliToXSWRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SF_ArticoliToXSWRRowDeleting != null)) {
                    this.SF_ArticoliToXSWRRowDeleting(this, new SF_ArticoliToXSWRRowChangeEvent(((SF_ArticoliToXSWRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSF_ArticoliToXSWRRow(SF_ArticoliToXSWRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SF_ArticoliToXSWRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SF_ArticoliDataTable : global::System.Data.TypedTableBase<SF_ArticoliRow> {
            
            private global::System.Data.DataColumn columnArticolo;
            
            private global::System.Data.DataColumn columnDescrizione;
            
            private global::System.Data.DataColumn columnDescrizioneEstesa;
            
            private global::System.Data.DataColumn columnModello;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliDataTable() {
                this.TableName = "SF_Articoli";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_ArticoliDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SF_ArticoliDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ArticoloColumn {
                get {
                    return this.columnArticolo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescrizioneColumn {
                get {
                    return this.columnDescrizione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescrizioneEstesaColumn {
                get {
                    return this.columnDescrizioneEstesa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ModelloColumn {
                get {
                    return this.columnModello;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliRow this[int index] {
                get {
                    return ((SF_ArticoliRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliRowChangeEventHandler SF_ArticoliRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliRowChangeEventHandler SF_ArticoliRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliRowChangeEventHandler SF_ArticoliRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SF_ArticoliRowChangeEventHandler SF_ArticoliRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSF_ArticoliRow(SF_ArticoliRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliRow AddSF_ArticoliRow(SF_Commesse_SLRow parentSF_Commesse_SLRowBySF_Commesse_SL_SF_Articoli, string Descrizione, string DescrizioneEstesa, string Modello) {
                SF_ArticoliRow rowSF_ArticoliRow = ((SF_ArticoliRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descrizione,
                        DescrizioneEstesa,
                        Modello};
                if ((parentSF_Commesse_SLRowBySF_Commesse_SL_SF_Articoli != null)) {
                    columnValuesArray[0] = parentSF_Commesse_SLRowBySF_Commesse_SL_SF_Articoli[19];
                }
                rowSF_ArticoliRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSF_ArticoliRow);
                return rowSF_ArticoliRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SF_ArticoliDataTable cln = ((SF_ArticoliDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SF_ArticoliDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnArticolo = base.Columns["Articolo"];
                this.columnDescrizione = base.Columns["Descrizione"];
                this.columnDescrizioneEstesa = base.Columns["DescrizioneEstesa"];
                this.columnModello = base.Columns["Modello"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnArticolo = new global::System.Data.DataColumn("Articolo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticolo);
                this.columnDescrizione = new global::System.Data.DataColumn("Descrizione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescrizione);
                this.columnDescrizioneEstesa = new global::System.Data.DataColumn("DescrizioneEstesa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescrizioneEstesa);
                this.columnModello = new global::System.Data.DataColumn("Modello", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModello);
                this.columnArticolo.ReadOnly = true;
                this.columnArticolo.MaxLength = 25;
                this.columnDescrizione.MaxLength = 50;
                this.columnDescrizioneEstesa.MaxLength = 2147483647;
                this.columnModello.ReadOnly = true;
                this.columnModello.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliRow NewSF_ArticoliRow() {
                return ((SF_ArticoliRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SF_ArticoliRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SF_ArticoliRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SF_ArticoliRowChanged != null)) {
                    this.SF_ArticoliRowChanged(this, new SF_ArticoliRowChangeEvent(((SF_ArticoliRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SF_ArticoliRowChanging != null)) {
                    this.SF_ArticoliRowChanging(this, new SF_ArticoliRowChangeEvent(((SF_ArticoliRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SF_ArticoliRowDeleted != null)) {
                    this.SF_ArticoliRowDeleted(this, new SF_ArticoliRowChangeEvent(((SF_ArticoliRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SF_ArticoliRowDeleting != null)) {
                    this.SF_ArticoliRowDeleting(this, new SF_ArticoliRowChangeEvent(((SF_ArticoliRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSF_ArticoliRow(SF_ArticoliRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SF_ArticoliDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CommesseSL_CountDataTable : global::System.Data.TypedTableBase<CommesseSL_CountRow> {
            
            private global::System.Data.DataColumn columnSer_Commessa;
            
            private global::System.Data.DataColumn columnSer_Kit;
            
            private global::System.Data.DataColumn columnSer_Device;
            
            private global::System.Data.DataColumn columnQtaEvasa;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CommesseSL_CountDataTable() {
                this.TableName = "CommesseSL_Count";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CommesseSL_CountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CommesseSL_CountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_CommessaColumn {
                get {
                    return this.columnSer_Commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_KitColumn {
                get {
                    return this.columnSer_Kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DeviceColumn {
                get {
                    return this.columnSer_Device;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QtaEvasaColumn {
                get {
                    return this.columnQtaEvasa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CommesseSL_CountRow this[int index] {
                get {
                    return ((CommesseSL_CountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CommesseSL_CountRowChangeEventHandler CommesseSL_CountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CommesseSL_CountRowChangeEventHandler CommesseSL_CountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CommesseSL_CountRowChangeEventHandler CommesseSL_CountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CommesseSL_CountRowChangeEventHandler CommesseSL_CountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCommesseSL_CountRow(CommesseSL_CountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CommesseSL_CountRow AddCommesseSL_CountRow(string Ser_Commessa, string Ser_Kit, string Ser_Device, int QtaEvasa) {
                CommesseSL_CountRow rowCommesseSL_CountRow = ((CommesseSL_CountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ser_Commessa,
                        Ser_Kit,
                        Ser_Device,
                        QtaEvasa};
                rowCommesseSL_CountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCommesseSL_CountRow);
                return rowCommesseSL_CountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CommesseSL_CountDataTable cln = ((CommesseSL_CountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CommesseSL_CountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSer_Commessa = base.Columns["Ser_Commessa"];
                this.columnSer_Kit = base.Columns["Ser_Kit"];
                this.columnSer_Device = base.Columns["Ser_Device"];
                this.columnQtaEvasa = base.Columns["QtaEvasa"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSer_Commessa = new global::System.Data.DataColumn("Ser_Commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Commessa);
                this.columnSer_Kit = new global::System.Data.DataColumn("Ser_Kit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Kit);
                this.columnSer_Device = new global::System.Data.DataColumn("Ser_Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device);
                this.columnQtaEvasa = new global::System.Data.DataColumn("QtaEvasa", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtaEvasa);
                this.columnSer_Commessa.MaxLength = 25;
                this.columnSer_Kit.MaxLength = 25;
                this.columnSer_Device.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CommesseSL_CountRow NewCommesseSL_CountRow() {
                return ((CommesseSL_CountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CommesseSL_CountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CommesseSL_CountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommesseSL_CountRowChanged != null)) {
                    this.CommesseSL_CountRowChanged(this, new CommesseSL_CountRowChangeEvent(((CommesseSL_CountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommesseSL_CountRowChanging != null)) {
                    this.CommesseSL_CountRowChanging(this, new CommesseSL_CountRowChangeEvent(((CommesseSL_CountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommesseSL_CountRowDeleted != null)) {
                    this.CommesseSL_CountRowDeleted(this, new CommesseSL_CountRowChangeEvent(((CommesseSL_CountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommesseSL_CountRowDeleting != null)) {
                    this.CommesseSL_CountRowDeleting(this, new CommesseSL_CountRowChangeEvent(((CommesseSL_CountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCommesseSL_CountRow(CommesseSL_CountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CommesseSL_CountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SerialNumbersDataTable : global::System.Data.TypedTableBase<SerialNumbersRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSer_Kit;
            
            private global::System.Data.DataColumn columnSer_ID_Cli;
            
            private global::System.Data.DataColumn columnSer_Device;
            
            private global::System.Data.DataColumn columnSer_Device_ID_Code;
            
            private global::System.Data.DataColumn columnSer_OfficialSerial;
            
            private global::System.Data.DataColumn columnSer_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_SW_Code;
            
            private global::System.Data.DataColumn columnSer_SW_Code_Rev;
            
            private global::System.Data.DataColumn columnSer_SW_Std_Type;
            
            private global::System.Data.DataColumn columnSer_SN_prod;
            
            private global::System.Data.DataColumn columnSer_Commessa;
            
            private global::System.Data.DataColumn columnSer_DateProduction;
            
            private global::System.Data.DataColumn columnSer_Spedito;
            
            private global::System.Data.DataColumn columnSer_Data_Spedito;
            
            private global::System.Data.DataColumn columnSer_Substition_ID_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_Note;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersDataTable() {
                this.TableName = "SerialNumbers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SerialNumbersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_KitColumn {
                get {
                    return this.columnSer_Kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ID_CliColumn {
                get {
                    return this.columnSer_ID_Cli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DeviceColumn {
                get {
                    return this.columnSer_Device;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Device_ID_CodeColumn {
                get {
                    return this.columnSer_Device_ID_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_OfficialSerialColumn {
                get {
                    return this.columnSer_OfficialSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ReadSerialColumn {
                get {
                    return this.columnSer_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_CodeColumn {
                get {
                    return this.columnSer_SW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Code_RevColumn {
                get {
                    return this.columnSer_SW_Code_Rev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Std_TypeColumn {
                get {
                    return this.columnSer_SW_Std_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SN_prodColumn {
                get {
                    return this.columnSer_SN_prod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_CommessaColumn {
                get {
                    return this.columnSer_Commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DateProductionColumn {
                get {
                    return this.columnSer_DateProduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SpeditoColumn {
                get {
                    return this.columnSer_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Data_SpeditoColumn {
                get {
                    return this.columnSer_Data_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Substition_ID_ReadSerialColumn {
                get {
                    return this.columnSer_Substition_ID_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_NoteColumn {
                get {
                    return this.columnSer_Note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow this[int index] {
                get {
                    return ((SerialNumbersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbersRowChangeEventHandler SerialNumbersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSerialNumbersRow(SerialNumbersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow AddSerialNumbersRow(
                        string Ser_Kit, 
                        int Ser_ID_Cli, 
                        string Ser_Device, 
                        string Ser_Device_ID_Code, 
                        string Ser_OfficialSerial, 
                        string Ser_ReadSerial, 
                        string Ser_SW_Code, 
                        string Ser_SW_Code_Rev, 
                        bool Ser_SW_Std_Type, 
                        string Ser_SN_prod, 
                        string Ser_Commessa, 
                        System.DateTime Ser_DateProduction, 
                        bool Ser_Spedito, 
                        System.DateTime Ser_Data_Spedito, 
                        string Ser_Substition_ID_ReadSerial, 
                        string Ser_Note) {
                SerialNumbersRow rowSerialNumbersRow = ((SerialNumbersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Ser_Kit,
                        Ser_ID_Cli,
                        Ser_Device,
                        Ser_Device_ID_Code,
                        Ser_OfficialSerial,
                        Ser_ReadSerial,
                        Ser_SW_Code,
                        Ser_SW_Code_Rev,
                        Ser_SW_Std_Type,
                        Ser_SN_prod,
                        Ser_Commessa,
                        Ser_DateProduction,
                        Ser_Spedito,
                        Ser_Data_Spedito,
                        Ser_Substition_ID_ReadSerial,
                        Ser_Note};
                rowSerialNumbersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSerialNumbersRow);
                return rowSerialNumbersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow FindById(int Id) {
                return ((SerialNumbersRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SerialNumbersDataTable cln = ((SerialNumbersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SerialNumbersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSer_Kit = base.Columns["Ser_Kit"];
                this.columnSer_ID_Cli = base.Columns["Ser_ID_Cli"];
                this.columnSer_Device = base.Columns["Ser_Device"];
                this.columnSer_Device_ID_Code = base.Columns["Ser_Device_ID_Code"];
                this.columnSer_OfficialSerial = base.Columns["Ser_OfficialSerial"];
                this.columnSer_ReadSerial = base.Columns["Ser_ReadSerial"];
                this.columnSer_SW_Code = base.Columns["Ser_SW_Code"];
                this.columnSer_SW_Code_Rev = base.Columns["Ser_SW_Code_Rev"];
                this.columnSer_SW_Std_Type = base.Columns["Ser_SW_Std_Type"];
                this.columnSer_SN_prod = base.Columns["Ser_SN_prod"];
                this.columnSer_Commessa = base.Columns["Ser_Commessa"];
                this.columnSer_DateProduction = base.Columns["Ser_DateProduction"];
                this.columnSer_Spedito = base.Columns["Ser_Spedito"];
                this.columnSer_Data_Spedito = base.Columns["Ser_Data_Spedito"];
                this.columnSer_Substition_ID_ReadSerial = base.Columns["Ser_Substition_ID_ReadSerial"];
                this.columnSer_Note = base.Columns["Ser_Note"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSer_Kit = new global::System.Data.DataColumn("Ser_Kit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Kit);
                this.columnSer_ID_Cli = new global::System.Data.DataColumn("Ser_ID_Cli", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ID_Cli);
                this.columnSer_Device = new global::System.Data.DataColumn("Ser_Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device);
                this.columnSer_Device_ID_Code = new global::System.Data.DataColumn("Ser_Device_ID_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device_ID_Code);
                this.columnSer_OfficialSerial = new global::System.Data.DataColumn("Ser_OfficialSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_OfficialSerial);
                this.columnSer_ReadSerial = new global::System.Data.DataColumn("Ser_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ReadSerial);
                this.columnSer_SW_Code = new global::System.Data.DataColumn("Ser_SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code);
                this.columnSer_SW_Code_Rev = new global::System.Data.DataColumn("Ser_SW_Code_Rev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code_Rev);
                this.columnSer_SW_Std_Type = new global::System.Data.DataColumn("Ser_SW_Std_Type", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Std_Type);
                this.columnSer_SN_prod = new global::System.Data.DataColumn("Ser_SN_prod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SN_prod);
                this.columnSer_Commessa = new global::System.Data.DataColumn("Ser_Commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Commessa);
                this.columnSer_DateProduction = new global::System.Data.DataColumn("Ser_DateProduction", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_DateProduction);
                this.columnSer_Spedito = new global::System.Data.DataColumn("Ser_Spedito", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Spedito);
                this.columnSer_Data_Spedito = new global::System.Data.DataColumn("Ser_Data_Spedito", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Data_Spedito);
                this.columnSer_Substition_ID_ReadSerial = new global::System.Data.DataColumn("Ser_Substition_ID_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Substition_ID_ReadSerial);
                this.columnSer_Note = new global::System.Data.DataColumn("Ser_Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Note);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnSer_Kit.MaxLength = 25;
                this.columnSer_Device.MaxLength = 25;
                this.columnSer_Device_ID_Code.MaxLength = 4;
                this.columnSer_OfficialSerial.MaxLength = 25;
                this.columnSer_ReadSerial.MaxLength = 25;
                this.columnSer_SW_Code.MaxLength = 25;
                this.columnSer_SW_Code_Rev.MaxLength = 5;
                this.columnSer_SN_prod.MaxLength = 11;
                this.columnSer_Commessa.MaxLength = 25;
                this.columnSer_Spedito.AllowDBNull = false;
                this.columnSer_Substition_ID_ReadSerial.MaxLength = 25;
                this.columnSer_Note.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow NewSerialNumbersRow() {
                return ((SerialNumbersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SerialNumbersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SerialNumbersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SerialNumbersRowChanged != null)) {
                    this.SerialNumbersRowChanged(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SerialNumbersRowChanging != null)) {
                    this.SerialNumbersRowChanging(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SerialNumbersRowDeleted != null)) {
                    this.SerialNumbersRowDeleted(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SerialNumbersRowDeleting != null)) {
                    this.SerialNumbersRowDeleting(this, new SerialNumbersRowChangeEvent(((SerialNumbersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSerialNumbersRow(SerialNumbersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SerialNumbersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_Firmware_lookupCommesseSLDataTable : global::System.Data.TypedTableBase<dt_Firmware_lookupCommesseSLRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSW_Code;
            
            private global::System.Data.DataColumn columnSW_TipoDevice;
            
            private global::System.Data.DataColumn columnSW_Descrizione;
            
            private global::System.Data.DataColumn columnSW_Descrizione_EN;
            
            private global::System.Data.DataColumn columnSW_Versione;
            
            private global::System.Data.DataColumn columnSW_Revisione;
            
            private global::System.Data.DataColumn columnSW_Standard;
            
            private global::System.Data.DataColumn columnSW_P_Opt_RF;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Oled;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_EmButt;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Backlight;
            
            private global::System.Data.DataColumn columnSW_P_Opt_ShiftPage;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Accel;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_SP;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Buzzer;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_Vibracall;
            
            private global::System.Data.DataColumn columnSW_P_Opt_Use_LedTorch;
            
            private global::System.Data.DataColumn columnSW_P_Opt_MaxPairDevices;
            
            private global::System.Data.DataColumn columnSW_R_Opt_RF;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Plug_Exp;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Plug_Ple;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Em_Keyb;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Can;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Prop_Out;
            
            private global::System.Data.DataColumn columnSW_R_Opt_TimeOut;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Cont_Keys;
            
            private global::System.Data.DataColumn columnSW_R_Opt_LockSameRow;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Use_SP;
            
            private global::System.Data.DataColumn columnSW_R_Opt_MaxPairDevices;
            
            private global::System.Data.DataColumn columnSW_R_Opt_ShiftPage;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Output_No;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Dig_Input_No;
            
            private global::System.Data.DataColumn columnSW_R_Opt_Ana_Input_No;
            
            private global::System.Data.DataColumn columnSW_Revisioni;
            
            private global::System.Data.DataColumn columnSW_Funzionamento;
            
            private global::System.Data.DataColumn columnSW_Config;
            
            private global::System.Data.DataColumn columnSW_Obsolete_ver;
            
            private global::System.Data.DataColumn columnSW_Obsolete_ver_from_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Firmware_lookupCommesseSLDataTable() {
                this.TableName = "dt_Firmware_lookupCommesseSL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dt_Firmware_lookupCommesseSLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected dt_Firmware_lookupCommesseSLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_CodeColumn {
                get {
                    return this.columnSW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_TipoDeviceColumn {
                get {
                    return this.columnSW_TipoDevice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_DescrizioneColumn {
                get {
                    return this.columnSW_Descrizione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Descrizione_ENColumn {
                get {
                    return this.columnSW_Descrizione_EN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_VersioneColumn {
                get {
                    return this.columnSW_Versione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_RevisioneColumn {
                get {
                    return this.columnSW_Revisione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_StandardColumn {
                get {
                    return this.columnSW_Standard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_RFColumn {
                get {
                    return this.columnSW_P_Opt_RF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_OledColumn {
                get {
                    return this.columnSW_P_Opt_Use_Oled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_EmButtColumn {
                get {
                    return this.columnSW_P_Opt_Use_EmButt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_BacklightColumn {
                get {
                    return this.columnSW_P_Opt_Use_Backlight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_ShiftPageColumn {
                get {
                    return this.columnSW_P_Opt_ShiftPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_AccelColumn {
                get {
                    return this.columnSW_P_Opt_Use_Accel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_SPColumn {
                get {
                    return this.columnSW_P_Opt_Use_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_BuzzerColumn {
                get {
                    return this.columnSW_P_Opt_Use_Buzzer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_VibracallColumn {
                get {
                    return this.columnSW_P_Opt_Use_Vibracall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_Use_LedTorchColumn {
                get {
                    return this.columnSW_P_Opt_Use_LedTorch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_P_Opt_MaxPairDevicesColumn {
                get {
                    return this.columnSW_P_Opt_MaxPairDevices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_RFColumn {
                get {
                    return this.columnSW_R_Opt_RF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Plug_ExpColumn {
                get {
                    return this.columnSW_R_Opt_Plug_Exp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Plug_PleColumn {
                get {
                    return this.columnSW_R_Opt_Plug_Ple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Em_KeybColumn {
                get {
                    return this.columnSW_R_Opt_Em_Keyb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_CanColumn {
                get {
                    return this.columnSW_R_Opt_Can;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Prop_OutColumn {
                get {
                    return this.columnSW_R_Opt_Prop_Out;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_TimeOutColumn {
                get {
                    return this.columnSW_R_Opt_TimeOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Cont_KeysColumn {
                get {
                    return this.columnSW_R_Opt_Cont_Keys;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_LockSameRowColumn {
                get {
                    return this.columnSW_R_Opt_LockSameRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Use_SPColumn {
                get {
                    return this.columnSW_R_Opt_Use_SP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_MaxPairDevicesColumn {
                get {
                    return this.columnSW_R_Opt_MaxPairDevices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_ShiftPageColumn {
                get {
                    return this.columnSW_R_Opt_ShiftPage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Output_NoColumn {
                get {
                    return this.columnSW_R_Opt_Output_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Dig_Input_NoColumn {
                get {
                    return this.columnSW_R_Opt_Dig_Input_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_R_Opt_Ana_Input_NoColumn {
                get {
                    return this.columnSW_R_Opt_Ana_Input_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_RevisioniColumn {
                get {
                    return this.columnSW_Revisioni;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_FunzionamentoColumn {
                get {
                    return this.columnSW_Funzionamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_ConfigColumn {
                get {
                    return this.columnSW_Config;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Obsolete_verColumn {
                get {
                    return this.columnSW_Obsolete_ver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SW_Obsolete_ver_from_dateColumn {
                get {
                    return this.columnSW_Obsolete_ver_from_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Firmware_lookupCommesseSLRow this[int index] {
                get {
                    return ((dt_Firmware_lookupCommesseSLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Firmware_lookupCommesseSLRowChangeEventHandler dt_Firmware_lookupCommesseSLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Firmware_lookupCommesseSLRowChangeEventHandler dt_Firmware_lookupCommesseSLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Firmware_lookupCommesseSLRowChangeEventHandler dt_Firmware_lookupCommesseSLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Firmware_lookupCommesseSLRowChangeEventHandler dt_Firmware_lookupCommesseSLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Adddt_Firmware_lookupCommesseSLRow(dt_Firmware_lookupCommesseSLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Firmware_lookupCommesseSLRow Adddt_Firmware_lookupCommesseSLRow(
                        string SW_Code, 
                        string SW_TipoDevice, 
                        string SW_Descrizione, 
                        string SW_Descrizione_EN, 
                        string SW_Versione, 
                        string SW_Revisione, 
                        bool SW_Standard, 
                        string SW_P_Opt_RF, 
                        bool SW_P_Opt_Use_Oled, 
                        bool SW_P_Opt_Use_EmButt, 
                        bool SW_P_Opt_Use_Backlight, 
                        bool SW_P_Opt_ShiftPage, 
                        bool SW_P_Opt_Use_Accel, 
                        bool SW_P_Opt_Use_SP, 
                        bool SW_P_Opt_Use_Buzzer, 
                        bool SW_P_Opt_Use_Vibracall, 
                        bool SW_P_Opt_Use_LedTorch, 
                        int SW_P_Opt_MaxPairDevices, 
                        string SW_R_Opt_RF, 
                        bool SW_R_Opt_Plug_Exp, 
                        bool SW_R_Opt_Plug_Ple, 
                        bool SW_R_Opt_Em_Keyb, 
                        bool SW_R_Opt_Can, 
                        bool SW_R_Opt_Prop_Out, 
                        string SW_R_Opt_TimeOut, 
                        int SW_R_Opt_Cont_Keys, 
                        bool SW_R_Opt_LockSameRow, 
                        bool SW_R_Opt_Use_SP, 
                        int SW_R_Opt_MaxPairDevices, 
                        bool SW_R_Opt_ShiftPage, 
                        int SW_R_Opt_Output_No, 
                        int SW_R_Opt_Dig_Input_No, 
                        int SW_R_Opt_Ana_Input_No, 
                        string SW_Revisioni, 
                        string SW_Funzionamento, 
                        string SW_Config, 
                        bool SW_Obsolete_ver, 
                        System.DateTime SW_Obsolete_ver_from_date) {
                dt_Firmware_lookupCommesseSLRow rowdt_Firmware_lookupCommesseSLRow = ((dt_Firmware_lookupCommesseSLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SW_Code,
                        SW_TipoDevice,
                        SW_Descrizione,
                        SW_Descrizione_EN,
                        SW_Versione,
                        SW_Revisione,
                        SW_Standard,
                        SW_P_Opt_RF,
                        SW_P_Opt_Use_Oled,
                        SW_P_Opt_Use_EmButt,
                        SW_P_Opt_Use_Backlight,
                        SW_P_Opt_ShiftPage,
                        SW_P_Opt_Use_Accel,
                        SW_P_Opt_Use_SP,
                        SW_P_Opt_Use_Buzzer,
                        SW_P_Opt_Use_Vibracall,
                        SW_P_Opt_Use_LedTorch,
                        SW_P_Opt_MaxPairDevices,
                        SW_R_Opt_RF,
                        SW_R_Opt_Plug_Exp,
                        SW_R_Opt_Plug_Ple,
                        SW_R_Opt_Em_Keyb,
                        SW_R_Opt_Can,
                        SW_R_Opt_Prop_Out,
                        SW_R_Opt_TimeOut,
                        SW_R_Opt_Cont_Keys,
                        SW_R_Opt_LockSameRow,
                        SW_R_Opt_Use_SP,
                        SW_R_Opt_MaxPairDevices,
                        SW_R_Opt_ShiftPage,
                        SW_R_Opt_Output_No,
                        SW_R_Opt_Dig_Input_No,
                        SW_R_Opt_Ana_Input_No,
                        SW_Revisioni,
                        SW_Funzionamento,
                        SW_Config,
                        SW_Obsolete_ver,
                        SW_Obsolete_ver_from_date};
                rowdt_Firmware_lookupCommesseSLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_Firmware_lookupCommesseSLRow);
                return rowdt_Firmware_lookupCommesseSLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Firmware_lookupCommesseSLRow FindById(int Id) {
                return ((dt_Firmware_lookupCommesseSLRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dt_Firmware_lookupCommesseSLDataTable cln = ((dt_Firmware_lookupCommesseSLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_Firmware_lookupCommesseSLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSW_Code = base.Columns["SW_Code"];
                this.columnSW_TipoDevice = base.Columns["SW_TipoDevice"];
                this.columnSW_Descrizione = base.Columns["SW_Descrizione"];
                this.columnSW_Descrizione_EN = base.Columns["SW_Descrizione_EN"];
                this.columnSW_Versione = base.Columns["SW_Versione"];
                this.columnSW_Revisione = base.Columns["SW_Revisione"];
                this.columnSW_Standard = base.Columns["SW_Standard"];
                this.columnSW_P_Opt_RF = base.Columns["SW_P_Opt_RF"];
                this.columnSW_P_Opt_Use_Oled = base.Columns["SW_P_Opt_Use_Oled"];
                this.columnSW_P_Opt_Use_EmButt = base.Columns["SW_P_Opt_Use_EmButt"];
                this.columnSW_P_Opt_Use_Backlight = base.Columns["SW_P_Opt_Use_Backlight"];
                this.columnSW_P_Opt_ShiftPage = base.Columns["SW_P_Opt_ShiftPage"];
                this.columnSW_P_Opt_Use_Accel = base.Columns["SW_P_Opt_Use_Accel"];
                this.columnSW_P_Opt_Use_SP = base.Columns["SW_P_Opt_Use_SP"];
                this.columnSW_P_Opt_Use_Buzzer = base.Columns["SW_P_Opt_Use_Buzzer"];
                this.columnSW_P_Opt_Use_Vibracall = base.Columns["SW_P_Opt_Use_Vibracall"];
                this.columnSW_P_Opt_Use_LedTorch = base.Columns["SW_P_Opt_Use_LedTorch"];
                this.columnSW_P_Opt_MaxPairDevices = base.Columns["SW_P_Opt_MaxPairDevices"];
                this.columnSW_R_Opt_RF = base.Columns["SW_R_Opt_RF"];
                this.columnSW_R_Opt_Plug_Exp = base.Columns["SW_R_Opt_Plug_Exp"];
                this.columnSW_R_Opt_Plug_Ple = base.Columns["SW_R_Opt_Plug_Ple"];
                this.columnSW_R_Opt_Em_Keyb = base.Columns["SW_R_Opt_Em_Keyb"];
                this.columnSW_R_Opt_Can = base.Columns["SW_R_Opt_Can"];
                this.columnSW_R_Opt_Prop_Out = base.Columns["SW_R_Opt_Prop_Out"];
                this.columnSW_R_Opt_TimeOut = base.Columns["SW_R_Opt_TimeOut"];
                this.columnSW_R_Opt_Cont_Keys = base.Columns["SW_R_Opt_Cont_Keys"];
                this.columnSW_R_Opt_LockSameRow = base.Columns["SW_R_Opt_LockSameRow"];
                this.columnSW_R_Opt_Use_SP = base.Columns["SW_R_Opt_Use_SP"];
                this.columnSW_R_Opt_MaxPairDevices = base.Columns["SW_R_Opt_MaxPairDevices"];
                this.columnSW_R_Opt_ShiftPage = base.Columns["SW_R_Opt_ShiftPage"];
                this.columnSW_R_Opt_Output_No = base.Columns["SW_R_Opt_Output_No"];
                this.columnSW_R_Opt_Dig_Input_No = base.Columns["SW_R_Opt_Dig_Input_No"];
                this.columnSW_R_Opt_Ana_Input_No = base.Columns["SW_R_Opt_Ana_Input_No"];
                this.columnSW_Revisioni = base.Columns["SW_Revisioni"];
                this.columnSW_Funzionamento = base.Columns["SW_Funzionamento"];
                this.columnSW_Config = base.Columns["SW_Config"];
                this.columnSW_Obsolete_ver = base.Columns["SW_Obsolete_ver"];
                this.columnSW_Obsolete_ver_from_date = base.Columns["SW_Obsolete_ver_from_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSW_Code = new global::System.Data.DataColumn("SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Code);
                this.columnSW_TipoDevice = new global::System.Data.DataColumn("SW_TipoDevice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_TipoDevice);
                this.columnSW_Descrizione = new global::System.Data.DataColumn("SW_Descrizione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Descrizione);
                this.columnSW_Descrizione_EN = new global::System.Data.DataColumn("SW_Descrizione_EN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Descrizione_EN);
                this.columnSW_Versione = new global::System.Data.DataColumn("SW_Versione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Versione);
                this.columnSW_Revisione = new global::System.Data.DataColumn("SW_Revisione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Revisione);
                this.columnSW_Standard = new global::System.Data.DataColumn("SW_Standard", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Standard);
                this.columnSW_P_Opt_RF = new global::System.Data.DataColumn("SW_P_Opt_RF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_RF);
                this.columnSW_P_Opt_Use_Oled = new global::System.Data.DataColumn("SW_P_Opt_Use_Oled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Oled);
                this.columnSW_P_Opt_Use_EmButt = new global::System.Data.DataColumn("SW_P_Opt_Use_EmButt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_EmButt);
                this.columnSW_P_Opt_Use_Backlight = new global::System.Data.DataColumn("SW_P_Opt_Use_Backlight", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Backlight);
                this.columnSW_P_Opt_ShiftPage = new global::System.Data.DataColumn("SW_P_Opt_ShiftPage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_ShiftPage);
                this.columnSW_P_Opt_Use_Accel = new global::System.Data.DataColumn("SW_P_Opt_Use_Accel", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Accel);
                this.columnSW_P_Opt_Use_SP = new global::System.Data.DataColumn("SW_P_Opt_Use_SP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_SP);
                this.columnSW_P_Opt_Use_Buzzer = new global::System.Data.DataColumn("SW_P_Opt_Use_Buzzer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Buzzer);
                this.columnSW_P_Opt_Use_Vibracall = new global::System.Data.DataColumn("SW_P_Opt_Use_Vibracall", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_Vibracall);
                this.columnSW_P_Opt_Use_LedTorch = new global::System.Data.DataColumn("SW_P_Opt_Use_LedTorch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_Use_LedTorch);
                this.columnSW_P_Opt_MaxPairDevices = new global::System.Data.DataColumn("SW_P_Opt_MaxPairDevices", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_P_Opt_MaxPairDevices);
                this.columnSW_R_Opt_RF = new global::System.Data.DataColumn("SW_R_Opt_RF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_RF);
                this.columnSW_R_Opt_Plug_Exp = new global::System.Data.DataColumn("SW_R_Opt_Plug_Exp", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Plug_Exp);
                this.columnSW_R_Opt_Plug_Ple = new global::System.Data.DataColumn("SW_R_Opt_Plug_Ple", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Plug_Ple);
                this.columnSW_R_Opt_Em_Keyb = new global::System.Data.DataColumn("SW_R_Opt_Em_Keyb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Em_Keyb);
                this.columnSW_R_Opt_Can = new global::System.Data.DataColumn("SW_R_Opt_Can", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Can);
                this.columnSW_R_Opt_Prop_Out = new global::System.Data.DataColumn("SW_R_Opt_Prop_Out", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Prop_Out);
                this.columnSW_R_Opt_TimeOut = new global::System.Data.DataColumn("SW_R_Opt_TimeOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_TimeOut);
                this.columnSW_R_Opt_Cont_Keys = new global::System.Data.DataColumn("SW_R_Opt_Cont_Keys", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Cont_Keys);
                this.columnSW_R_Opt_LockSameRow = new global::System.Data.DataColumn("SW_R_Opt_LockSameRow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_LockSameRow);
                this.columnSW_R_Opt_Use_SP = new global::System.Data.DataColumn("SW_R_Opt_Use_SP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Use_SP);
                this.columnSW_R_Opt_MaxPairDevices = new global::System.Data.DataColumn("SW_R_Opt_MaxPairDevices", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_MaxPairDevices);
                this.columnSW_R_Opt_ShiftPage = new global::System.Data.DataColumn("SW_R_Opt_ShiftPage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_ShiftPage);
                this.columnSW_R_Opt_Output_No = new global::System.Data.DataColumn("SW_R_Opt_Output_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Output_No);
                this.columnSW_R_Opt_Dig_Input_No = new global::System.Data.DataColumn("SW_R_Opt_Dig_Input_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Dig_Input_No);
                this.columnSW_R_Opt_Ana_Input_No = new global::System.Data.DataColumn("SW_R_Opt_Ana_Input_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_R_Opt_Ana_Input_No);
                this.columnSW_Revisioni = new global::System.Data.DataColumn("SW_Revisioni", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Revisioni);
                this.columnSW_Funzionamento = new global::System.Data.DataColumn("SW_Funzionamento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Funzionamento);
                this.columnSW_Config = new global::System.Data.DataColumn("SW_Config", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Config);
                this.columnSW_Obsolete_ver = new global::System.Data.DataColumn("SW_Obsolete_ver", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Obsolete_ver);
                this.columnSW_Obsolete_ver_from_date = new global::System.Data.DataColumn("SW_Obsolete_ver_from_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSW_Obsolete_ver_from_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnSW_Code.AllowDBNull = false;
                this.columnSW_Code.MaxLength = 25;
                this.columnSW_TipoDevice.AllowDBNull = false;
                this.columnSW_TipoDevice.MaxLength = 1;
                this.columnSW_Descrizione.MaxLength = 255;
                this.columnSW_Descrizione_EN.MaxLength = 255;
                this.columnSW_Versione.MaxLength = 6;
                this.columnSW_Revisione.MaxLength = 3;
                this.columnSW_Standard.AllowDBNull = false;
                this.columnSW_P_Opt_RF.AllowDBNull = false;
                this.columnSW_P_Opt_RF.MaxLength = 10;
                this.columnSW_P_Opt_Use_Oled.AllowDBNull = false;
                this.columnSW_P_Opt_Use_EmButt.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Backlight.AllowDBNull = false;
                this.columnSW_P_Opt_ShiftPage.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Accel.AllowDBNull = false;
                this.columnSW_P_Opt_Use_SP.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Buzzer.AllowDBNull = false;
                this.columnSW_P_Opt_Use_Vibracall.AllowDBNull = false;
                this.columnSW_P_Opt_Use_LedTorch.AllowDBNull = false;
                this.columnSW_R_Opt_RF.AllowDBNull = false;
                this.columnSW_R_Opt_RF.MaxLength = 10;
                this.columnSW_R_Opt_Plug_Exp.AllowDBNull = false;
                this.columnSW_R_Opt_Plug_Ple.AllowDBNull = false;
                this.columnSW_R_Opt_Em_Keyb.AllowDBNull = false;
                this.columnSW_R_Opt_Can.AllowDBNull = false;
                this.columnSW_R_Opt_Prop_Out.AllowDBNull = false;
                this.columnSW_R_Opt_TimeOut.AllowDBNull = false;
                this.columnSW_R_Opt_TimeOut.MaxLength = 10;
                this.columnSW_R_Opt_LockSameRow.AllowDBNull = false;
                this.columnSW_R_Opt_Use_SP.AllowDBNull = false;
                this.columnSW_R_Opt_ShiftPage.AllowDBNull = false;
                this.columnSW_Revisioni.MaxLength = 2147483647;
                this.columnSW_Funzionamento.MaxLength = 2147483647;
                this.columnSW_Config.MaxLength = 2147483647;
                this.columnSW_Obsolete_ver.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Firmware_lookupCommesseSLRow Newdt_Firmware_lookupCommesseSLRow() {
                return ((dt_Firmware_lookupCommesseSLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_Firmware_lookupCommesseSLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dt_Firmware_lookupCommesseSLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_Firmware_lookupCommesseSLRowChanged != null)) {
                    this.dt_Firmware_lookupCommesseSLRowChanged(this, new dt_Firmware_lookupCommesseSLRowChangeEvent(((dt_Firmware_lookupCommesseSLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_Firmware_lookupCommesseSLRowChanging != null)) {
                    this.dt_Firmware_lookupCommesseSLRowChanging(this, new dt_Firmware_lookupCommesseSLRowChangeEvent(((dt_Firmware_lookupCommesseSLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_Firmware_lookupCommesseSLRowDeleted != null)) {
                    this.dt_Firmware_lookupCommesseSLRowDeleted(this, new dt_Firmware_lookupCommesseSLRowChangeEvent(((dt_Firmware_lookupCommesseSLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_Firmware_lookupCommesseSLRowDeleting != null)) {
                    this.dt_Firmware_lookupCommesseSLRowDeleting(this, new dt_Firmware_lookupCommesseSLRowChangeEvent(((dt_Firmware_lookupCommesseSLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removedt_Firmware_lookupCommesseSLRow(dt_Firmware_lookupCommesseSLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_Firmware_lookupCommesseSLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SerialNumbers_ObsoleteDataTable : global::System.Data.TypedTableBase<SerialNumbers_ObsoleteRow> {
            
            private global::System.Data.DataColumn columnSer_Kit;
            
            private global::System.Data.DataColumn columnSer_ID_Cli;
            
            private global::System.Data.DataColumn columnSer_Device;
            
            private global::System.Data.DataColumn columnSer_Device_ID_Code;
            
            private global::System.Data.DataColumn columnSer_OfficialSerial;
            
            private global::System.Data.DataColumn columnSer_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_SW_Code;
            
            private global::System.Data.DataColumn columnSer_SW_Code_Rev;
            
            private global::System.Data.DataColumn columnSer_SW_Std_Type;
            
            private global::System.Data.DataColumn columnSer_SN_prod;
            
            private global::System.Data.DataColumn columnSer_Commessa;
            
            private global::System.Data.DataColumn columnSer_DateProduction;
            
            private global::System.Data.DataColumn columnSer_Spedito;
            
            private global::System.Data.DataColumn columnSer_Data_Spedito;
            
            private global::System.Data.DataColumn columnSer_Substition_ID_ReadSerial;
            
            private global::System.Data.DataColumn columnSer_Note;
            
            private global::System.Data.DataColumn columnSer_ObsoleteFromDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteDataTable() {
                this.TableName = "SerialNumbers_Obsolete";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbers_ObsoleteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SerialNumbers_ObsoleteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_KitColumn {
                get {
                    return this.columnSer_Kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ID_CliColumn {
                get {
                    return this.columnSer_ID_Cli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DeviceColumn {
                get {
                    return this.columnSer_Device;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Device_ID_CodeColumn {
                get {
                    return this.columnSer_Device_ID_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_OfficialSerialColumn {
                get {
                    return this.columnSer_OfficialSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ReadSerialColumn {
                get {
                    return this.columnSer_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_CodeColumn {
                get {
                    return this.columnSer_SW_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Code_RevColumn {
                get {
                    return this.columnSer_SW_Code_Rev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SW_Std_TypeColumn {
                get {
                    return this.columnSer_SW_Std_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SN_prodColumn {
                get {
                    return this.columnSer_SN_prod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_CommessaColumn {
                get {
                    return this.columnSer_Commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_DateProductionColumn {
                get {
                    return this.columnSer_DateProduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_SpeditoColumn {
                get {
                    return this.columnSer_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Data_SpeditoColumn {
                get {
                    return this.columnSer_Data_Spedito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_Substition_ID_ReadSerialColumn {
                get {
                    return this.columnSer_Substition_ID_ReadSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_NoteColumn {
                get {
                    return this.columnSer_Note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ser_ObsoleteFromDateColumn {
                get {
                    return this.columnSer_ObsoleteFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow this[int index] {
                get {
                    return ((SerialNumbers_ObsoleteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SerialNumbers_ObsoleteRowChangeEventHandler SerialNumbers_ObsoleteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSerialNumbers_ObsoleteRow(SerialNumbers_ObsoleteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow AddSerialNumbers_ObsoleteRow(
                        string Ser_Kit, 
                        int Ser_ID_Cli, 
                        string Ser_Device, 
                        string Ser_Device_ID_Code, 
                        string Ser_OfficialSerial, 
                        string Ser_ReadSerial, 
                        string Ser_SW_Code, 
                        string Ser_SW_Code_Rev, 
                        bool Ser_SW_Std_Type, 
                        string Ser_SN_prod, 
                        string Ser_Commessa, 
                        System.DateTime Ser_DateProduction, 
                        bool Ser_Spedito, 
                        System.DateTime Ser_Data_Spedito, 
                        string Ser_Substition_ID_ReadSerial, 
                        string Ser_Note, 
                        System.DateTime Ser_ObsoleteFromDate) {
                SerialNumbers_ObsoleteRow rowSerialNumbers_ObsoleteRow = ((SerialNumbers_ObsoleteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ser_Kit,
                        Ser_ID_Cli,
                        Ser_Device,
                        Ser_Device_ID_Code,
                        Ser_OfficialSerial,
                        Ser_ReadSerial,
                        Ser_SW_Code,
                        Ser_SW_Code_Rev,
                        Ser_SW_Std_Type,
                        Ser_SN_prod,
                        Ser_Commessa,
                        Ser_DateProduction,
                        Ser_Spedito,
                        Ser_Data_Spedito,
                        Ser_Substition_ID_ReadSerial,
                        Ser_Note,
                        Ser_ObsoleteFromDate};
                rowSerialNumbers_ObsoleteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSerialNumbers_ObsoleteRow);
                return rowSerialNumbers_ObsoleteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SerialNumbers_ObsoleteDataTable cln = ((SerialNumbers_ObsoleteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SerialNumbers_ObsoleteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSer_Kit = base.Columns["Ser_Kit"];
                this.columnSer_ID_Cli = base.Columns["Ser_ID_Cli"];
                this.columnSer_Device = base.Columns["Ser_Device"];
                this.columnSer_Device_ID_Code = base.Columns["Ser_Device_ID_Code"];
                this.columnSer_OfficialSerial = base.Columns["Ser_OfficialSerial"];
                this.columnSer_ReadSerial = base.Columns["Ser_ReadSerial"];
                this.columnSer_SW_Code = base.Columns["Ser_SW_Code"];
                this.columnSer_SW_Code_Rev = base.Columns["Ser_SW_Code_Rev"];
                this.columnSer_SW_Std_Type = base.Columns["Ser_SW_Std_Type"];
                this.columnSer_SN_prod = base.Columns["Ser_SN_prod"];
                this.columnSer_Commessa = base.Columns["Ser_Commessa"];
                this.columnSer_DateProduction = base.Columns["Ser_DateProduction"];
                this.columnSer_Spedito = base.Columns["Ser_Spedito"];
                this.columnSer_Data_Spedito = base.Columns["Ser_Data_Spedito"];
                this.columnSer_Substition_ID_ReadSerial = base.Columns["Ser_Substition_ID_ReadSerial"];
                this.columnSer_Note = base.Columns["Ser_Note"];
                this.columnSer_ObsoleteFromDate = base.Columns["Ser_ObsoleteFromDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSer_Kit = new global::System.Data.DataColumn("Ser_Kit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Kit);
                this.columnSer_ID_Cli = new global::System.Data.DataColumn("Ser_ID_Cli", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ID_Cli);
                this.columnSer_Device = new global::System.Data.DataColumn("Ser_Device", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device);
                this.columnSer_Device_ID_Code = new global::System.Data.DataColumn("Ser_Device_ID_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Device_ID_Code);
                this.columnSer_OfficialSerial = new global::System.Data.DataColumn("Ser_OfficialSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_OfficialSerial);
                this.columnSer_ReadSerial = new global::System.Data.DataColumn("Ser_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ReadSerial);
                this.columnSer_SW_Code = new global::System.Data.DataColumn("Ser_SW_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code);
                this.columnSer_SW_Code_Rev = new global::System.Data.DataColumn("Ser_SW_Code_Rev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Code_Rev);
                this.columnSer_SW_Std_Type = new global::System.Data.DataColumn("Ser_SW_Std_Type", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SW_Std_Type);
                this.columnSer_SN_prod = new global::System.Data.DataColumn("Ser_SN_prod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_SN_prod);
                this.columnSer_Commessa = new global::System.Data.DataColumn("Ser_Commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Commessa);
                this.columnSer_DateProduction = new global::System.Data.DataColumn("Ser_DateProduction", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_DateProduction);
                this.columnSer_Spedito = new global::System.Data.DataColumn("Ser_Spedito", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Spedito);
                this.columnSer_Data_Spedito = new global::System.Data.DataColumn("Ser_Data_Spedito", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Data_Spedito);
                this.columnSer_Substition_ID_ReadSerial = new global::System.Data.DataColumn("Ser_Substition_ID_ReadSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Substition_ID_ReadSerial);
                this.columnSer_Note = new global::System.Data.DataColumn("Ser_Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_Note);
                this.columnSer_ObsoleteFromDate = new global::System.Data.DataColumn("Ser_ObsoleteFromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSer_ObsoleteFromDate);
                this.columnSer_Kit.MaxLength = 25;
                this.columnSer_Device.MaxLength = 25;
                this.columnSer_Device_ID_Code.MaxLength = 4;
                this.columnSer_OfficialSerial.MaxLength = 25;
                this.columnSer_ReadSerial.MaxLength = 25;
                this.columnSer_SW_Code.MaxLength = 25;
                this.columnSer_SW_Code_Rev.MaxLength = 5;
                this.columnSer_SN_prod.MaxLength = 11;
                this.columnSer_Commessa.MaxLength = 25;
                this.columnSer_Spedito.AllowDBNull = false;
                this.columnSer_Substition_ID_ReadSerial.MaxLength = 25;
                this.columnSer_Note.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow NewSerialNumbers_ObsoleteRow() {
                return ((SerialNumbers_ObsoleteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SerialNumbers_ObsoleteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SerialNumbers_ObsoleteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SerialNumbers_ObsoleteRowChanged != null)) {
                    this.SerialNumbers_ObsoleteRowChanged(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SerialNumbers_ObsoleteRowChanging != null)) {
                    this.SerialNumbers_ObsoleteRowChanging(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SerialNumbers_ObsoleteRowDeleted != null)) {
                    this.SerialNumbers_ObsoleteRowDeleted(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SerialNumbers_ObsoleteRowDeleting != null)) {
                    this.SerialNumbers_ObsoleteRowDeleting(this, new SerialNumbers_ObsoleteRowChangeEvent(((SerialNumbers_ObsoleteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSerialNumbers_ObsoleteRow(SerialNumbers_ObsoleteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SerialNumbers_ObsoleteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SafetyPointRFIDDataTable : global::System.Data.TypedTableBase<SafetyPointRFIDRow> {
            
            private global::System.Data.DataColumn columnRfid_ID;
            
            private global::System.Data.DataColumn columnRfid_UUID;
            
            private global::System.Data.DataColumn columnRfid_Technology;
            
            private global::System.Data.DataColumn columnRfid_Ser_SN_Prod;
            
            private global::System.Data.DataColumn columnRfid_Obsolete;
            
            private global::System.Data.DataColumn columnRfid_Verified;
            
            private global::System.Data.DataColumn columnRfid_Note;
            
            private global::System.Data.DataColumn columnRfid_Ser_OfficialSerial;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SafetyPointRFIDDataTable() {
                this.TableName = "SafetyPointRFID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SafetyPointRFIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SafetyPointRFIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_IDColumn {
                get {
                    return this.columnRfid_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_UUIDColumn {
                get {
                    return this.columnRfid_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_TechnologyColumn {
                get {
                    return this.columnRfid_Technology;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_Ser_SN_ProdColumn {
                get {
                    return this.columnRfid_Ser_SN_Prod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_ObsoleteColumn {
                get {
                    return this.columnRfid_Obsolete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_VerifiedColumn {
                get {
                    return this.columnRfid_Verified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_NoteColumn {
                get {
                    return this.columnRfid_Note;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Rfid_Ser_OfficialSerialColumn {
                get {
                    return this.columnRfid_Ser_OfficialSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SafetyPointRFIDRow this[int index] {
                get {
                    return ((SafetyPointRFIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SafetyPointRFIDRowChangeEventHandler SafetyPointRFIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SafetyPointRFIDRowChangeEventHandler SafetyPointRFIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SafetyPointRFIDRowChangeEventHandler SafetyPointRFIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SafetyPointRFIDRowChangeEventHandler SafetyPointRFIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSafetyPointRFIDRow(SafetyPointRFIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SafetyPointRFIDRow AddSafetyPointRFIDRow(string Rfid_UUID, string Rfid_Technology, string Rfid_Ser_SN_Prod, bool Rfid_Obsolete, bool Rfid_Verified, string Rfid_Note, string Rfid_Ser_OfficialSerial) {
                SafetyPointRFIDRow rowSafetyPointRFIDRow = ((SafetyPointRFIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Rfid_UUID,
                        Rfid_Technology,
                        Rfid_Ser_SN_Prod,
                        Rfid_Obsolete,
                        Rfid_Verified,
                        Rfid_Note,
                        Rfid_Ser_OfficialSerial};
                rowSafetyPointRFIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSafetyPointRFIDRow);
                return rowSafetyPointRFIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SafetyPointRFIDRow FindByRfid_ID(int Rfid_ID) {
                return ((SafetyPointRFIDRow)(this.Rows.Find(new object[] {
                            Rfid_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SafetyPointRFIDDataTable cln = ((SafetyPointRFIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SafetyPointRFIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRfid_ID = base.Columns["Rfid_ID"];
                this.columnRfid_UUID = base.Columns["Rfid_UUID"];
                this.columnRfid_Technology = base.Columns["Rfid_Technology"];
                this.columnRfid_Ser_SN_Prod = base.Columns["Rfid_Ser_SN_Prod"];
                this.columnRfid_Obsolete = base.Columns["Rfid_Obsolete"];
                this.columnRfid_Verified = base.Columns["Rfid_Verified"];
                this.columnRfid_Note = base.Columns["Rfid_Note"];
                this.columnRfid_Ser_OfficialSerial = base.Columns["Rfid_Ser_OfficialSerial"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRfid_ID = new global::System.Data.DataColumn("Rfid_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_ID);
                this.columnRfid_UUID = new global::System.Data.DataColumn("Rfid_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_UUID);
                this.columnRfid_Technology = new global::System.Data.DataColumn("Rfid_Technology", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_Technology);
                this.columnRfid_Ser_SN_Prod = new global::System.Data.DataColumn("Rfid_Ser_SN_Prod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_Ser_SN_Prod);
                this.columnRfid_Obsolete = new global::System.Data.DataColumn("Rfid_Obsolete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_Obsolete);
                this.columnRfid_Verified = new global::System.Data.DataColumn("Rfid_Verified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_Verified);
                this.columnRfid_Note = new global::System.Data.DataColumn("Rfid_Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_Note);
                this.columnRfid_Ser_OfficialSerial = new global::System.Data.DataColumn("Rfid_Ser_OfficialSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRfid_Ser_OfficialSerial);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRfid_ID}, true));
                this.columnRfid_ID.AutoIncrement = true;
                this.columnRfid_ID.AutoIncrementSeed = -1;
                this.columnRfid_ID.AutoIncrementStep = -1;
                this.columnRfid_ID.AllowDBNull = false;
                this.columnRfid_ID.ReadOnly = true;
                this.columnRfid_ID.Unique = true;
                this.columnRfid_UUID.MaxLength = 50;
                this.columnRfid_Technology.MaxLength = 10;
                this.columnRfid_Ser_SN_Prod.MaxLength = 11;
                this.columnRfid_Obsolete.AllowDBNull = false;
                this.columnRfid_Verified.AllowDBNull = false;
                this.columnRfid_Note.MaxLength = 2147483647;
                this.columnRfid_Ser_OfficialSerial.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SafetyPointRFIDRow NewSafetyPointRFIDRow() {
                return ((SafetyPointRFIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SafetyPointRFIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SafetyPointRFIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SafetyPointRFIDRowChanged != null)) {
                    this.SafetyPointRFIDRowChanged(this, new SafetyPointRFIDRowChangeEvent(((SafetyPointRFIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SafetyPointRFIDRowChanging != null)) {
                    this.SafetyPointRFIDRowChanging(this, new SafetyPointRFIDRowChangeEvent(((SafetyPointRFIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SafetyPointRFIDRowDeleted != null)) {
                    this.SafetyPointRFIDRowDeleted(this, new SafetyPointRFIDRowChangeEvent(((SafetyPointRFIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SafetyPointRFIDRowDeleting != null)) {
                    this.SafetyPointRFIDRowDeleting(this, new SafetyPointRFIDRowChangeEvent(((SafetyPointRFIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSafetyPointRFIDRow(SafetyPointRFIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SafetyPointRFIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Fam_ProdDataTable : global::System.Data.TypedTableBase<Fam_ProdRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnFam_Prefix;
            
            private global::System.Data.DataColumn columnFam_Name;
            
            private global::System.Data.DataColumn columnFam_Label;
            
            private global::System.Data.DataColumn columnFam_Tipo;
            
            private global::System.Data.DataColumn columnFam_IsDevice;
            
            private global::System.Data.DataColumn columnFam_ToCommessa;
            
            private global::System.Data.DataColumn _columnLEN_Fam_Prefix_;
            
            private global::System.Data.DataColumn columnFam_ID_Identifier;
            
            private global::System.Data.DataColumn columnFam_Alias_Progettazione;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Fam_ProdDataTable() {
                this.TableName = "Fam_Prod";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Fam_ProdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Fam_ProdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_PrefixColumn {
                get {
                    return this.columnFam_Prefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_NameColumn {
                get {
                    return this.columnFam_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_LabelColumn {
                get {
                    return this.columnFam_Label;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_TipoColumn {
                get {
                    return this.columnFam_Tipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_IsDeviceColumn {
                get {
                    return this.columnFam_IsDevice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_ToCommessaColumn {
                get {
                    return this.columnFam_ToCommessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn _LEN_Fam_Prefix_Column {
                get {
                    return this._columnLEN_Fam_Prefix_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_ID_IdentifierColumn {
                get {
                    return this.columnFam_ID_Identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Fam_Alias_ProgettazioneColumn {
                get {
                    return this.columnFam_Alias_Progettazione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Fam_ProdRow this[int index] {
                get {
                    return ((Fam_ProdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Fam_ProdRowChangeEventHandler Fam_ProdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Fam_ProdRowChangeEventHandler Fam_ProdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Fam_ProdRowChangeEventHandler Fam_ProdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Fam_ProdRowChangeEventHandler Fam_ProdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFam_ProdRow(Fam_ProdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Fam_ProdRow AddFam_ProdRow(string Fam_Prefix, string Fam_Name, string Fam_Label, string Fam_Tipo, string Fam_IsDevice, string Fam_ToCommessa, int _LEN_Fam_Prefix_, string Fam_ID_Identifier, string Fam_Alias_Progettazione) {
                Fam_ProdRow rowFam_ProdRow = ((Fam_ProdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Fam_Prefix,
                        Fam_Name,
                        Fam_Label,
                        Fam_Tipo,
                        Fam_IsDevice,
                        Fam_ToCommessa,
                        _LEN_Fam_Prefix_,
                        Fam_ID_Identifier,
                        Fam_Alias_Progettazione};
                rowFam_ProdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFam_ProdRow);
                return rowFam_ProdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Fam_ProdRow FindById(int Id) {
                return ((Fam_ProdRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Fam_ProdDataTable cln = ((Fam_ProdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Fam_ProdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnFam_Prefix = base.Columns["Fam_Prefix"];
                this.columnFam_Name = base.Columns["Fam_Name"];
                this.columnFam_Label = base.Columns["Fam_Label"];
                this.columnFam_Tipo = base.Columns["Fam_Tipo"];
                this.columnFam_IsDevice = base.Columns["Fam_IsDevice"];
                this.columnFam_ToCommessa = base.Columns["Fam_ToCommessa"];
                this._columnLEN_Fam_Prefix_ = base.Columns["LEN(Fam_Prefix)"];
                this.columnFam_ID_Identifier = base.Columns["Fam_ID_Identifier"];
                this.columnFam_Alias_Progettazione = base.Columns["Fam_Alias_Progettazione"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFam_Prefix = new global::System.Data.DataColumn("Fam_Prefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_Prefix);
                this.columnFam_Name = new global::System.Data.DataColumn("Fam_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_Name);
                this.columnFam_Label = new global::System.Data.DataColumn("Fam_Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_Label);
                this.columnFam_Tipo = new global::System.Data.DataColumn("Fam_Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_Tipo);
                this.columnFam_IsDevice = new global::System.Data.DataColumn("Fam_IsDevice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_IsDevice);
                this.columnFam_ToCommessa = new global::System.Data.DataColumn("Fam_ToCommessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_ToCommessa);
                this._columnLEN_Fam_Prefix_ = new global::System.Data.DataColumn("LEN(Fam_Prefix)", typeof(int), null, global::System.Data.MappingType.Element);
                this._columnLEN_Fam_Prefix_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnLEN_Fam_Prefix_");
                this._columnLEN_Fam_Prefix_.ExtendedProperties.Add("Generator_UserColumnName", "LEN(Fam_Prefix)");
                base.Columns.Add(this._columnLEN_Fam_Prefix_);
                this.columnFam_ID_Identifier = new global::System.Data.DataColumn("Fam_ID_Identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_ID_Identifier);
                this.columnFam_Alias_Progettazione = new global::System.Data.DataColumn("Fam_Alias_Progettazione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFam_Alias_Progettazione);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnFam_Prefix.MaxLength = 10;
                this.columnFam_Name.AllowDBNull = false;
                this.columnFam_Name.MaxLength = 255;
                this.columnFam_Label.MaxLength = 50;
                this.columnFam_Tipo.MaxLength = 1;
                this.columnFam_IsDevice.AllowDBNull = false;
                this.columnFam_IsDevice.MaxLength = 1;
                this.columnFam_ToCommessa.MaxLength = 1;
                this.columnFam_ID_Identifier.MaxLength = 1;
                this.columnFam_Alias_Progettazione.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Fam_ProdRow NewFam_ProdRow() {
                return ((Fam_ProdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Fam_ProdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Fam_ProdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Fam_ProdRowChanged != null)) {
                    this.Fam_ProdRowChanged(this, new Fam_ProdRowChangeEvent(((Fam_ProdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Fam_ProdRowChanging != null)) {
                    this.Fam_ProdRowChanging(this, new Fam_ProdRowChangeEvent(((Fam_ProdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Fam_ProdRowDeleted != null)) {
                    this.Fam_ProdRowDeleted(this, new Fam_ProdRowChangeEvent(((Fam_ProdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Fam_ProdRowDeleting != null)) {
                    this.Fam_ProdRowDeleting(this, new Fam_ProdRowChangeEvent(((Fam_ProdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFam_ProdRow(Fam_ProdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Fam_ProdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_Tmp_ProgrammaDataTable : global::System.Data.TypedTableBase<dt_Tmp_ProgrammaRow> {
            
            private global::System.Data.DataColumn columntmp_prog_id;
            
            private global::System.Data.DataColumn columntmp_prog_commessa;
            
            private global::System.Data.DataColumn columntmp_prog_codart_kit;
            
            private global::System.Data.DataColumn columntmp_prog_codart_item;
            
            private global::System.Data.DataColumn columntmp_prog_codart_fw;
            
            private global::System.Data.DataColumn columntmp_fw_key_id;
            
            private global::System.Data.DataColumn columntmp_ID_Hardware;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_ProgrammaDataTable() {
                this.TableName = "dt_Tmp_Programma";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dt_Tmp_ProgrammaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected dt_Tmp_ProgrammaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tmp_prog_idColumn {
                get {
                    return this.columntmp_prog_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tmp_prog_commessaColumn {
                get {
                    return this.columntmp_prog_commessa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tmp_prog_codart_kitColumn {
                get {
                    return this.columntmp_prog_codart_kit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tmp_prog_codart_itemColumn {
                get {
                    return this.columntmp_prog_codart_item;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tmp_prog_codart_fwColumn {
                get {
                    return this.columntmp_prog_codart_fw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tmp_fw_key_idColumn {
                get {
                    return this.columntmp_fw_key_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn tmp_ID_HardwareColumn {
                get {
                    return this.columntmp_ID_Hardware;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_ProgrammaRow this[int index] {
                get {
                    return ((dt_Tmp_ProgrammaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_ProgrammaRowChangeEventHandler dt_Tmp_ProgrammaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_ProgrammaRowChangeEventHandler dt_Tmp_ProgrammaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_ProgrammaRowChangeEventHandler dt_Tmp_ProgrammaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_ProgrammaRowChangeEventHandler dt_Tmp_ProgrammaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Adddt_Tmp_ProgrammaRow(dt_Tmp_ProgrammaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_ProgrammaRow Adddt_Tmp_ProgrammaRow(string tmp_prog_commessa, string tmp_prog_codart_kit, string tmp_prog_codart_item, string tmp_prog_codart_fw, short tmp_fw_key_id, string tmp_ID_Hardware) {
                dt_Tmp_ProgrammaRow rowdt_Tmp_ProgrammaRow = ((dt_Tmp_ProgrammaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        tmp_prog_commessa,
                        tmp_prog_codart_kit,
                        tmp_prog_codart_item,
                        tmp_prog_codart_fw,
                        tmp_fw_key_id,
                        tmp_ID_Hardware};
                rowdt_Tmp_ProgrammaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_Tmp_ProgrammaRow);
                return rowdt_Tmp_ProgrammaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dt_Tmp_ProgrammaDataTable cln = ((dt_Tmp_ProgrammaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_Tmp_ProgrammaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columntmp_prog_id = base.Columns["tmp_prog_id"];
                this.columntmp_prog_commessa = base.Columns["tmp_prog_commessa"];
                this.columntmp_prog_codart_kit = base.Columns["tmp_prog_codart_kit"];
                this.columntmp_prog_codart_item = base.Columns["tmp_prog_codart_item"];
                this.columntmp_prog_codart_fw = base.Columns["tmp_prog_codart_fw"];
                this.columntmp_fw_key_id = base.Columns["tmp_fw_key_id"];
                this.columntmp_ID_Hardware = base.Columns["tmp_ID_Hardware"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columntmp_prog_id = new global::System.Data.DataColumn("tmp_prog_id", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmp_prog_id);
                this.columntmp_prog_commessa = new global::System.Data.DataColumn("tmp_prog_commessa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmp_prog_commessa);
                this.columntmp_prog_codart_kit = new global::System.Data.DataColumn("tmp_prog_codart_kit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmp_prog_codart_kit);
                this.columntmp_prog_codart_item = new global::System.Data.DataColumn("tmp_prog_codart_item", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmp_prog_codart_item);
                this.columntmp_prog_codart_fw = new global::System.Data.DataColumn("tmp_prog_codart_fw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmp_prog_codart_fw);
                this.columntmp_fw_key_id = new global::System.Data.DataColumn("tmp_fw_key_id", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmp_fw_key_id);
                this.columntmp_ID_Hardware = new global::System.Data.DataColumn("tmp_ID_Hardware", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntmp_ID_Hardware);
                this.columntmp_prog_id.AutoIncrement = true;
                this.columntmp_prog_id.AutoIncrementSeed = -1;
                this.columntmp_prog_id.AutoIncrementStep = -1;
                this.columntmp_prog_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_ProgrammaRow Newdt_Tmp_ProgrammaRow() {
                return ((dt_Tmp_ProgrammaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_Tmp_ProgrammaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dt_Tmp_ProgrammaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_Tmp_ProgrammaRowChanged != null)) {
                    this.dt_Tmp_ProgrammaRowChanged(this, new dt_Tmp_ProgrammaRowChangeEvent(((dt_Tmp_ProgrammaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_Tmp_ProgrammaRowChanging != null)) {
                    this.dt_Tmp_ProgrammaRowChanging(this, new dt_Tmp_ProgrammaRowChangeEvent(((dt_Tmp_ProgrammaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_Tmp_ProgrammaRowDeleted != null)) {
                    this.dt_Tmp_ProgrammaRowDeleted(this, new dt_Tmp_ProgrammaRowChangeEvent(((dt_Tmp_ProgrammaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_Tmp_ProgrammaRowDeleting != null)) {
                    this.dt_Tmp_ProgrammaRowDeleting(this, new dt_Tmp_ProgrammaRowChangeEvent(((dt_Tmp_ProgrammaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removedt_Tmp_ProgrammaRow(dt_Tmp_ProgrammaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_Tmp_ProgrammaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_Tmp_FwDataTable : global::System.Data.TypedTableBase<dt_Tmp_FwRow> {
            
            private global::System.Data.DataColumn columnfw_codfw;
            
            private global::System.Data.DataColumn columnfw_pathfw;
            
            private global::System.Data.DataColumn columnfw_prefix;
            
            private global::System.Data.DataColumn columnfw_tipodev;
            
            private global::System.Data.DataColumn columnfw_standcust;
            
            private global::System.Data.DataColumn columnfw_versione;
            
            private global::System.Data.DataColumn columnfw_freq;
            
            private global::System.Data.DataColumn columnfw_searchvers;
            
            private global::System.Data.DataColumn columnfw_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_FwDataTable() {
                this.TableName = "dt_Tmp_Fw";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dt_Tmp_FwDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected dt_Tmp_FwDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_codfwColumn {
                get {
                    return this.columnfw_codfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_pathfwColumn {
                get {
                    return this.columnfw_pathfw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_prefixColumn {
                get {
                    return this.columnfw_prefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_tipodevColumn {
                get {
                    return this.columnfw_tipodev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_standcustColumn {
                get {
                    return this.columnfw_standcust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_versioneColumn {
                get {
                    return this.columnfw_versione;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_freqColumn {
                get {
                    return this.columnfw_freq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_searchversColumn {
                get {
                    return this.columnfw_searchvers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn fw_idColumn {
                get {
                    return this.columnfw_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_FwRow this[int index] {
                get {
                    return ((dt_Tmp_FwRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_FwRowChangeEventHandler dt_Tmp_FwRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_FwRowChangeEventHandler dt_Tmp_FwRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_FwRowChangeEventHandler dt_Tmp_FwRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event dt_Tmp_FwRowChangeEventHandler dt_Tmp_FwRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Adddt_Tmp_FwRow(dt_Tmp_FwRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_FwRow Adddt_Tmp_FwRow(string fw_codfw, string fw_pathfw, string fw_prefix, string fw_tipodev, string fw_standcust, string fw_versione, string fw_freq, string fw_searchvers) {
                dt_Tmp_FwRow rowdt_Tmp_FwRow = ((dt_Tmp_FwRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fw_codfw,
                        fw_pathfw,
                        fw_prefix,
                        fw_tipodev,
                        fw_standcust,
                        fw_versione,
                        fw_freq,
                        fw_searchvers,
                        null};
                rowdt_Tmp_FwRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_Tmp_FwRow);
                return rowdt_Tmp_FwRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dt_Tmp_FwDataTable cln = ((dt_Tmp_FwDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_Tmp_FwDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnfw_codfw = base.Columns["fw_codfw"];
                this.columnfw_pathfw = base.Columns["fw_pathfw"];
                this.columnfw_prefix = base.Columns["fw_prefix"];
                this.columnfw_tipodev = base.Columns["fw_tipodev"];
                this.columnfw_standcust = base.Columns["fw_standcust"];
                this.columnfw_versione = base.Columns["fw_versione"];
                this.columnfw_freq = base.Columns["fw_freq"];
                this.columnfw_searchvers = base.Columns["fw_searchvers"];
                this.columnfw_id = base.Columns["fw_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnfw_codfw = new global::System.Data.DataColumn("fw_codfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_codfw);
                this.columnfw_pathfw = new global::System.Data.DataColumn("fw_pathfw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_pathfw);
                this.columnfw_prefix = new global::System.Data.DataColumn("fw_prefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_prefix);
                this.columnfw_tipodev = new global::System.Data.DataColumn("fw_tipodev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_tipodev);
                this.columnfw_standcust = new global::System.Data.DataColumn("fw_standcust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_standcust);
                this.columnfw_versione = new global::System.Data.DataColumn("fw_versione", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_versione);
                this.columnfw_freq = new global::System.Data.DataColumn("fw_freq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_freq);
                this.columnfw_searchvers = new global::System.Data.DataColumn("fw_searchvers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_searchvers);
                this.columnfw_id = new global::System.Data.DataColumn("fw_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfw_id);
                this.columnfw_id.AutoIncrement = true;
                this.columnfw_id.AutoIncrementSeed = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_FwRow Newdt_Tmp_FwRow() {
                return ((dt_Tmp_FwRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_Tmp_FwRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dt_Tmp_FwRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_Tmp_FwRowChanged != null)) {
                    this.dt_Tmp_FwRowChanged(this, new dt_Tmp_FwRowChangeEvent(((dt_Tmp_FwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_Tmp_FwRowChanging != null)) {
                    this.dt_Tmp_FwRowChanging(this, new dt_Tmp_FwRowChangeEvent(((dt_Tmp_FwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_Tmp_FwRowDeleted != null)) {
                    this.dt_Tmp_FwRowDeleted(this, new dt_Tmp_FwRowChangeEvent(((dt_Tmp_FwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_Tmp_FwRowDeleting != null)) {
                    this.dt_Tmp_FwRowDeleting(this, new dt_Tmp_FwRowChangeEvent(((dt_Tmp_FwRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Removedt_Tmp_FwRow(dt_Tmp_FwRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ds_Programmazione ds = new ds_Programmazione();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_Tmp_FwDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SF_LastSerialNumberRow : global::System.Data.DataRow {
            
            private SF_LastSerialNumberDataTable tableSF_LastSerialNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_LastSerialNumberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSF_LastSerialNumber = ((SF_LastSerialNumberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Anno {
                get {
                    try {
                        return ((string)(this[this.tableSF_LastSerialNumber.AnnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Anno\' nella tabella \'SF_LastSerialNumber\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_LastSerialNumber.AnnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LastSerialID {
                get {
                    try {
                        return ((int)(this[this.tableSF_LastSerialNumber.LastSerialIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'LastSerialID\' nella tabella \'SF_LastSerialNumber\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSF_LastSerialNumber.LastSerialIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAnnoNull() {
                return this.IsNull(this.tableSF_LastSerialNumber.AnnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAnnoNull() {
                this[this.tableSF_LastSerialNumber.AnnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLastSerialIDNull() {
                return this.IsNull(this.tableSF_LastSerialNumber.LastSerialIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLastSerialIDNull() {
                this[this.tableSF_LastSerialNumber.LastSerialIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FirmwareRow : global::System.Data.DataRow {
            
            private FirmwareDataTable tableFirmware;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FirmwareRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFirmware = ((FirmwareDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableFirmware.IdColumn]));
                }
                set {
                    this[this.tableFirmware.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Code {
                get {
                    return ((string)(this[this.tableFirmware.SW_CodeColumn]));
                }
                set {
                    this[this.tableFirmware.SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_TipoDevice {
                get {
                    return ((string)(this[this.tableFirmware.SW_TipoDeviceColumn]));
                }
                set {
                    this[this.tableFirmware.SW_TipoDeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Descrizione {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_DescrizioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Descrizione\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_DescrizioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Descrizione_EN {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_Descrizione_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Descrizione_EN\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_Descrizione_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Versione {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_VersioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Versione\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_VersioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Revisione {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_RevisioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Revisione\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_RevisioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_Standard {
                get {
                    return ((bool)(this[this.tableFirmware.SW_StandardColumn]));
                }
                set {
                    this[this.tableFirmware.SW_StandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_FamProd {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_FamProdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_FamProd\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_FamProdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_P_Opt_RF {
                get {
                    return ((string)(this[this.tableFirmware.SW_P_Opt_RFColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_RFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Oled {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_OledColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_OledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_EmButt {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_EmButtColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_EmButtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Backlight {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_BacklightColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_BacklightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_ShiftPage {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_ShiftPageColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_ShiftPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Accel {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_AccelColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_AccelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_SP {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_SPColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Buzzer {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_BuzzerColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_BuzzerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Vibracall {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_VibracallColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_VibracallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_LedTorch {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_LedTorchColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_LedTorchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_PLD {
                get {
                    return ((bool)(this[this.tableFirmware.SW_P_PLDColumn]));
                }
                set {
                    this[this.tableFirmware.SW_P_PLDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_P_Opt_MaxPairDevices {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_P_Opt_MaxPairDevices\' nella tabella \'Firmware\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_R_Opt_RF {
                get {
                    return ((string)(this[this.tableFirmware.SW_R_Opt_RFColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_RFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Plug_Exp {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Plug_ExpColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Plug_ExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Plug_Ple {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Plug_PleColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Plug_PleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Em_Keyb {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Em_KeybColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Em_KeybColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Can {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_CanColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_CanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Prop_Out {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Prop_OutColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Prop_OutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_R_Opt_TimeOut {
                get {
                    return ((string)(this[this.tableFirmware.SW_R_Opt_TimeOutColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_TimeOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Cont_Keys {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Cont_KeysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Cont_Keys\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Cont_KeysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_LockSameRow {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_LockSameRowColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_LockSameRowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Use_SP {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Use_SPColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Use_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_MaxPairDevices {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_MaxPairDevices\' nella tabella \'Firmware\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_ShiftPage {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_ShiftPageColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_ShiftPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Output_No {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Output_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Output_No\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Output_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Dig_Input_No {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Dig_Input_No\' nella tabella \'Firmware\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Ana_Input_No {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Ana_Input_No\' nella tabella \'Firmware\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Revisioni {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_RevisioniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Revisioni\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_RevisioniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Funzionamento {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_FunzionamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Funzionamento\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_FunzionamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Config {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_ConfigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Config\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_ConfigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_Obsolete_ver {
                get {
                    return ((bool)(this[this.tableFirmware.SW_Obsolete_verColumn]));
                }
                set {
                    this[this.tableFirmware.SW_Obsolete_verColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SW_Obsolete_ver_from_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFirmware.SW_Obsolete_ver_from_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Obsolete_ver_from_date\' nella tabella \'Firmware\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_Obsolete_ver_from_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Order {
                get {
                    try {
                        return ((string)(this[this.tableFirmware.SW_OrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Order\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_OrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Use_Radius {
                get {
                    return ((bool)(this[this.tableFirmware.SW_R_Opt_Use_RadiusColumn]));
                }
                set {
                    this[this.tableFirmware.SW_R_Opt_Use_RadiusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_CustomPIC {
                get {
                    try {
                        return ((bool)(this[this.tableFirmware.SW_CustomPICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_CustomPIC\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_CustomPICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Radius {
                get {
                    try {
                        return ((bool)(this[this.tableFirmware.SW_P_Opt_Use_RadiusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_P_Opt_Use_Radius\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_P_Opt_Use_RadiusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_P_Lock {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_P_LockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_P_Lock\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_P_LockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Lock {
                get {
                    try {
                        return ((int)(this[this.tableFirmware.SW_R_LockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Lock\' nella tabella \'Firmware\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFirmware.SW_R_LockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_ProgrammaRow dt_Tmp_ProgrammaRow {
                get {
                    return ((dt_Tmp_ProgrammaRow)(this.GetParentRow(this.Table.ParentRelations["dt_Tmp_Programma_dt_Firmware"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dt_Tmp_Programma_dt_Firmware"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_DescrizioneNull() {
                return this.IsNull(this.tableFirmware.SW_DescrizioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_DescrizioneNull() {
                this[this.tableFirmware.SW_DescrizioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Descrizione_ENNull() {
                return this.IsNull(this.tableFirmware.SW_Descrizione_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Descrizione_ENNull() {
                this[this.tableFirmware.SW_Descrizione_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_VersioneNull() {
                return this.IsNull(this.tableFirmware.SW_VersioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_VersioneNull() {
                this[this.tableFirmware.SW_VersioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_RevisioneNull() {
                return this.IsNull(this.tableFirmware.SW_RevisioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_RevisioneNull() {
                this[this.tableFirmware.SW_RevisioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_FamProdNull() {
                return this.IsNull(this.tableFirmware.SW_FamProdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_FamProdNull() {
                this[this.tableFirmware.SW_FamProdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_P_Opt_MaxPairDevicesNull() {
                return this.IsNull(this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_P_Opt_MaxPairDevicesNull() {
                this[this.tableFirmware.SW_P_Opt_MaxPairDevicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Cont_KeysNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Cont_KeysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Cont_KeysNull() {
                this[this.tableFirmware.SW_R_Opt_Cont_KeysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_MaxPairDevicesNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_MaxPairDevicesNull() {
                this[this.tableFirmware.SW_R_Opt_MaxPairDevicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Output_NoNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Output_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Output_NoNull() {
                this[this.tableFirmware.SW_R_Opt_Output_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Dig_Input_NoNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Dig_Input_NoNull() {
                this[this.tableFirmware.SW_R_Opt_Dig_Input_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Ana_Input_NoNull() {
                return this.IsNull(this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Ana_Input_NoNull() {
                this[this.tableFirmware.SW_R_Opt_Ana_Input_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_RevisioniNull() {
                return this.IsNull(this.tableFirmware.SW_RevisioniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_RevisioniNull() {
                this[this.tableFirmware.SW_RevisioniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_FunzionamentoNull() {
                return this.IsNull(this.tableFirmware.SW_FunzionamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_FunzionamentoNull() {
                this[this.tableFirmware.SW_FunzionamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_ConfigNull() {
                return this.IsNull(this.tableFirmware.SW_ConfigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_ConfigNull() {
                this[this.tableFirmware.SW_ConfigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Obsolete_ver_from_dateNull() {
                return this.IsNull(this.tableFirmware.SW_Obsolete_ver_from_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Obsolete_ver_from_dateNull() {
                this[this.tableFirmware.SW_Obsolete_ver_from_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_OrderNull() {
                return this.IsNull(this.tableFirmware.SW_OrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_OrderNull() {
                this[this.tableFirmware.SW_OrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_CustomPICNull() {
                return this.IsNull(this.tableFirmware.SW_CustomPICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_CustomPICNull() {
                this[this.tableFirmware.SW_CustomPICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_P_Opt_Use_RadiusNull() {
                return this.IsNull(this.tableFirmware.SW_P_Opt_Use_RadiusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_P_Opt_Use_RadiusNull() {
                this[this.tableFirmware.SW_P_Opt_Use_RadiusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_P_LockNull() {
                return this.IsNull(this.tableFirmware.SW_P_LockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_P_LockNull() {
                this[this.tableFirmware.SW_P_LockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_LockNull() {
                return this.IsNull(this.tableFirmware.SW_R_LockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_LockNull() {
                this[this.tableFirmware.SW_R_LockColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SF_Commesse_SLRow : global::System.Data.DataRow {
            
            private SF_Commesse_SLDataTable tableSF_Commesse_SL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_Commesse_SLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSF_Commesse_SL = ((SF_Commesse_SLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoOrdine {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.TipoOrdineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'TipoOrdine\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.TipoOrdineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CommessaLong {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.CommessaLongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'CommessaLong\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.CommessaLongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CommessaShort {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.CommessaShortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'CommessaShort\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.CommessaShortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Data_Ordine {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.Data_OrdineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Data_Ordine\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Data_OrdineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Data_Conferma_Consegna {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.Data_Conferma_ConsegnaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Data_Conferma_Consegna\' nella tabella \'SF_Commesse_SL\' è" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Data_Conferma_ConsegnaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Numero_Ordine {
                get {
                    try {
                        return ((int)(this[this.tableSF_Commesse_SL.Numero_OrdineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Numero_Ordine\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Numero_OrdineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Numero_Riga {
                get {
                    try {
                        return ((int)(this[this.tableSF_Commesse_SL.Numero_RigaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Numero_Riga\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Numero_RigaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CodAnagrafico {
                get {
                    try {
                        return ((int)(this[this.tableSF_Commesse_SL.CodAnagraficoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'CodAnagrafico\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.CodAnagraficoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ragione_Sociale {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.Ragione_SocialeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ragione_Sociale\' nella tabella \'SF_Commesse_SL\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Ragione_SocialeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Art_Commessa {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.Art_CommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Art_Commessa\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Art_CommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UM {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.UMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'UM\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.UMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Qta_Ordinata {
                get {
                    try {
                        return ((decimal)(this[this.tableSF_Commesse_SL.Qta_OrdinataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Qta_Ordinata\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Qta_OrdinataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Qta_da_Evadere {
                get {
                    try {
                        return ((decimal)(this[this.tableSF_Commesse_SL.Qta_da_EvadereColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Qta_da_Evadere\' nella tabella \'SF_Commesse_SL\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Qta_da_EvadereColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StatoCommessa {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.StatoCommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'StatoCommessa\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.StatoCommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TipoRiga {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.TipoRigaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'TipoRiga\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.TipoRigaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Is_Kit {
                get {
                    return ((int)(this[this.tableSF_Commesse_SL.Is_KitColumn]));
                }
                set {
                    this[this.tableSF_Commesse_SL.Is_KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Is_SWR_P {
                get {
                    return ((int)(this[this.tableSF_Commesse_SL.Is_SWR_PColumn]));
                }
                set {
                    this[this.tableSF_Commesse_SL.Is_SWR_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Is_SWR_R {
                get {
                    return ((int)(this[this.tableSF_Commesse_SL.Is_SWR_RColumn]));
                }
                set {
                    this[this.tableSF_Commesse_SL.Is_SWR_RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DataFineValidita {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.DataFineValiditaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'DataFineValidita\' nella tabella \'SF_Commesse_SL\' è DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.DataFineValiditaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Device {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Device\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Device {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.SW_DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Device\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.SW_DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Qta_Evasa {
                get {
                    try {
                        return ((int)(this[this.tableSF_Commesse_SL.Qta_EvasaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Qta_Evasa\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Qta_EvasaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Commessa {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.Ser_CommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Commessa\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Ser_CommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Kit {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.Ser_KitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Kit\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Ser_KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device {
                get {
                    try {
                        return ((string)(this[this.tableSF_Commesse_SL.Ser_DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device\' nella tabella \'SF_Commesse_SL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Commesse_SL.Ser_DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipoOrdineNull() {
                return this.IsNull(this.tableSF_Commesse_SL.TipoOrdineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipoOrdineNull() {
                this[this.tableSF_Commesse_SL.TipoOrdineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommessaLongNull() {
                return this.IsNull(this.tableSF_Commesse_SL.CommessaLongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommessaLongNull() {
                this[this.tableSF_Commesse_SL.CommessaLongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommessaShortNull() {
                return this.IsNull(this.tableSF_Commesse_SL.CommessaShortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommessaShortNull() {
                this[this.tableSF_Commesse_SL.CommessaShortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsData_OrdineNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Data_OrdineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetData_OrdineNull() {
                this[this.tableSF_Commesse_SL.Data_OrdineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsData_Conferma_ConsegnaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Data_Conferma_ConsegnaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetData_Conferma_ConsegnaNull() {
                this[this.tableSF_Commesse_SL.Data_Conferma_ConsegnaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumero_OrdineNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Numero_OrdineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumero_OrdineNull() {
                this[this.tableSF_Commesse_SL.Numero_OrdineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNumero_RigaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Numero_RigaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNumero_RigaNull() {
                this[this.tableSF_Commesse_SL.Numero_RigaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCodAnagraficoNull() {
                return this.IsNull(this.tableSF_Commesse_SL.CodAnagraficoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCodAnagraficoNull() {
                this[this.tableSF_Commesse_SL.CodAnagraficoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRagione_SocialeNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Ragione_SocialeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRagione_SocialeNull() {
                this[this.tableSF_Commesse_SL.Ragione_SocialeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArt_CommessaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Art_CommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArt_CommessaNull() {
                this[this.tableSF_Commesse_SL.Art_CommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUMNull() {
                return this.IsNull(this.tableSF_Commesse_SL.UMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUMNull() {
                this[this.tableSF_Commesse_SL.UMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQta_OrdinataNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Qta_OrdinataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQta_OrdinataNull() {
                this[this.tableSF_Commesse_SL.Qta_OrdinataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQta_da_EvadereNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Qta_da_EvadereColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQta_da_EvadereNull() {
                this[this.tableSF_Commesse_SL.Qta_da_EvadereColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatoCommessaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.StatoCommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatoCommessaNull() {
                this[this.tableSF_Commesse_SL.StatoCommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTipoRigaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.TipoRigaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTipoRigaNull() {
                this[this.tableSF_Commesse_SL.TipoRigaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDataFineValiditaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.DataFineValiditaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDataFineValiditaNull() {
                this[this.tableSF_Commesse_SL.DataFineValiditaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDeviceNull() {
                return this.IsNull(this.tableSF_Commesse_SL.DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDeviceNull() {
                this[this.tableSF_Commesse_SL.DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_DeviceNull() {
                return this.IsNull(this.tableSF_Commesse_SL.SW_DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_DeviceNull() {
                this[this.tableSF_Commesse_SL.SW_DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQta_EvasaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Qta_EvasaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQta_EvasaNull() {
                this[this.tableSF_Commesse_SL.Qta_EvasaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_CommessaNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Ser_CommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_CommessaNull() {
                this[this.tableSF_Commesse_SL.Ser_CommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_KitNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Ser_KitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_KitNull() {
                this[this.tableSF_Commesse_SL.Ser_KitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DeviceNull() {
                return this.IsNull(this.tableSF_Commesse_SL.Ser_DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DeviceNull() {
                this[this.tableSF_Commesse_SL.Ser_DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FW_ClientiRow[] GetFW_ClientiRows() {
                if ((this.Table.ChildRelations["SF_Commesse_SL_dt_FW_Clienti"] == null)) {
                    return new FW_ClientiRow[0];
                }
                else {
                    return ((FW_ClientiRow[])(base.GetChildRows(this.Table.ChildRelations["SF_Commesse_SL_dt_FW_Clienti"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliToXSWRRow[] GetSF_ArticoliToXSWRRows() {
                if ((this.Table.ChildRelations["SF_Commesse_SL_SF_ArticoliToXSWR"] == null)) {
                    return new SF_ArticoliToXSWRRow[0];
                }
                else {
                    return ((SF_ArticoliToXSWRRow[])(base.GetChildRows(this.Table.ChildRelations["SF_Commesse_SL_SF_ArticoliToXSWR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliRow[] GetSF_ArticoliRows() {
                if ((this.Table.ChildRelations["SF_Commesse_SL_SF_Articoli"] == null)) {
                    return new SF_ArticoliRow[0];
                }
                else {
                    return ((SF_ArticoliRow[])(base.GetChildRows(this.Table.ChildRelations["SF_Commesse_SL_SF_Articoli"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CommesseSL_CountRow[] GetCommesseSL_CountRows() {
                if ((this.Table.ChildRelations["SF_Commesse_SL_CommesseSL_Count"] == null)) {
                    return new CommesseSL_CountRow[0];
                }
                else {
                    return ((CommesseSL_CountRow[])(base.GetChildRows(this.Table.ChildRelations["SF_Commesse_SL_CommesseSL_Count"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FW_ClientiRow : global::System.Data.DataRow {
            
            private FW_ClientiDataTable tableFW_Clienti;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FW_ClientiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFW_Clienti = ((FW_ClientiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Cod_Nominativo {
                get {
                    return ((int)(this[this.tableFW_Clienti.Cod_NominativoColumn]));
                }
                set {
                    this[this.tableFW_Clienti.Cod_NominativoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Code {
                get {
                    try {
                        return ((string)(this[this.tableFW_Clienti.SW_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Code\' nella tabella \'FW_Clienti\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFW_Clienti.SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Des1 {
                get {
                    try {
                        return ((string)(this[this.tableFW_Clienti.SW_Des1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Des1\' nella tabella \'FW_Clienti\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFW_Clienti.SW_Des1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Des2 {
                get {
                    try {
                        return ((string)(this[this.tableFW_Clienti.SW_Des2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Des2\' nella tabella \'FW_Clienti\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFW_Clienti.SW_Des2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow SF_Commesse_SLRow {
                get {
                    return ((SF_Commesse_SLRow)(this.GetParentRow(this.Table.ParentRelations["SF_Commesse_SL_dt_FW_Clienti"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SF_Commesse_SL_dt_FW_Clienti"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_CodeNull() {
                return this.IsNull(this.tableFW_Clienti.SW_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_CodeNull() {
                this[this.tableFW_Clienti.SW_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Des1Null() {
                return this.IsNull(this.tableFW_Clienti.SW_Des1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Des1Null() {
                this[this.tableFW_Clienti.SW_Des1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Des2Null() {
                return this.IsNull(this.tableFW_Clienti.SW_Des2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Des2Null() {
                this[this.tableFW_Clienti.SW_Des2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SF_ArticoliToXSWRRow : global::System.Data.DataRow {
            
            private SF_ArticoliToXSWRDataTable tableSF_ArticoliToXSWR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_ArticoliToXSWRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSF_ArticoliToXSWR = ((SF_ArticoliToXSWRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ArtCommessa {
                get {
                    try {
                        return ((string)(this[this.tableSF_ArticoliToXSWR.ArtCommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'ArtCommessa\' nella tabella \'SF_ArticoliToXSWR\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSF_ArticoliToXSWR.ArtCommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CodiceFw {
                get {
                    try {
                        return ((string)(this[this.tableSF_ArticoliToXSWR.CodiceFwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'CodiceFw\' nella tabella \'SF_ArticoliToXSWR\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_ArticoliToXSWR.CodiceFwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Descrizione {
                get {
                    try {
                        return ((string)(this[this.tableSF_ArticoliToXSWR.DescrizioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Descrizione\' nella tabella \'SF_ArticoliToXSWR\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSF_ArticoliToXSWR.DescrizioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DescrizioneEstesa {
                get {
                    try {
                        return ((string)(this[this.tableSF_ArticoliToXSWR.DescrizioneEstesaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'DescrizioneEstesa\' nella tabella \'SF_ArticoliToXSWR\' è D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSF_ArticoliToXSWR.DescrizioneEstesaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DataInizioValidita {
                get {
                    try {
                        return ((string)(this[this.tableSF_ArticoliToXSWR.DataInizioValiditaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'DataInizioValidita\' nella tabella \'SF_ArticoliToXSWR\' è " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_ArticoliToXSWR.DataInizioValiditaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DataFineValidita {
                get {
                    try {
                        return ((string)(this[this.tableSF_ArticoliToXSWR.DataFineValiditaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'DataFineValidita\' nella tabella \'SF_ArticoliToXSWR\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSF_ArticoliToXSWR.DataFineValiditaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow SF_Commesse_SLRow {
                get {
                    return ((SF_Commesse_SLRow)(this.GetParentRow(this.Table.ParentRelations["SF_Commesse_SL_SF_ArticoliToXSWR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SF_Commesse_SL_SF_ArticoliToXSWR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArtCommessaNull() {
                return this.IsNull(this.tableSF_ArticoliToXSWR.ArtCommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArtCommessaNull() {
                this[this.tableSF_ArticoliToXSWR.ArtCommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCodiceFwNull() {
                return this.IsNull(this.tableSF_ArticoliToXSWR.CodiceFwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCodiceFwNull() {
                this[this.tableSF_ArticoliToXSWR.CodiceFwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDescrizioneNull() {
                return this.IsNull(this.tableSF_ArticoliToXSWR.DescrizioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDescrizioneNull() {
                this[this.tableSF_ArticoliToXSWR.DescrizioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDescrizioneEstesaNull() {
                return this.IsNull(this.tableSF_ArticoliToXSWR.DescrizioneEstesaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDescrizioneEstesaNull() {
                this[this.tableSF_ArticoliToXSWR.DescrizioneEstesaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDataInizioValiditaNull() {
                return this.IsNull(this.tableSF_ArticoliToXSWR.DataInizioValiditaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDataInizioValiditaNull() {
                this[this.tableSF_ArticoliToXSWR.DataInizioValiditaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDataFineValiditaNull() {
                return this.IsNull(this.tableSF_ArticoliToXSWR.DataFineValiditaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDataFineValiditaNull() {
                this[this.tableSF_ArticoliToXSWR.DataFineValiditaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SF_ArticoliRow : global::System.Data.DataRow {
            
            private SF_ArticoliDataTable tableSF_Articoli;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SF_ArticoliRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSF_Articoli = ((SF_ArticoliDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Articolo {
                get {
                    try {
                        return ((string)(this[this.tableSF_Articoli.ArticoloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Articolo\' nella tabella \'SF_Articoli\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Articoli.ArticoloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Descrizione {
                get {
                    try {
                        return ((string)(this[this.tableSF_Articoli.DescrizioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Descrizione\' nella tabella \'SF_Articoli\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Articoli.DescrizioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DescrizioneEstesa {
                get {
                    try {
                        return ((string)(this[this.tableSF_Articoli.DescrizioneEstesaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'DescrizioneEstesa\' nella tabella \'SF_Articoli\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSF_Articoli.DescrizioneEstesaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Modello {
                get {
                    try {
                        return ((string)(this[this.tableSF_Articoli.ModelloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Modello\' nella tabella \'SF_Articoli\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSF_Articoli.ModelloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow SF_Commesse_SLRow {
                get {
                    return ((SF_Commesse_SLRow)(this.GetParentRow(this.Table.ParentRelations["SF_Commesse_SL_SF_Articoli"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SF_Commesse_SL_SF_Articoli"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsArticoloNull() {
                return this.IsNull(this.tableSF_Articoli.ArticoloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetArticoloNull() {
                this[this.tableSF_Articoli.ArticoloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDescrizioneNull() {
                return this.IsNull(this.tableSF_Articoli.DescrizioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDescrizioneNull() {
                this[this.tableSF_Articoli.DescrizioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDescrizioneEstesaNull() {
                return this.IsNull(this.tableSF_Articoli.DescrizioneEstesaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDescrizioneEstesaNull() {
                this[this.tableSF_Articoli.DescrizioneEstesaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsModelloNull() {
                return this.IsNull(this.tableSF_Articoli.ModelloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetModelloNull() {
                this[this.tableSF_Articoli.ModelloColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CommesseSL_CountRow : global::System.Data.DataRow {
            
            private CommesseSL_CountDataTable tableCommesseSL_Count;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CommesseSL_CountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommesseSL_Count = ((CommesseSL_CountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Commessa {
                get {
                    try {
                        return ((string)(this[this.tableCommesseSL_Count.Ser_CommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Commessa\' nella tabella \'CommesseSL_Count\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCommesseSL_Count.Ser_CommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Kit {
                get {
                    try {
                        return ((string)(this[this.tableCommesseSL_Count.Ser_KitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Kit\' nella tabella \'CommesseSL_Count\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommesseSL_Count.Ser_KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device {
                get {
                    try {
                        return ((string)(this[this.tableCommesseSL_Count.Ser_DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device\' nella tabella \'CommesseSL_Count\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommesseSL_Count.Ser_DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QtaEvasa {
                get {
                    try {
                        return ((int)(this[this.tableCommesseSL_Count.QtaEvasaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'QtaEvasa\' nella tabella \'CommesseSL_Count\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommesseSL_Count.QtaEvasaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow SF_Commesse_SLRowParent {
                get {
                    return ((SF_Commesse_SLRow)(this.GetParentRow(this.Table.ParentRelations["SF_Commesse_SL_CommesseSL_Count"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SF_Commesse_SL_CommesseSL_Count"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_CommessaNull() {
                return this.IsNull(this.tableCommesseSL_Count.Ser_CommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_CommessaNull() {
                this[this.tableCommesseSL_Count.Ser_CommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_KitNull() {
                return this.IsNull(this.tableCommesseSL_Count.Ser_KitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_KitNull() {
                this[this.tableCommesseSL_Count.Ser_KitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DeviceNull() {
                return this.IsNull(this.tableCommesseSL_Count.Ser_DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DeviceNull() {
                this[this.tableCommesseSL_Count.Ser_DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQtaEvasaNull() {
                return this.IsNull(this.tableCommesseSL_Count.QtaEvasaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQtaEvasaNull() {
                this[this.tableCommesseSL_Count.QtaEvasaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SerialNumbersRow : global::System.Data.DataRow {
            
            private SerialNumbersDataTable tableSerialNumbers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSerialNumbers = ((SerialNumbersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableSerialNumbers.IdColumn]));
                }
                set {
                    this[this.tableSerialNumbers.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Kit {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_KitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Kit\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Ser_ID_Cli {
                get {
                    try {
                        return ((int)(this[this.tableSerialNumbers.Ser_ID_CliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ID_Cli\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_ID_CliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device_ID_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_Device_ID_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device_ID_Code\' nella tabella \'SerialNumbers\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_Device_ID_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_OfficialSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_OfficialSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_OfficialSerial\' nella tabella \'SerialNumbers\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_OfficialSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ReadSerial\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_SW_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code_Rev {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_SW_Code_RevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code_Rev\' nella tabella \'SerialNumbers\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SW_Code_RevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_SW_Std_Type {
                get {
                    try {
                        return ((bool)(this[this.tableSerialNumbers.Ser_SW_Std_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Std_Type\' nella tabella \'SerialNumbers\' è DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SW_Std_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SN_prod {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_SN_prodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SN_prod\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_SN_prodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Commessa {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_CommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Commessa\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_CommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_DateProduction {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers.Ser_DateProductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_DateProduction\' nella tabella \'SerialNumbers\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_DateProductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_Spedito {
                get {
                    return ((bool)(this[this.tableSerialNumbers.Ser_SpeditoColumn]));
                }
                set {
                    this[this.tableSerialNumbers.Ser_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_Data_Spedito {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers.Ser_Data_SpeditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Data_Spedito\' nella tabella \'SerialNumbers\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_Data_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Substition_ID_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Substition_ID_ReadSerial\' nella tabella \'SerialNumbe" +
                                "rs\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Note {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers.Ser_NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Note\' nella tabella \'SerialNumbers\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers.Ser_NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_KitNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_KitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_KitNull() {
                this[this.tableSerialNumbers.Ser_KitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ID_CliNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_ID_CliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ID_CliNull() {
                this[this.tableSerialNumbers.Ser_ID_CliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DeviceNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DeviceNull() {
                this[this.tableSerialNumbers.Ser_DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Device_ID_CodeNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_Device_ID_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Device_ID_CodeNull() {
                this[this.tableSerialNumbers.Ser_Device_ID_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_OfficialSerialNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_OfficialSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_OfficialSerialNull() {
                this[this.tableSerialNumbers.Ser_OfficialSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ReadSerialNull() {
                this[this.tableSerialNumbers.Ser_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_CodeNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SW_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_CodeNull() {
                this[this.tableSerialNumbers.Ser_SW_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Code_RevNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SW_Code_RevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Code_RevNull() {
                this[this.tableSerialNumbers.Ser_SW_Code_RevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Std_TypeNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SW_Std_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Std_TypeNull() {
                this[this.tableSerialNumbers.Ser_SW_Std_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SN_prodNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_SN_prodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SN_prodNull() {
                this[this.tableSerialNumbers.Ser_SN_prodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_CommessaNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_CommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_CommessaNull() {
                this[this.tableSerialNumbers.Ser_CommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DateProductionNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_DateProductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DateProductionNull() {
                this[this.tableSerialNumbers.Ser_DateProductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Data_SpeditoNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_Data_SpeditoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Data_SpeditoNull() {
                this[this.tableSerialNumbers.Ser_Data_SpeditoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Substition_ID_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Substition_ID_ReadSerialNull() {
                this[this.tableSerialNumbers.Ser_Substition_ID_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_NoteNull() {
                return this.IsNull(this.tableSerialNumbers.Ser_NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_NoteNull() {
                this[this.tableSerialNumbers.Ser_NoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dt_Firmware_lookupCommesseSLRow : global::System.Data.DataRow {
            
            private dt_Firmware_lookupCommesseSLDataTable tabledt_Firmware_lookupCommesseSL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dt_Firmware_lookupCommesseSLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_Firmware_lookupCommesseSL = ((dt_Firmware_lookupCommesseSLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tabledt_Firmware_lookupCommesseSL.IdColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Code {
                get {
                    return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_CodeColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_TipoDevice {
                get {
                    return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_TipoDeviceColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_TipoDeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Descrizione {
                get {
                    try {
                        return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_DescrizioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Descrizione\' nella tabella \'dt_Firmware_lookupCommess" +
                                "eSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_DescrizioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Descrizione_EN {
                get {
                    try {
                        return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_Descrizione_ENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Descrizione_EN\' nella tabella \'dt_Firmware_lookupComm" +
                                "esseSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_Descrizione_ENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Versione {
                get {
                    try {
                        return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_VersioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Versione\' nella tabella \'dt_Firmware_lookupCommesseSL" +
                                "\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_VersioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Revisione {
                get {
                    try {
                        return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_RevisioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Revisione\' nella tabella \'dt_Firmware_lookupCommesseS" +
                                "L\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_RevisioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_Standard {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_StandardColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_StandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_P_Opt_RF {
                get {
                    return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_RFColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_RFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Oled {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_OledColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_OledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_EmButt {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_EmButtColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_EmButtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Backlight {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_BacklightColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_BacklightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_ShiftPage {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_ShiftPageColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_ShiftPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Accel {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_AccelColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_AccelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_SP {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_SPColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Buzzer {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_BuzzerColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_BuzzerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_Vibracall {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_VibracallColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_VibracallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_P_Opt_Use_LedTorch {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_LedTorchColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_Use_LedTorchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_P_Opt_MaxPairDevices {
                get {
                    try {
                        return ((int)(this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_MaxPairDevicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_P_Opt_MaxPairDevices\' nella tabella \'dt_Firmware_look" +
                                "upCommesseSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_MaxPairDevicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_R_Opt_RF {
                get {
                    return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_RFColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_RFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Plug_Exp {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Plug_ExpColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Plug_ExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Plug_Ple {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Plug_PleColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Plug_PleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Em_Keyb {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Em_KeybColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Em_KeybColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Can {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_CanColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_CanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Prop_Out {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Prop_OutColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Prop_OutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_R_Opt_TimeOut {
                get {
                    return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_TimeOutColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_TimeOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Cont_Keys {
                get {
                    try {
                        return ((int)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Cont_KeysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Cont_Keys\' nella tabella \'dt_Firmware_lookupCom" +
                                "messeSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Cont_KeysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_LockSameRow {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_LockSameRowColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_LockSameRowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_Use_SP {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Use_SPColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Use_SPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_MaxPairDevices {
                get {
                    try {
                        return ((int)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_MaxPairDevicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_MaxPairDevices\' nella tabella \'dt_Firmware_look" +
                                "upCommesseSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_MaxPairDevicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_R_Opt_ShiftPage {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_ShiftPageColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_ShiftPageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Output_No {
                get {
                    try {
                        return ((int)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Output_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Output_No\' nella tabella \'dt_Firmware_lookupCom" +
                                "messeSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Output_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Dig_Input_No {
                get {
                    try {
                        return ((int)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Dig_Input_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Dig_Input_No\' nella tabella \'dt_Firmware_lookup" +
                                "CommesseSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Dig_Input_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SW_R_Opt_Ana_Input_No {
                get {
                    try {
                        return ((int)(this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Ana_Input_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_R_Opt_Ana_Input_No\' nella tabella \'dt_Firmware_lookup" +
                                "CommesseSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Ana_Input_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Revisioni {
                get {
                    try {
                        return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_RevisioniColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Revisioni\' nella tabella \'dt_Firmware_lookupCommesseS" +
                                "L\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_RevisioniColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Funzionamento {
                get {
                    try {
                        return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_FunzionamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Funzionamento\' nella tabella \'dt_Firmware_lookupComme" +
                                "sseSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_FunzionamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SW_Config {
                get {
                    try {
                        return ((string)(this[this.tabledt_Firmware_lookupCommesseSL.SW_ConfigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Config\' nella tabella \'dt_Firmware_lookupCommesseSL\' " +
                                "è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_ConfigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SW_Obsolete_ver {
                get {
                    return ((bool)(this[this.tabledt_Firmware_lookupCommesseSL.SW_Obsolete_verColumn]));
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_Obsolete_verColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SW_Obsolete_ver_from_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledt_Firmware_lookupCommesseSL.SW_Obsolete_ver_from_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'SW_Obsolete_ver_from_date\' nella tabella \'dt_Firmware_lo" +
                                "okupCommesseSL\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Firmware_lookupCommesseSL.SW_Obsolete_ver_from_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_DescrizioneNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_DescrizioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_DescrizioneNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_DescrizioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Descrizione_ENNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_Descrizione_ENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Descrizione_ENNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_Descrizione_ENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_VersioneNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_VersioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_VersioneNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_VersioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_RevisioneNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_RevisioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_RevisioneNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_RevisioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_P_Opt_MaxPairDevicesNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_MaxPairDevicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_P_Opt_MaxPairDevicesNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_P_Opt_MaxPairDevicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Cont_KeysNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Cont_KeysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Cont_KeysNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Cont_KeysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_MaxPairDevicesNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_MaxPairDevicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_MaxPairDevicesNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_MaxPairDevicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Output_NoNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Output_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Output_NoNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Output_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Dig_Input_NoNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Dig_Input_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Dig_Input_NoNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Dig_Input_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_R_Opt_Ana_Input_NoNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Ana_Input_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_R_Opt_Ana_Input_NoNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_R_Opt_Ana_Input_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_RevisioniNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_RevisioniColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_RevisioniNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_RevisioniColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_FunzionamentoNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_FunzionamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_FunzionamentoNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_FunzionamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_ConfigNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_ConfigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_ConfigNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_ConfigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSW_Obsolete_ver_from_dateNull() {
                return this.IsNull(this.tabledt_Firmware_lookupCommesseSL.SW_Obsolete_ver_from_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSW_Obsolete_ver_from_dateNull() {
                this[this.tabledt_Firmware_lookupCommesseSL.SW_Obsolete_ver_from_dateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SerialNumbers_ObsoleteRow : global::System.Data.DataRow {
            
            private SerialNumbers_ObsoleteDataTable tableSerialNumbers_Obsolete;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SerialNumbers_ObsoleteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSerialNumbers_Obsolete = ((SerialNumbers_ObsoleteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Kit {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_KitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Kit\' nella tabella \'SerialNumbers_Obsolete\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Ser_ID_Cli {
                get {
                    try {
                        return ((int)(this[this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ID_Cli\' nella tabella \'SerialNumbers_Obsolete\' è DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_DeviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device\' nella tabella \'SerialNumbers_Obsolete\' è DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_DeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Device_ID_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Device_ID_Code\' nella tabella \'SerialNumbers_Obsolet" +
                                "e\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_OfficialSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_OfficialSerial\' nella tabella \'SerialNumbers_Obsolet" +
                                "e\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ReadSerial\' nella tabella \'SerialNumbers_Obsolete\' è" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code\' nella tabella \'SerialNumbers_Obsolete\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SW_Code_Rev {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Code_Rev\' nella tabella \'SerialNumbers_Obsolete\' " +
                                "è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_SW_Std_Type {
                get {
                    try {
                        return ((bool)(this[this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SW_Std_Type\' nella tabella \'SerialNumbers_Obsolete\' " +
                                "è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_SN_prod {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_SN_prod\' nella tabella \'SerialNumbers_Obsolete\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Commessa {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_CommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Commessa\' nella tabella \'SerialNumbers_Obsolete\' è D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_CommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_DateProduction {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_DateProduction\' nella tabella \'SerialNumbers_Obsolet" +
                                "e\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Ser_Spedito {
                get {
                    return ((bool)(this[this.tableSerialNumbers_Obsolete.Ser_SpeditoColumn]));
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_Data_Spedito {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Data_Spedito\' nella tabella \'SerialNumbers_Obsolete\'" +
                                " è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Substition_ID_ReadSerial {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Substition_ID_ReadSerial\' nella tabella \'SerialNumbe" +
                                "rs_Obsolete\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ser_Note {
                get {
                    try {
                        return ((string)(this[this.tableSerialNumbers_Obsolete.Ser_NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_Note\' nella tabella \'SerialNumbers_Obsolete\' è DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Ser_ObsoleteFromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Ser_ObsoleteFromDate\' nella tabella \'SerialNumbers_Obsol" +
                                "ete\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_KitNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_KitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_KitNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_KitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ID_CliNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ID_CliNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_ID_CliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DeviceNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_DeviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DeviceNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_DeviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Device_ID_CodeNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Device_ID_CodeNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_Device_ID_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_OfficialSerialNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_OfficialSerialNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_OfficialSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ReadSerialNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_CodeNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_CodeNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SW_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Code_RevNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Code_RevNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SW_Code_RevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SW_Std_TypeNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SW_Std_TypeNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SW_Std_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_SN_prodNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_SN_prodNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_SN_prodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_CommessaNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_CommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_CommessaNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_CommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_DateProductionNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_DateProductionNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_DateProductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Data_SpeditoNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Data_SpeditoNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_Data_SpeditoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_Substition_ID_ReadSerialNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_Substition_ID_ReadSerialNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_Substition_ID_ReadSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_NoteNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_NoteNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSer_ObsoleteFromDateNull() {
                return this.IsNull(this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSer_ObsoleteFromDateNull() {
                this[this.tableSerialNumbers_Obsolete.Ser_ObsoleteFromDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SafetyPointRFIDRow : global::System.Data.DataRow {
            
            private SafetyPointRFIDDataTable tableSafetyPointRFID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SafetyPointRFIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSafetyPointRFID = ((SafetyPointRFIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Rfid_ID {
                get {
                    return ((int)(this[this.tableSafetyPointRFID.Rfid_IDColumn]));
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Rfid_UUID {
                get {
                    try {
                        return ((string)(this[this.tableSafetyPointRFID.Rfid_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Rfid_UUID\' nella tabella \'SafetyPointRFID\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Rfid_Technology {
                get {
                    try {
                        return ((string)(this[this.tableSafetyPointRFID.Rfid_TechnologyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Rfid_Technology\' nella tabella \'SafetyPointRFID\' è DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_TechnologyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Rfid_Ser_SN_Prod {
                get {
                    try {
                        return ((string)(this[this.tableSafetyPointRFID.Rfid_Ser_SN_ProdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Rfid_Ser_SN_Prod\' nella tabella \'SafetyPointRFID\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_Ser_SN_ProdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Rfid_Obsolete {
                get {
                    return ((bool)(this[this.tableSafetyPointRFID.Rfid_ObsoleteColumn]));
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_ObsoleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Rfid_Verified {
                get {
                    return ((bool)(this[this.tableSafetyPointRFID.Rfid_VerifiedColumn]));
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_VerifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Rfid_Note {
                get {
                    try {
                        return ((string)(this[this.tableSafetyPointRFID.Rfid_NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Rfid_Note\' nella tabella \'SafetyPointRFID\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Rfid_Ser_OfficialSerial {
                get {
                    try {
                        return ((string)(this[this.tableSafetyPointRFID.Rfid_Ser_OfficialSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Rfid_Ser_OfficialSerial\' nella tabella \'SafetyPointRFID\'" +
                                " è DBNull.", e);
                    }
                }
                set {
                    this[this.tableSafetyPointRFID.Rfid_Ser_OfficialSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRfid_UUIDNull() {
                return this.IsNull(this.tableSafetyPointRFID.Rfid_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRfid_UUIDNull() {
                this[this.tableSafetyPointRFID.Rfid_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRfid_TechnologyNull() {
                return this.IsNull(this.tableSafetyPointRFID.Rfid_TechnologyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRfid_TechnologyNull() {
                this[this.tableSafetyPointRFID.Rfid_TechnologyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRfid_Ser_SN_ProdNull() {
                return this.IsNull(this.tableSafetyPointRFID.Rfid_Ser_SN_ProdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRfid_Ser_SN_ProdNull() {
                this[this.tableSafetyPointRFID.Rfid_Ser_SN_ProdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRfid_NoteNull() {
                return this.IsNull(this.tableSafetyPointRFID.Rfid_NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRfid_NoteNull() {
                this[this.tableSafetyPointRFID.Rfid_NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRfid_Ser_OfficialSerialNull() {
                return this.IsNull(this.tableSafetyPointRFID.Rfid_Ser_OfficialSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRfid_Ser_OfficialSerialNull() {
                this[this.tableSafetyPointRFID.Rfid_Ser_OfficialSerialColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Fam_ProdRow : global::System.Data.DataRow {
            
            private Fam_ProdDataTable tableFam_Prod;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Fam_ProdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFam_Prod = ((Fam_ProdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableFam_Prod.IdColumn]));
                }
                set {
                    this[this.tableFam_Prod.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_Prefix {
                get {
                    try {
                        return ((string)(this[this.tableFam_Prod.Fam_PrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Fam_Prefix\' nella tabella \'Fam_Prod\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFam_Prod.Fam_PrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_Name {
                get {
                    return ((string)(this[this.tableFam_Prod.Fam_NameColumn]));
                }
                set {
                    this[this.tableFam_Prod.Fam_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_Label {
                get {
                    try {
                        return ((string)(this[this.tableFam_Prod.Fam_LabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Fam_Label\' nella tabella \'Fam_Prod\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFam_Prod.Fam_LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_Tipo {
                get {
                    try {
                        return ((string)(this[this.tableFam_Prod.Fam_TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Fam_Tipo\' nella tabella \'Fam_Prod\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFam_Prod.Fam_TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_IsDevice {
                get {
                    return ((string)(this[this.tableFam_Prod.Fam_IsDeviceColumn]));
                }
                set {
                    this[this.tableFam_Prod.Fam_IsDeviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_ToCommessa {
                get {
                    try {
                        return ((string)(this[this.tableFam_Prod.Fam_ToCommessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Fam_ToCommessa\' nella tabella \'Fam_Prod\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFam_Prod.Fam_ToCommessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int _LEN_Fam_Prefix_ {
                get {
                    try {
                        return ((int)(this[this.tableFam_Prod._LEN_Fam_Prefix_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'LEN(Fam_Prefix)\' nella tabella \'Fam_Prod\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFam_Prod._LEN_Fam_Prefix_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_ID_Identifier {
                get {
                    try {
                        return ((string)(this[this.tableFam_Prod.Fam_ID_IdentifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Fam_ID_Identifier\' nella tabella \'Fam_Prod\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tableFam_Prod.Fam_ID_IdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Fam_Alias_Progettazione {
                get {
                    try {
                        return ((string)(this[this.tableFam_Prod.Fam_Alias_ProgettazioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'Fam_Alias_Progettazione\' nella tabella \'Fam_Prod\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFam_Prod.Fam_Alias_ProgettazioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFam_PrefixNull() {
                return this.IsNull(this.tableFam_Prod.Fam_PrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFam_PrefixNull() {
                this[this.tableFam_Prod.Fam_PrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFam_LabelNull() {
                return this.IsNull(this.tableFam_Prod.Fam_LabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFam_LabelNull() {
                this[this.tableFam_Prod.Fam_LabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFam_TipoNull() {
                return this.IsNull(this.tableFam_Prod.Fam_TipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFam_TipoNull() {
                this[this.tableFam_Prod.Fam_TipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFam_ToCommessaNull() {
                return this.IsNull(this.tableFam_Prod.Fam_ToCommessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFam_ToCommessaNull() {
                this[this.tableFam_Prod.Fam_ToCommessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Is_LEN_Fam_Prefix_Null() {
                return this.IsNull(this.tableFam_Prod._LEN_Fam_Prefix_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Set_LEN_Fam_Prefix_Null() {
                this[this.tableFam_Prod._LEN_Fam_Prefix_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFam_ID_IdentifierNull() {
                return this.IsNull(this.tableFam_Prod.Fam_ID_IdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFam_ID_IdentifierNull() {
                this[this.tableFam_Prod.Fam_ID_IdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFam_Alias_ProgettazioneNull() {
                return this.IsNull(this.tableFam_Prod.Fam_Alias_ProgettazioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFam_Alias_ProgettazioneNull() {
                this[this.tableFam_Prod.Fam_Alias_ProgettazioneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dt_Tmp_ProgrammaRow : global::System.Data.DataRow {
            
            private dt_Tmp_ProgrammaDataTable tabledt_Tmp_Programma;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dt_Tmp_ProgrammaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_Tmp_Programma = ((dt_Tmp_ProgrammaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short tmp_prog_id {
                get {
                    return ((short)(this[this.tabledt_Tmp_Programma.tmp_prog_idColumn]));
                }
                set {
                    this[this.tabledt_Tmp_Programma.tmp_prog_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string tmp_prog_commessa {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Programma.tmp_prog_commessaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'tmp_prog_commessa\' nella tabella \'dt_Tmp_Programma\' è DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Programma.tmp_prog_commessaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string tmp_prog_codart_kit {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Programma.tmp_prog_codart_kitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'tmp_prog_codart_kit\' nella tabella \'dt_Tmp_Programma\' è " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Programma.tmp_prog_codart_kitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string tmp_prog_codart_item {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Programma.tmp_prog_codart_itemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'tmp_prog_codart_item\' nella tabella \'dt_Tmp_Programma\' è" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Programma.tmp_prog_codart_itemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string tmp_prog_codart_fw {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Programma.tmp_prog_codart_fwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'tmp_prog_codart_fw\' nella tabella \'dt_Tmp_Programma\' è D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Programma.tmp_prog_codart_fwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short tmp_fw_key_id {
                get {
                    try {
                        return ((short)(this[this.tabledt_Tmp_Programma.tmp_fw_key_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'tmp_fw_key_id\' nella tabella \'dt_Tmp_Programma\' è DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Programma.tmp_fw_key_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string tmp_ID_Hardware {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Programma.tmp_ID_HardwareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'tmp_ID_Hardware\' nella tabella \'dt_Tmp_Programma\' è DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Programma.tmp_ID_HardwareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Istmp_prog_commessaNull() {
                return this.IsNull(this.tabledt_Tmp_Programma.tmp_prog_commessaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Settmp_prog_commessaNull() {
                this[this.tabledt_Tmp_Programma.tmp_prog_commessaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Istmp_prog_codart_kitNull() {
                return this.IsNull(this.tabledt_Tmp_Programma.tmp_prog_codart_kitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Settmp_prog_codart_kitNull() {
                this[this.tabledt_Tmp_Programma.tmp_prog_codart_kitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Istmp_prog_codart_itemNull() {
                return this.IsNull(this.tabledt_Tmp_Programma.tmp_prog_codart_itemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Settmp_prog_codart_itemNull() {
                this[this.tabledt_Tmp_Programma.tmp_prog_codart_itemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Istmp_prog_codart_fwNull() {
                return this.IsNull(this.tabledt_Tmp_Programma.tmp_prog_codart_fwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Settmp_prog_codart_fwNull() {
                this[this.tabledt_Tmp_Programma.tmp_prog_codart_fwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Istmp_fw_key_idNull() {
                return this.IsNull(this.tabledt_Tmp_Programma.tmp_fw_key_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Settmp_fw_key_idNull() {
                this[this.tabledt_Tmp_Programma.tmp_fw_key_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Istmp_ID_HardwareNull() {
                return this.IsNull(this.tabledt_Tmp_Programma.tmp_ID_HardwareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Settmp_ID_HardwareNull() {
                this[this.tabledt_Tmp_Programma.tmp_ID_HardwareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow[] GetFirmwareRows() {
                if ((this.Table.ChildRelations["dt_Tmp_Programma_dt_Firmware"] == null)) {
                    return new FirmwareRow[0];
                }
                else {
                    return ((FirmwareRow[])(base.GetChildRows(this.Table.ChildRelations["dt_Tmp_Programma_dt_Firmware"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dt_Tmp_FwRow : global::System.Data.DataRow {
            
            private dt_Tmp_FwDataTable tabledt_Tmp_Fw;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal dt_Tmp_FwRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_Tmp_Fw = ((dt_Tmp_FwDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_codfw {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_codfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_codfw\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_codfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_pathfw {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_pathfwColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_pathfw\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_pathfwColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_prefix {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_prefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_prefix\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_prefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_tipodev {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_tipodevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_tipodev\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_tipodevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_standcust {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_standcustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_standcust\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_standcustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_versione {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_versioneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_versione\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_versioneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_freq {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_freqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_freq\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_freqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string fw_searchvers {
                get {
                    try {
                        return ((string)(this[this.tabledt_Tmp_Fw.fw_searchversColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_searchvers\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_searchversColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int fw_id {
                get {
                    try {
                        return ((int)(this[this.tabledt_Tmp_Fw.fw_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Il valore della colonna \'fw_id\' nella tabella \'dt_Tmp_Fw\' è DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_Tmp_Fw.fw_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_codfwNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_codfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_codfwNull() {
                this[this.tabledt_Tmp_Fw.fw_codfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_pathfwNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_pathfwColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_pathfwNull() {
                this[this.tabledt_Tmp_Fw.fw_pathfwColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_prefixNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_prefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_prefixNull() {
                this[this.tabledt_Tmp_Fw.fw_prefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_tipodevNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_tipodevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_tipodevNull() {
                this[this.tabledt_Tmp_Fw.fw_tipodevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_standcustNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_standcustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_standcustNull() {
                this[this.tabledt_Tmp_Fw.fw_standcustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_versioneNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_versioneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_versioneNull() {
                this[this.tabledt_Tmp_Fw.fw_versioneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_freqNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_freqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_freqNull() {
                this[this.tabledt_Tmp_Fw.fw_freqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_searchversNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_searchversColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_searchversNull() {
                this[this.tabledt_Tmp_Fw.fw_searchversColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Isfw_idNull() {
                return this.IsNull(this.tabledt_Tmp_Fw.fw_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void Setfw_idNull() {
                this[this.tabledt_Tmp_Fw.fw_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SF_LastSerialNumberRowChangeEvent : global::System.EventArgs {
            
            private SF_LastSerialNumberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_LastSerialNumberRowChangeEvent(SF_LastSerialNumberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_LastSerialNumberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FirmwareRowChangeEvent : global::System.EventArgs {
            
            private FirmwareRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRowChangeEvent(FirmwareRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FirmwareRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SF_Commesse_SLRowChangeEvent : global::System.EventArgs {
            
            private SF_Commesse_SLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRowChangeEvent(SF_Commesse_SLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_Commesse_SLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FW_ClientiRowChangeEvent : global::System.EventArgs {
            
            private FW_ClientiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FW_ClientiRowChangeEvent(FW_ClientiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FW_ClientiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SF_ArticoliToXSWRRowChangeEvent : global::System.EventArgs {
            
            private SF_ArticoliToXSWRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliToXSWRRowChangeEvent(SF_ArticoliToXSWRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliToXSWRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SF_ArticoliRowChangeEvent : global::System.EventArgs {
            
            private SF_ArticoliRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliRowChangeEvent(SF_ArticoliRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SF_ArticoliRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CommesseSL_CountRowChangeEvent : global::System.EventArgs {
            
            private CommesseSL_CountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CommesseSL_CountRowChangeEvent(CommesseSL_CountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CommesseSL_CountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SerialNumbersRowChangeEvent : global::System.EventArgs {
            
            private SerialNumbersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRowChangeEvent(SerialNumbersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class dt_Firmware_lookupCommesseSLRowChangeEvent : global::System.EventArgs {
            
            private dt_Firmware_lookupCommesseSLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Firmware_lookupCommesseSLRowChangeEvent(dt_Firmware_lookupCommesseSLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Firmware_lookupCommesseSLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SerialNumbers_ObsoleteRowChangeEvent : global::System.EventArgs {
            
            private SerialNumbers_ObsoleteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRowChangeEvent(SerialNumbers_ObsoleteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SerialNumbers_ObsoleteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SafetyPointRFIDRowChangeEvent : global::System.EventArgs {
            
            private SafetyPointRFIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SafetyPointRFIDRowChangeEvent(SafetyPointRFIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SafetyPointRFIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Fam_ProdRowChangeEvent : global::System.EventArgs {
            
            private Fam_ProdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Fam_ProdRowChangeEvent(Fam_ProdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Fam_ProdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class dt_Tmp_ProgrammaRowChangeEvent : global::System.EventArgs {
            
            private dt_Tmp_ProgrammaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_ProgrammaRowChangeEvent(dt_Tmp_ProgrammaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_ProgrammaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class dt_Tmp_FwRowChangeEvent : global::System.EventArgs {
            
            private dt_Tmp_FwRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_FwRowChangeEvent(dt_Tmp_FwRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public dt_Tmp_FwRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SmartLineProduction.ds_ProgrammazioneTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SF_LastSerialNumberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SF_LastSerialNumberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SF_LastSerialNumber";
            tableMapping.ColumnMappings.Add("Anno", "Anno");
            tableMapping.ColumnMappings.Add("LastSerialID", "LastSerialID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Anno, LastSerialID FROM SF_LastSerialNumber";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.SF_LastSerialNumberDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.SF_LastSerialNumberDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.SF_LastSerialNumberDataTable dataTable = new ds_Programmazione.SF_LastSerialNumberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FirmwareTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FirmwareTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Firmware";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("SW_Code", "SW_Code");
            tableMapping.ColumnMappings.Add("SW_TipoDevice", "SW_TipoDevice");
            tableMapping.ColumnMappings.Add("SW_Descrizione", "SW_Descrizione");
            tableMapping.ColumnMappings.Add("SW_Descrizione_EN", "SW_Descrizione_EN");
            tableMapping.ColumnMappings.Add("SW_Versione", "SW_Versione");
            tableMapping.ColumnMappings.Add("SW_Revisione", "SW_Revisione");
            tableMapping.ColumnMappings.Add("SW_Standard", "SW_Standard");
            tableMapping.ColumnMappings.Add("SW_FamProd", "SW_FamProd");
            tableMapping.ColumnMappings.Add("SW_P_Opt_RF", "SW_P_Opt_RF");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Oled", "SW_P_Opt_Use_Oled");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_EmButt", "SW_P_Opt_Use_EmButt");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Backlight", "SW_P_Opt_Use_Backlight");
            tableMapping.ColumnMappings.Add("SW_P_Opt_ShiftPage", "SW_P_Opt_ShiftPage");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Accel", "SW_P_Opt_Use_Accel");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_SP", "SW_P_Opt_Use_SP");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Buzzer", "SW_P_Opt_Use_Buzzer");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Vibracall", "SW_P_Opt_Use_Vibracall");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_LedTorch", "SW_P_Opt_Use_LedTorch");
            tableMapping.ColumnMappings.Add("SW_P_PLD", "SW_P_PLD");
            tableMapping.ColumnMappings.Add("SW_P_Opt_MaxPairDevices", "SW_P_Opt_MaxPairDevices");
            tableMapping.ColumnMappings.Add("SW_R_Opt_RF", "SW_R_Opt_RF");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Plug_Exp", "SW_R_Opt_Plug_Exp");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Plug_Ple", "SW_R_Opt_Plug_Ple");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Em_Keyb", "SW_R_Opt_Em_Keyb");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Can", "SW_R_Opt_Can");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Prop_Out", "SW_R_Opt_Prop_Out");
            tableMapping.ColumnMappings.Add("SW_R_Opt_TimeOut", "SW_R_Opt_TimeOut");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Cont_Keys", "SW_R_Opt_Cont_Keys");
            tableMapping.ColumnMappings.Add("SW_R_Opt_LockSameRow", "SW_R_Opt_LockSameRow");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Use_SP", "SW_R_Opt_Use_SP");
            tableMapping.ColumnMappings.Add("SW_R_Opt_MaxPairDevices", "SW_R_Opt_MaxPairDevices");
            tableMapping.ColumnMappings.Add("SW_R_Opt_ShiftPage", "SW_R_Opt_ShiftPage");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Output_No", "SW_R_Opt_Output_No");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Dig_Input_No", "SW_R_Opt_Dig_Input_No");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Ana_Input_No", "SW_R_Opt_Ana_Input_No");
            tableMapping.ColumnMappings.Add("SW_Revisioni", "SW_Revisioni");
            tableMapping.ColumnMappings.Add("SW_Funzionamento", "SW_Funzionamento");
            tableMapping.ColumnMappings.Add("SW_Config", "SW_Config");
            tableMapping.ColumnMappings.Add("SW_Obsolete_ver", "SW_Obsolete_ver");
            tableMapping.ColumnMappings.Add("SW_Obsolete_ver_from_date", "SW_Obsolete_ver_from_date");
            tableMapping.ColumnMappings.Add("SW_Order", "SW_Order");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Use_Radius", "SW_R_Opt_Use_Radius");
            tableMapping.ColumnMappings.Add("SW_CustomPIC", "SW_CustomPIC");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Radius", "SW_P_Opt_Use_Radius");
            tableMapping.ColumnMappings.Add("SW_P_Lock", "SW_P_Lock");
            tableMapping.ColumnMappings.Add("SW_R_Lock", "SW_R_Lock");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Firmware] WHERE (([Id] = @Original_Id) AND ([SW_Code] = @Original_SW" +
                "_Code) AND ([SW_TipoDevice] = @Original_SW_TipoDevice) AND ((@IsNull_SW_Descrizi" +
                "one = 1 AND [SW_Descrizione] IS NULL) OR ([SW_Descrizione] = @Original_SW_Descri" +
                "zione)) AND ((@IsNull_SW_Descrizione_EN = 1 AND [SW_Descrizione_EN] IS NULL) OR " +
                "([SW_Descrizione_EN] = @Original_SW_Descrizione_EN)) AND ((@IsNull_SW_Versione =" +
                " 1 AND [SW_Versione] IS NULL) OR ([SW_Versione] = @Original_SW_Versione)) AND ((" +
                "@IsNull_SW_Revisione = 1 AND [SW_Revisione] IS NULL) OR ([SW_Revisione] = @Origi" +
                "nal_SW_Revisione)) AND ([SW_Standard] = @Original_SW_Standard) AND ((@IsNull_SW_" +
                "FamProd = 1 AND [SW_FamProd] IS NULL) OR ([SW_FamProd] = @Original_SW_FamProd)) " +
                "AND ([SW_P_Opt_RF] = @Original_SW_P_Opt_RF) AND ([SW_P_Opt_Use_Oled] = @Original" +
                "_SW_P_Opt_Use_Oled) AND ([SW_P_Opt_Use_EmButt] = @Original_SW_P_Opt_Use_EmButt) " +
                "AND ([SW_P_Opt_Use_Backlight] = @Original_SW_P_Opt_Use_Backlight) AND ([SW_P_Opt" +
                "_ShiftPage] = @Original_SW_P_Opt_ShiftPage) AND ([SW_P_Opt_Use_Accel] = @Origina" +
                "l_SW_P_Opt_Use_Accel) AND ([SW_P_Opt_Use_SP] = @Original_SW_P_Opt_Use_SP) AND ([" +
                "SW_P_Opt_Use_Buzzer] = @Original_SW_P_Opt_Use_Buzzer) AND ([SW_P_Opt_Use_Vibraca" +
                "ll] = @Original_SW_P_Opt_Use_Vibracall) AND ([SW_P_Opt_Use_LedTorch] = @Original" +
                "_SW_P_Opt_Use_LedTorch) AND ([SW_P_PLD] = @Original_SW_P_PLD) AND ((@IsNull_SW_P" +
                "_Opt_MaxPairDevices = 1 AND [SW_P_Opt_MaxPairDevices] IS NULL) OR ([SW_P_Opt_Max" +
                "PairDevices] = @Original_SW_P_Opt_MaxPairDevices)) AND ([SW_R_Opt_RF] = @Origina" +
                "l_SW_R_Opt_RF) AND ([SW_R_Opt_Plug_Exp] = @Original_SW_R_Opt_Plug_Exp) AND ([SW_" +
                "R_Opt_Plug_Ple] = @Original_SW_R_Opt_Plug_Ple) AND ([SW_R_Opt_Em_Keyb] = @Origin" +
                "al_SW_R_Opt_Em_Keyb) AND ([SW_R_Opt_Can] = @Original_SW_R_Opt_Can) AND ([SW_R_Op" +
                "t_Prop_Out] = @Original_SW_R_Opt_Prop_Out) AND ([SW_R_Opt_TimeOut] = @Original_S" +
                "W_R_Opt_TimeOut) AND ((@IsNull_SW_R_Opt_Cont_Keys = 1 AND [SW_R_Opt_Cont_Keys] I" +
                "S NULL) OR ([SW_R_Opt_Cont_Keys] = @Original_SW_R_Opt_Cont_Keys)) AND ([SW_R_Opt" +
                "_LockSameRow] = @Original_SW_R_Opt_LockSameRow) AND ([SW_R_Opt_Use_SP] = @Origin" +
                "al_SW_R_Opt_Use_SP) AND ((@IsNull_SW_R_Opt_MaxPairDevices = 1 AND [SW_R_Opt_MaxP" +
                "airDevices] IS NULL) OR ([SW_R_Opt_MaxPairDevices] = @Original_SW_R_Opt_MaxPairD" +
                "evices)) AND ([SW_R_Opt_ShiftPage] = @Original_SW_R_Opt_ShiftPage) AND ((@IsNull" +
                "_SW_R_Opt_Output_No = 1 AND [SW_R_Opt_Output_No] IS NULL) OR ([SW_R_Opt_Output_N" +
                "o] = @Original_SW_R_Opt_Output_No)) AND ((@IsNull_SW_R_Opt_Dig_Input_No = 1 AND " +
                "[SW_R_Opt_Dig_Input_No] IS NULL) OR ([SW_R_Opt_Dig_Input_No] = @Original_SW_R_Op" +
                "t_Dig_Input_No)) AND ((@IsNull_SW_R_Opt_Ana_Input_No = 1 AND [SW_R_Opt_Ana_Input" +
                "_No] IS NULL) OR ([SW_R_Opt_Ana_Input_No] = @Original_SW_R_Opt_Ana_Input_No)) AN" +
                "D ([SW_Obsolete_ver] = @Original_SW_Obsolete_ver) AND ((@IsNull_SW_Obsolete_ver_" +
                "from_date = 1 AND [SW_Obsolete_ver_from_date] IS NULL) OR ([SW_Obsolete_ver_from" +
                "_date] = @Original_SW_Obsolete_ver_from_date)) AND ([SW_R_Opt_Use_Radius] = @Ori" +
                "ginal_SW_R_Opt_Use_Radius) AND ((@IsNull_SW_CustomPIC = 1 AND [SW_CustomPIC] IS " +
                "NULL) OR ([SW_CustomPIC] = @Original_SW_CustomPIC)) AND ((@IsNull_SW_P_Opt_Use_R" +
                "adius = 1 AND [SW_P_Opt_Use_Radius] IS NULL) OR ([SW_P_Opt_Use_Radius] = @Origin" +
                "al_SW_P_Opt_Use_Radius)) AND ((@IsNull_SW_P_Lock = 1 AND [SW_P_Lock] IS NULL) OR" +
                " ([SW_P_Lock] = @Original_SW_P_Lock)) AND ((@IsNull_SW_R_Lock = 1 AND [SW_R_Lock" +
                "] IS NULL) OR ([SW_R_Lock] = @Original_SW_R_Lock)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Versione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Revisione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_FamProd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_Radius", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_CustomPIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_CustomPIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_CustomPIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_CustomPIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_Use_Radius", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Radius", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Radius", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Lock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Lock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Lock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Lock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Firmware] ([SW_Code], [SW_TipoDevice], [SW_Descrizione], [SW_Descriz" +
                "ione_EN], [SW_Versione], [SW_Revisione], [SW_Standard], [SW_FamProd], [SW_P_Opt_" +
                "RF], [SW_P_Opt_Use_Oled], [SW_P_Opt_Use_EmButt], [SW_P_Opt_Use_Backlight], [SW_P" +
                "_Opt_ShiftPage], [SW_P_Opt_Use_Accel], [SW_P_Opt_Use_SP], [SW_P_Opt_Use_Buzzer]," +
                " [SW_P_Opt_Use_Vibracall], [SW_P_Opt_Use_LedTorch], [SW_P_PLD], [SW_P_Opt_MaxPai" +
                "rDevices], [SW_R_Opt_RF], [SW_R_Opt_Plug_Exp], [SW_R_Opt_Plug_Ple], [SW_R_Opt_Em" +
                "_Keyb], [SW_R_Opt_Can], [SW_R_Opt_Prop_Out], [SW_R_Opt_TimeOut], [SW_R_Opt_Cont_" +
                "Keys], [SW_R_Opt_LockSameRow], [SW_R_Opt_Use_SP], [SW_R_Opt_MaxPairDevices], [SW" +
                "_R_Opt_ShiftPage], [SW_R_Opt_Output_No], [SW_R_Opt_Dig_Input_No], [SW_R_Opt_Ana_" +
                "Input_No], [SW_Revisioni], [SW_Funzionamento], [SW_Config], [SW_Obsolete_ver], [" +
                "SW_Obsolete_ver_from_date], [SW_R_Opt_Use_Radius], [SW_CustomPIC], [SW_P_Opt_Use" +
                "_Radius], [SW_P_Lock], [SW_R_Lock]) VALUES (@SW_Code, @SW_TipoDevice, @SW_Descri" +
                "zione, @SW_Descrizione_EN, @SW_Versione, @SW_Revisione, @SW_Standard, @SW_FamPro" +
                "d, @SW_P_Opt_RF, @SW_P_Opt_Use_Oled, @SW_P_Opt_Use_EmButt, @SW_P_Opt_Use_Backlig" +
                "ht, @SW_P_Opt_ShiftPage, @SW_P_Opt_Use_Accel, @SW_P_Opt_Use_SP, @SW_P_Opt_Use_Bu" +
                "zzer, @SW_P_Opt_Use_Vibracall, @SW_P_Opt_Use_LedTorch, @SW_P_PLD, @SW_P_Opt_MaxP" +
                "airDevices, @SW_R_Opt_RF, @SW_R_Opt_Plug_Exp, @SW_R_Opt_Plug_Ple, @SW_R_Opt_Em_K" +
                "eyb, @SW_R_Opt_Can, @SW_R_Opt_Prop_Out, @SW_R_Opt_TimeOut, @SW_R_Opt_Cont_Keys, " +
                "@SW_R_Opt_LockSameRow, @SW_R_Opt_Use_SP, @SW_R_Opt_MaxPairDevices, @SW_R_Opt_Shi" +
                "ftPage, @SW_R_Opt_Output_No, @SW_R_Opt_Dig_Input_No, @SW_R_Opt_Ana_Input_No, @SW" +
                "_Revisioni, @SW_Funzionamento, @SW_Config, @SW_Obsolete_ver, @SW_Obsolete_ver_fr" +
                "om_date, @SW_R_Opt_Use_Radius, @SW_CustomPIC, @SW_P_Opt_Use_Radius, @SW_P_Lock, " +
                "@SW_R_Lock);\r\nSELECT Id, SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_" +
                "EN, SW_Versione, SW_Revisione, SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Us" +
                "e_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Op" +
                "t_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_" +
                "Opt_Use_LedTorch, SW_P_PLD, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_" +
                "Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_" +
                "Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt" +
                "_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, " +
                "SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ve" +
                "r, SW_Obsolete_ver_from_date, SUBSTRING(SW_Code, 7, 6) AS SW_Order, SW_R_Opt_Use" +
                "_Radius, SW_CustomPIC, SW_P_Opt_Use_Radius, SW_P_Lock, SW_R_Lock FROM Firmware W" +
                "HERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisioni", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisioni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Funzionamento", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Funzionamento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Config", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Config", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_Radius", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_CustomPIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_CustomPIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Radius", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Lock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Lock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Firmware] SET [SW_Code] = @SW_Code, [SW_TipoDevice] = @SW_TipoDevice, [SW" +
                "_Descrizione] = @SW_Descrizione, [SW_Descrizione_EN] = @SW_Descrizione_EN, [SW_V" +
                "ersione] = @SW_Versione, [SW_Revisione] = @SW_Revisione, [SW_Standard] = @SW_Sta" +
                "ndard, [SW_FamProd] = @SW_FamProd, [SW_P_Opt_RF] = @SW_P_Opt_RF, [SW_P_Opt_Use_O" +
                "led] = @SW_P_Opt_Use_Oled, [SW_P_Opt_Use_EmButt] = @SW_P_Opt_Use_EmButt, [SW_P_O" +
                "pt_Use_Backlight] = @SW_P_Opt_Use_Backlight, [SW_P_Opt_ShiftPage] = @SW_P_Opt_Sh" +
                "iftPage, [SW_P_Opt_Use_Accel] = @SW_P_Opt_Use_Accel, [SW_P_Opt_Use_SP] = @SW_P_O" +
                "pt_Use_SP, [SW_P_Opt_Use_Buzzer] = @SW_P_Opt_Use_Buzzer, [SW_P_Opt_Use_Vibracall" +
                "] = @SW_P_Opt_Use_Vibracall, [SW_P_Opt_Use_LedTorch] = @SW_P_Opt_Use_LedTorch, [" +
                "SW_P_PLD] = @SW_P_PLD, [SW_P_Opt_MaxPairDevices] = @SW_P_Opt_MaxPairDevices, [SW" +
                "_R_Opt_RF] = @SW_R_Opt_RF, [SW_R_Opt_Plug_Exp] = @SW_R_Opt_Plug_Exp, [SW_R_Opt_P" +
                "lug_Ple] = @SW_R_Opt_Plug_Ple, [SW_R_Opt_Em_Keyb] = @SW_R_Opt_Em_Keyb, [SW_R_Opt" +
                "_Can] = @SW_R_Opt_Can, [SW_R_Opt_Prop_Out] = @SW_R_Opt_Prop_Out, [SW_R_Opt_TimeO" +
                "ut] = @SW_R_Opt_TimeOut, [SW_R_Opt_Cont_Keys] = @SW_R_Opt_Cont_Keys, [SW_R_Opt_L" +
                "ockSameRow] = @SW_R_Opt_LockSameRow, [SW_R_Opt_Use_SP] = @SW_R_Opt_Use_SP, [SW_R" +
                "_Opt_MaxPairDevices] = @SW_R_Opt_MaxPairDevices, [SW_R_Opt_ShiftPage] = @SW_R_Op" +
                "t_ShiftPage, [SW_R_Opt_Output_No] = @SW_R_Opt_Output_No, [SW_R_Opt_Dig_Input_No]" +
                " = @SW_R_Opt_Dig_Input_No, [SW_R_Opt_Ana_Input_No] = @SW_R_Opt_Ana_Input_No, [SW" +
                "_Revisioni] = @SW_Revisioni, [SW_Funzionamento] = @SW_Funzionamento, [SW_Config]" +
                " = @SW_Config, [SW_Obsolete_ver] = @SW_Obsolete_ver, [SW_Obsolete_ver_from_date]" +
                " = @SW_Obsolete_ver_from_date, [SW_R_Opt_Use_Radius] = @SW_R_Opt_Use_Radius, [SW" +
                "_CustomPIC] = @SW_CustomPIC, [SW_P_Opt_Use_Radius] = @SW_P_Opt_Use_Radius, [SW_P" +
                "_Lock] = @SW_P_Lock, [SW_R_Lock] = @SW_R_Lock WHERE (([Id] = @Original_Id) AND (" +
                "[SW_Code] = @Original_SW_Code) AND ([SW_TipoDevice] = @Original_SW_TipoDevice) A" +
                "ND ((@IsNull_SW_Descrizione = 1 AND [SW_Descrizione] IS NULL) OR ([SW_Descrizion" +
                "e] = @Original_SW_Descrizione)) AND ((@IsNull_SW_Descrizione_EN = 1 AND [SW_Desc" +
                "rizione_EN] IS NULL) OR ([SW_Descrizione_EN] = @Original_SW_Descrizione_EN)) AND" +
                " ((@IsNull_SW_Versione = 1 AND [SW_Versione] IS NULL) OR ([SW_Versione] = @Origi" +
                "nal_SW_Versione)) AND ((@IsNull_SW_Revisione = 1 AND [SW_Revisione] IS NULL) OR " +
                "([SW_Revisione] = @Original_SW_Revisione)) AND ([SW_Standard] = @Original_SW_Sta" +
                "ndard) AND ((@IsNull_SW_FamProd = 1 AND [SW_FamProd] IS NULL) OR ([SW_FamProd] =" +
                " @Original_SW_FamProd)) AND ([SW_P_Opt_RF] = @Original_SW_P_Opt_RF) AND ([SW_P_O" +
                "pt_Use_Oled] = @Original_SW_P_Opt_Use_Oled) AND ([SW_P_Opt_Use_EmButt] = @Origin" +
                "al_SW_P_Opt_Use_EmButt) AND ([SW_P_Opt_Use_Backlight] = @Original_SW_P_Opt_Use_B" +
                "acklight) AND ([SW_P_Opt_ShiftPage] = @Original_SW_P_Opt_ShiftPage) AND ([SW_P_O" +
                "pt_Use_Accel] = @Original_SW_P_Opt_Use_Accel) AND ([SW_P_Opt_Use_SP] = @Original" +
                "_SW_P_Opt_Use_SP) AND ([SW_P_Opt_Use_Buzzer] = @Original_SW_P_Opt_Use_Buzzer) AN" +
                "D ([SW_P_Opt_Use_Vibracall] = @Original_SW_P_Opt_Use_Vibracall) AND ([SW_P_Opt_U" +
                "se_LedTorch] = @Original_SW_P_Opt_Use_LedTorch) AND ([SW_P_PLD] = @Original_SW_P" +
                "_PLD) AND ((@IsNull_SW_P_Opt_MaxPairDevices = 1 AND [SW_P_Opt_MaxPairDevices] IS" +
                " NULL) OR ([SW_P_Opt_MaxPairDevices] = @Original_SW_P_Opt_MaxPairDevices)) AND (" +
                "[SW_R_Opt_RF] = @Original_SW_R_Opt_RF) AND ([SW_R_Opt_Plug_Exp] = @Original_SW_R" +
                "_Opt_Plug_Exp) AND ([SW_R_Opt_Plug_Ple] = @Original_SW_R_Opt_Plug_Ple) AND ([SW_" +
                "R_Opt_Em_Keyb] = @Original_SW_R_Opt_Em_Keyb) AND ([SW_R_Opt_Can] = @Original_SW_" +
                "R_Opt_Can) AND ([SW_R_Opt_Prop_Out] = @Original_SW_R_Opt_Prop_Out) AND ([SW_R_Op" +
                "t_TimeOut] = @Original_SW_R_Opt_TimeOut) AND ((@IsNull_SW_R_Opt_Cont_Keys = 1 AN" +
                "D [SW_R_Opt_Cont_Keys] IS NULL) OR ([SW_R_Opt_Cont_Keys] = @Original_SW_R_Opt_Co" +
                "nt_Keys)) AND ([SW_R_Opt_LockSameRow] = @Original_SW_R_Opt_LockSameRow) AND ([SW" +
                "_R_Opt_Use_SP] = @Original_SW_R_Opt_Use_SP) AND ((@IsNull_SW_R_Opt_MaxPairDevice" +
                "s = 1 AND [SW_R_Opt_MaxPairDevices] IS NULL) OR ([SW_R_Opt_MaxPairDevices] = @Or" +
                "iginal_SW_R_Opt_MaxPairDevices)) AND ([SW_R_Opt_ShiftPage] = @Original_SW_R_Opt_" +
                "ShiftPage) AND ((@IsNull_SW_R_Opt_Output_No = 1 AND [SW_R_Opt_Output_No] IS NULL" +
                ") OR ([SW_R_Opt_Output_No] = @Original_SW_R_Opt_Output_No)) AND ((@IsNull_SW_R_O" +
                "pt_Dig_Input_No = 1 AND [SW_R_Opt_Dig_Input_No] IS NULL) OR ([SW_R_Opt_Dig_Input" +
                "_No] = @Original_SW_R_Opt_Dig_Input_No)) AND ((@IsNull_SW_R_Opt_Ana_Input_No = 1" +
                " AND [SW_R_Opt_Ana_Input_No] IS NULL) OR ([SW_R_Opt_Ana_Input_No] = @Original_SW" +
                "_R_Opt_Ana_Input_No)) AND ([SW_Obsolete_ver] = @Original_SW_Obsolete_ver) AND ((" +
                "@IsNull_SW_Obsolete_ver_from_date = 1 AND [SW_Obsolete_ver_from_date] IS NULL) O" +
                "R ([SW_Obsolete_ver_from_date] = @Original_SW_Obsolete_ver_from_date)) AND ([SW_" +
                "R_Opt_Use_Radius] = @Original_SW_R_Opt_Use_Radius) AND ((@IsNull_SW_CustomPIC = " +
                "1 AND [SW_CustomPIC] IS NULL) OR ([SW_CustomPIC] = @Original_SW_CustomPIC)) AND " +
                "((@IsNull_SW_P_Opt_Use_Radius = 1 AND [SW_P_Opt_Use_Radius] IS NULL) OR ([SW_P_O" +
                "pt_Use_Radius] = @Original_SW_P_Opt_Use_Radius)) AND ((@IsNull_SW_P_Lock = 1 AND" +
                " [SW_P_Lock] IS NULL) OR ([SW_P_Lock] = @Original_SW_P_Lock)) AND ((@IsNull_SW_R" +
                "_Lock = 1 AND [SW_R_Lock] IS NULL) OR ([SW_R_Lock] = @Original_SW_R_Lock)));\r\nSE" +
                "LECT Id, SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione," +
                " SW_Revisione, SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt" +
                "_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_" +
                "P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch" +
                ", SW_P_PLD, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, SW_R_Opt_Pl" +
                "ug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_" +
                "R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxPairDevices," +
                " SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Inp" +
                "ut_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW_Obsolete_v" +
                "er_from_date, SUBSTRING(SW_Code, 7, 6) AS SW_Order, SW_R_Opt_Use_Radius, SW_Cust" +
                "omPIC, SW_P_Opt_Use_Radius, SW_P_Lock, SW_R_Lock FROM Firmware WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisioni", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisioni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Funzionamento", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Funzionamento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Config", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Config", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_Radius", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_CustomPIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_CustomPIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Radius", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Lock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Lock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Versione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Revisione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_FamProd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_FamProd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_FamProd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_PLD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_PLD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_Radius", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_CustomPIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_CustomPIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_CustomPIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_CustomPIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_Use_Radius", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Radius", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Radius", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Radius", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Lock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Lock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Lock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Lock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Lock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Id, SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, 
                         SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch, SW_P_PLD, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, 
                         SW_R_Opt_Plug_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, 
                         SW_R_Opt_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, 
                         SW_Obsolete_ver_from_date, SUBSTRING(SW_Code, 7, 6) AS SW_Order, SW_R_Opt_Use_Radius, SW_CustomPIC, SW_P_Opt_Use_Radius, SW_P_Lock, SW_R_Lock
FROM            Firmware
WHERE        (SW_Obsolete_ver = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        SW_CustomPIC\r\nFROM            Firmware\r\nWHERE        (SW_Code = @SW" +
                "_Code) and (SW_Obsolete_ver =0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.FirmwareDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.FirmwareDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.FirmwareDataTable dataTable = new ds_Programmazione.FirmwareDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione.FirmwareDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione dataSet) {
            return this.Adapter.Update(dataSet, "Firmware");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_FamProd, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    bool Original_SW_P_PLD, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date, 
                    bool Original_SW_R_Opt_Use_Radius, 
                    global::System.Nullable<bool> Original_SW_CustomPIC, 
                    global::System.Nullable<bool> Original_SW_P_Opt_Use_Radius, 
                    global::System.Nullable<int> Original_SW_P_Lock, 
                    global::System.Nullable<int> Original_SW_R_Lock) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_SW_Code == null)) {
                throw new global::System.ArgumentNullException("Original_SW_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SW_Code));
            }
            if ((Original_SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("Original_SW_TipoDevice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SW_TipoDevice));
            }
            if ((Original_SW_Descrizione == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SW_Descrizione));
            }
            if ((Original_SW_Descrizione_EN == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SW_Descrizione_EN));
            }
            if ((Original_SW_Versione == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SW_Versione));
            }
            if ((Original_SW_Revisione == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SW_Revisione));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_SW_Standard));
            if ((Original_SW_FamProd == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_SW_FamProd));
            }
            if ((Original_SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_P_Opt_RF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SW_P_Opt_RF));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_SW_P_Opt_Use_Oled));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_SW_P_Opt_Use_EmButt));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_SW_P_Opt_Use_Backlight));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_SW_P_Opt_ShiftPage));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_SW_P_Opt_Use_Accel));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_SW_P_Opt_Use_SP));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_SW_P_Opt_Use_Buzzer));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_SW_P_Opt_Use_Vibracall));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((bool)(Original_SW_P_Opt_Use_LedTorch));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_SW_P_PLD));
            if ((Original_SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_RF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_SW_R_Opt_RF));
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_SW_R_Opt_Plug_Exp));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_SW_R_Opt_Plug_Ple));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_SW_R_Opt_Em_Keyb));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((bool)(Original_SW_R_Opt_Can));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_SW_R_Opt_Prop_Out));
            if ((Original_SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_SW_R_Opt_TimeOut));
            }
            if ((Original_SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_SW_R_Opt_LockSameRow));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((bool)(Original_SW_R_Opt_Use_SP));
            if ((Original_SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_SW_R_Opt_ShiftPage));
            if ((Original_SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[47].Value = ((bool)(Original_SW_Obsolete_ver));
            if ((Original_SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((System.DateTime)(Original_SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[50].Value = ((bool)(Original_SW_R_Opt_Use_Radius));
            if ((Original_SW_CustomPIC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((bool)(Original_SW_CustomPIC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_P_Opt_Use_Radius.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((bool)(Original_SW_P_Opt_Use_Radius.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_P_Lock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_SW_P_Lock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Lock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_SW_R_Lock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_FamProd, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    bool SW_P_PLD, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date, 
                    bool SW_R_Opt_Use_Radius, 
                    global::System.Nullable<bool> SW_CustomPIC, 
                    global::System.Nullable<bool> SW_P_Opt_Use_Radius, 
                    global::System.Nullable<int> SW_P_Lock, 
                    global::System.Nullable<int> SW_R_Lock) {
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            if ((SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("SW_TipoDevice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SW_TipoDevice));
            }
            if ((SW_Descrizione == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SW_Descrizione));
            }
            if ((SW_Descrizione_EN == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SW_Descrizione_EN));
            }
            if ((SW_Versione == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SW_Versione));
            }
            if ((SW_Revisione == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SW_Revisione));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(SW_Standard));
            if ((SW_FamProd == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SW_FamProd));
            }
            if ((SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_P_Opt_RF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SW_P_Opt_RF));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(SW_P_Opt_Use_Oled));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(SW_P_Opt_Use_EmButt));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(SW_P_Opt_Use_Backlight));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(SW_P_Opt_ShiftPage));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(SW_P_Opt_Use_Accel));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(SW_P_Opt_Use_SP));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(SW_P_Opt_Use_Buzzer));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(SW_P_Opt_Use_Vibracall));
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(SW_P_Opt_Use_LedTorch));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(SW_P_PLD));
            if ((SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_RF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(SW_R_Opt_RF));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(SW_R_Opt_Plug_Exp));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(SW_R_Opt_Plug_Ple));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(SW_R_Opt_Em_Keyb));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(SW_R_Opt_Can));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(SW_R_Opt_Prop_Out));
            if ((SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(SW_R_Opt_TimeOut));
            }
            if ((SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(SW_R_Opt_LockSameRow));
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(SW_R_Opt_Use_SP));
            if ((SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(SW_R_Opt_ShiftPage));
            if ((SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SW_Revisioni == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SW_Revisioni));
            }
            if ((SW_Funzionamento == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(SW_Funzionamento));
            }
            if ((SW_Config == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(SW_Config));
            }
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(SW_Obsolete_ver));
            if ((SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((System.DateTime)(SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(SW_R_Opt_Use_Radius));
            if ((SW_CustomPIC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(SW_CustomPIC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((SW_P_Opt_Use_Radius.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(SW_P_Opt_Use_Radius.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((SW_P_Lock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((int)(SW_P_Lock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Lock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(SW_R_Lock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_FamProd, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    bool SW_P_PLD, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date, 
                    bool SW_R_Opt_Use_Radius, 
                    global::System.Nullable<bool> SW_CustomPIC, 
                    global::System.Nullable<bool> SW_P_Opt_Use_Radius, 
                    global::System.Nullable<int> SW_P_Lock, 
                    global::System.Nullable<int> SW_R_Lock, 
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_FamProd, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    bool Original_SW_P_PLD, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date, 
                    bool Original_SW_R_Opt_Use_Radius, 
                    global::System.Nullable<bool> Original_SW_CustomPIC, 
                    global::System.Nullable<bool> Original_SW_P_Opt_Use_Radius, 
                    global::System.Nullable<int> Original_SW_P_Lock, 
                    global::System.Nullable<int> Original_SW_R_Lock, 
                    int Id) {
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            if ((SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("SW_TipoDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SW_TipoDevice));
            }
            if ((SW_Descrizione == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SW_Descrizione));
            }
            if ((SW_Descrizione_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SW_Descrizione_EN));
            }
            if ((SW_Versione == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SW_Versione));
            }
            if ((SW_Revisione == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SW_Revisione));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(SW_Standard));
            if ((SW_FamProd == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SW_FamProd));
            }
            if ((SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_P_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SW_P_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(SW_P_Opt_Use_Oled));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(SW_P_Opt_Use_EmButt));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(SW_P_Opt_Use_Backlight));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(SW_P_Opt_ShiftPage));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(SW_P_Opt_Use_Accel));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(SW_P_Opt_Use_SP));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(SW_P_Opt_Use_Buzzer));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(SW_P_Opt_Use_Vibracall));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(SW_P_Opt_Use_LedTorch));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(SW_P_PLD));
            if ((SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(SW_R_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(SW_R_Opt_Plug_Exp));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(SW_R_Opt_Plug_Ple));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(SW_R_Opt_Em_Keyb));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(SW_R_Opt_Can));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(SW_R_Opt_Prop_Out));
            if ((SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(SW_R_Opt_TimeOut));
            }
            if ((SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(SW_R_Opt_LockSameRow));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(SW_R_Opt_Use_SP));
            if ((SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(SW_R_Opt_ShiftPage));
            if ((SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SW_Revisioni == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SW_Revisioni));
            }
            if ((SW_Funzionamento == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(SW_Funzionamento));
            }
            if ((SW_Config == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(SW_Config));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(SW_Obsolete_ver));
            if ((SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(SW_R_Opt_Use_Radius));
            if ((SW_CustomPIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(SW_CustomPIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((SW_P_Opt_Use_Radius.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(SW_P_Opt_Use_Radius.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((SW_P_Lock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(SW_P_Lock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Lock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(SW_R_Lock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_Id));
            if ((Original_SW_Code == null)) {
                throw new global::System.ArgumentNullException("Original_SW_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_SW_Code));
            }
            if ((Original_SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("Original_SW_TipoDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_SW_TipoDevice));
            }
            if ((Original_SW_Descrizione == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_SW_Descrizione));
            }
            if ((Original_SW_Descrizione_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_SW_Descrizione_EN));
            }
            if ((Original_SW_Versione == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_SW_Versione));
            }
            if ((Original_SW_Revisione == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_SW_Revisione));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_SW_Standard));
            if ((Original_SW_FamProd == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_SW_FamProd));
            }
            if ((Original_SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_P_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_SW_P_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(Original_SW_P_Opt_Use_Oled));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_SW_P_Opt_Use_EmButt));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_SW_P_Opt_Use_Backlight));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Original_SW_P_Opt_ShiftPage));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_SW_P_Opt_Use_Accel));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_SW_P_Opt_Use_SP));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_SW_P_Opt_Use_Buzzer));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_SW_P_Opt_Use_Vibracall));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(Original_SW_P_Opt_Use_LedTorch));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_SW_P_PLD));
            if ((Original_SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_SW_R_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_SW_R_Opt_Plug_Exp));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(Original_SW_R_Opt_Plug_Ple));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_SW_R_Opt_Em_Keyb));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((bool)(Original_SW_R_Opt_Can));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(Original_SW_R_Opt_Prop_Out));
            if ((Original_SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_SW_R_Opt_TimeOut));
            }
            if ((Original_SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[81].Value = ((bool)(Original_SW_R_Opt_LockSameRow));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(Original_SW_R_Opt_Use_SP));
            if ((Original_SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(Original_SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((bool)(Original_SW_R_Opt_ShiftPage));
            if ((Original_SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[92].Value = ((bool)(Original_SW_Obsolete_ver));
            if ((Original_SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((System.DateTime)(Original_SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[95].Value = ((bool)(Original_SW_R_Opt_Use_Radius));
            if ((Original_SW_CustomPIC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(Original_SW_CustomPIC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_P_Opt_Use_Radius.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((bool)(Original_SW_P_Opt_Use_Radius.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_P_Lock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_SW_P_Lock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Lock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_SW_R_Lock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[104].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_FamProd, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    bool SW_P_PLD, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date, 
                    bool SW_R_Opt_Use_Radius, 
                    global::System.Nullable<bool> SW_CustomPIC, 
                    global::System.Nullable<bool> SW_P_Opt_Use_Radius, 
                    global::System.Nullable<int> SW_P_Lock, 
                    global::System.Nullable<int> SW_R_Lock, 
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_FamProd, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    bool Original_SW_P_PLD, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date, 
                    bool Original_SW_R_Opt_Use_Radius, 
                    global::System.Nullable<bool> Original_SW_CustomPIC, 
                    global::System.Nullable<bool> Original_SW_P_Opt_Use_Radius, 
                    global::System.Nullable<int> Original_SW_P_Lock, 
                    global::System.Nullable<int> Original_SW_R_Lock) {
            return this.Update(SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_FamProd, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch, SW_P_PLD, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW_Obsolete_ver_from_date, SW_R_Opt_Use_Radius, SW_CustomPIC, SW_P_Opt_Use_Radius, SW_P_Lock, SW_R_Lock, Original_Id, Original_SW_Code, Original_SW_TipoDevice, Original_SW_Descrizione, Original_SW_Descrizione_EN, Original_SW_Versione, Original_SW_Revisione, Original_SW_Standard, Original_SW_FamProd, Original_SW_P_Opt_RF, Original_SW_P_Opt_Use_Oled, Original_SW_P_Opt_Use_EmButt, Original_SW_P_Opt_Use_Backlight, Original_SW_P_Opt_ShiftPage, Original_SW_P_Opt_Use_Accel, Original_SW_P_Opt_Use_SP, Original_SW_P_Opt_Use_Buzzer, Original_SW_P_Opt_Use_Vibracall, Original_SW_P_Opt_Use_LedTorch, Original_SW_P_PLD, Original_SW_P_Opt_MaxPairDevices, Original_SW_R_Opt_RF, Original_SW_R_Opt_Plug_Exp, Original_SW_R_Opt_Plug_Ple, Original_SW_R_Opt_Em_Keyb, Original_SW_R_Opt_Can, Original_SW_R_Opt_Prop_Out, Original_SW_R_Opt_TimeOut, Original_SW_R_Opt_Cont_Keys, Original_SW_R_Opt_LockSameRow, Original_SW_R_Opt_Use_SP, Original_SW_R_Opt_MaxPairDevices, Original_SW_R_Opt_ShiftPage, Original_SW_R_Opt_Output_No, Original_SW_R_Opt_Dig_Input_No, Original_SW_R_Opt_Ana_Input_No, Original_SW_Obsolete_ver, Original_SW_Obsolete_ver_from_date, Original_SW_R_Opt_Use_Radius, Original_SW_CustomPIC, Original_SW_P_Opt_Use_Radius, Original_SW_P_Lock, Original_SW_R_Lock, Original_Id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object IsCustomPic(string SW_Code) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                command.Parameters[0].Value = ((string)(SW_Code));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SF_Commesse_SLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SF_Commesse_SLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SF_Commesse_SL";
            tableMapping.ColumnMappings.Add("TipoOrdine", "TipoOrdine");
            tableMapping.ColumnMappings.Add("CommessaLong", "CommessaLong");
            tableMapping.ColumnMappings.Add("CommessaShort", "CommessaShort");
            tableMapping.ColumnMappings.Add("Data_Ordine", "Data_Ordine");
            tableMapping.ColumnMappings.Add("Data_Conferma_Consegna", "Data_Conferma_Consegna");
            tableMapping.ColumnMappings.Add("Numero_Ordine", "Numero_Ordine");
            tableMapping.ColumnMappings.Add("Numero_Riga", "Numero_Riga");
            tableMapping.ColumnMappings.Add("CodAnagrafico", "CodAnagrafico");
            tableMapping.ColumnMappings.Add("Ragione_Sociale", "Ragione_Sociale");
            tableMapping.ColumnMappings.Add("Art_Commessa", "Art_Commessa");
            tableMapping.ColumnMappings.Add("UM", "UM");
            tableMapping.ColumnMappings.Add("Qta_Ordinata", "Qta_Ordinata");
            tableMapping.ColumnMappings.Add("Qta_da_Evadere", "Qta_da_Evadere");
            tableMapping.ColumnMappings.Add("StatoCommessa", "StatoCommessa");
            tableMapping.ColumnMappings.Add("TipoRiga", "TipoRiga");
            tableMapping.ColumnMappings.Add("Is_Kit", "Is_Kit");
            tableMapping.ColumnMappings.Add("Is_SWR_P", "Is_SWR_P");
            tableMapping.ColumnMappings.Add("Is_SWR_R", "Is_SWR_R");
            tableMapping.ColumnMappings.Add("DataFineValidita", "DataFineValidita");
            tableMapping.ColumnMappings.Add("Device", "Device");
            tableMapping.ColumnMappings.Add("SW_Device", "SW_Device");
            tableMapping.ColumnMappings.Add("Qta_Evasa", "Qta_Evasa");
            tableMapping.ColumnMappings.Add("Ser_Commessa", "Ser_Commessa");
            tableMapping.ColumnMappings.Add("Ser_Kit", "Ser_Kit");
            tableMapping.ColumnMappings.Add("Ser_Device", "Ser_Device");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        SF_Commesse_SL.TipoOrdine, SF_Commesse_SL.CommessaLong, SF_Commesse_SL.CommessaShort, SF_Commesse_SL.Data_Ordine, SF_Commesse_SL.Data_Conferma_Consegna, SF_Commesse_SL.Numero_Ordine, 
                         SF_Commesse_SL.Numero_Riga, SF_Commesse_SL.CodAnagrafico, SF_Commesse_SL.Ragione_Sociale, SF_Commesse_SL.Art_Commessa, SF_Commesse_SL.UM, SF_Commesse_SL.Qta_Ordinata, 
                         SF_Commesse_SL.Qta_da_Evadere, SF_Commesse_SL.StatoCommessa, SF_Commesse_SL.TipoRiga, SF_Commesse_SL.Is_Kit, SF_Commesse_SL.Is_SWR_P, SF_Commesse_SL.Is_SWR_R, 
                         SF_Commesse_SL.DataFineValidita, SF_Commesse_SL.Device, SF_Commesse_SL.SW_Device, CASE WHEN CommesseSL_Count.QtaEvasa IS NULL THEN 0 ELSE CommesseSL_Count.QtaEvasa END AS Qta_Evasa, 
                         CommesseSL_Count.Ser_Commessa, CommesseSL_Count.Ser_Kit, CommesseSL_Count.Ser_Device
FROM            SF_Commesse_SL LEFT OUTER JOIN
                         CommesseSL_Count ON SF_Commesse_SL.CommessaLong = CommesseSL_Count.Ser_Commessa AND SF_Commesse_SL.Art_Commessa = CommesseSL_Count.Ser_Kit AND 
                         SF_Commesse_SL.Device = CommesseSL_Count.Ser_Device";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        SF_Commesse_SL.TipoOrdine, SF_Commesse_SL.CommessaLong, SF_Commesse_SL.CommessaShort, SF_Commesse_SL.Data_Ordine, SF_Commesse_SL.Data_Conferma_Consegna, SF_Commesse_SL.Numero_Ordine, 
                         SF_Commesse_SL.Numero_Riga, SF_Commesse_SL.CodAnagrafico, SF_Commesse_SL.Ragione_Sociale, SF_Commesse_SL.Art_Commessa, SF_Commesse_SL.UM, SF_Commesse_SL.Qta_Ordinata, 
                         SF_Commesse_SL.Qta_da_Evadere, SF_Commesse_SL.StatoCommessa, SF_Commesse_SL.TipoRiga, SF_Commesse_SL.Is_Kit, SF_Commesse_SL.Is_SWR_P, SF_Commesse_SL.Is_SWR_R, 
                         SF_Commesse_SL.DataFineValidita, SF_Commesse_SL.Device, SF_Commesse_SL.SW_Device, CASE WHEN CommesseSL_Count.QtaEvasa IS NULL THEN 0 ELSE CommesseSL_Count.QtaEvasa END AS Qta_Evasa, 
                         CommesseSL_Count.Ser_Commessa, CommesseSL_Count.Ser_Kit, CommesseSL_Count.Ser_Device
FROM            SF_Commesse_SL LEFT OUTER JOIN
                         CommesseSL_Count ON SF_Commesse_SL.CommessaLong = CommesseSL_Count.Ser_Commessa AND SF_Commesse_SL.Art_Commessa = CommesseSL_Count.Ser_Kit AND 
                         SF_Commesse_SL.Device = CommesseSL_Count.Ser_Device
WHERE        (SF_Commesse_SL.Is_Kit = '1') OR
                         (SF_Commesse_SL.Is_SWR_P = '1') OR
                         (SF_Commesse_SL.Is_SWR_R = '1')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.SF_Commesse_SLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.SF_Commesse_SLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.SF_Commesse_SLDataTable dataTable = new ds_Programmazione.SF_Commesse_SLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_CommessePack(ds_Programmazione.SF_Commesse_SLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ds_Programmazione.SF_Commesse_SLDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            ds_Programmazione.SF_Commesse_SLDataTable dataTable = new ds_Programmazione.SF_Commesse_SLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FW_ClientiTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FW_ClientiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FW_Clienti";
            tableMapping.ColumnMappings.Add("Cod_Nominativo", "Cod_Nominativo");
            tableMapping.ColumnMappings.Add("SW_Code", "SW_Code");
            tableMapping.ColumnMappings.Add("SW_Des1", "SW_Des1");
            tableMapping.ColumnMappings.Add("SW_Des2", "SW_Des2");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FW_Clienti] ([Cod_Nominativo], [SW_Code], [SW_Des1], [SW_Des2]" +
                ") VALUES (@Cod_Nominativo, @SW_Code, @SW_Des1, @SW_Des2)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_Nominativo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_Nominativo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Des1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Des1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Des2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Des2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Cod_Nominativo, SW_Code, SW_Des1, SW_Des2 FROM dbo.FW_Clienti";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.FW_ClientiDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.FW_ClientiDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.FW_ClientiDataTable dataTable = new ds_Programmazione.FW_ClientiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione.FW_ClientiDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione dataSet) {
            return this.Adapter.Update(dataSet, "FW_Clienti");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Cod_Nominativo, string SW_Code, string SW_Des1, string SW_Des2) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Cod_Nominativo));
            if ((SW_Code == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SW_Code));
            }
            if ((SW_Des1 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SW_Des1));
            }
            if ((SW_Des2 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SW_Des2));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SF_ArticoliToXSWRTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SF_ArticoliToXSWRTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SF_ArticoliToXSWR";
            tableMapping.ColumnMappings.Add("ArtCommessa", "ArtCommessa");
            tableMapping.ColumnMappings.Add("CodiceFw", "CodiceFw");
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione");
            tableMapping.ColumnMappings.Add("DescrizioneEstesa", "DescrizioneEstesa");
            tableMapping.ColumnMappings.Add("DataInizioValidita", "DataInizioValidita");
            tableMapping.ColumnMappings.Add("DataFineValidita", "DataFineValidita");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ArtCommessa, CodiceFw, Descrizione, DescrizioneEstesa, DataInizioValidita," +
                " DataFineValidita FROM dbo.SF_ArticoliToXSWR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.SF_ArticoliToXSWRDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.SF_ArticoliToXSWRDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.SF_ArticoliToXSWRDataTable dataTable = new ds_Programmazione.SF_ArticoliToXSWRDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SF_ArticoliTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SF_ArticoliTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SF_Articoli";
            tableMapping.ColumnMappings.Add("Articolo", "Articolo");
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione");
            tableMapping.ColumnMappings.Add("DescrizioneEstesa", "DescrizioneEstesa");
            tableMapping.ColumnMappings.Add("Modello", "Modello");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Articolo, Descrizione, DescrizioneEstesa, Modello\r\nFROM            " +
                "SF_Articoli\r\nWHERE        (Modello <> \'\')";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.SF_ArticoliDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.SF_ArticoliDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.SF_ArticoliDataTable dataTable = new ds_Programmazione.SF_ArticoliDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CommesseSL_CountTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CommesseSL_CountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CommesseSL_Count";
            tableMapping.ColumnMappings.Add("Ser_Commessa", "Ser_Commessa");
            tableMapping.ColumnMappings.Add("Ser_Kit", "Ser_Kit");
            tableMapping.ColumnMappings.Add("Ser_Device", "Ser_Device");
            tableMapping.ColumnMappings.Add("QtaEvasa", "QtaEvasa");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Ser_Commessa, Ser_Kit, Ser_Device, QtaEvasa\r\nFROM            Commes" +
                "seSL_Count\r\nWHERE        (Ser_Commessa IS NOT NULL) AND (Ser_Kit IS NOT NULL) AN" +
                "D (Ser_Device IS NOT NULL)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.CommesseSL_CountDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.CommesseSL_CountDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.CommesseSL_CountDataTable dataTable = new ds_Programmazione.CommesseSL_CountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SerialNumbersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SerialNumbersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SerialNumbers";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Ser_Kit", "Ser_Kit");
            tableMapping.ColumnMappings.Add("Ser_ID_Cli", "Ser_ID_Cli");
            tableMapping.ColumnMappings.Add("Ser_Device", "Ser_Device");
            tableMapping.ColumnMappings.Add("Ser_Device_ID_Code", "Ser_Device_ID_Code");
            tableMapping.ColumnMappings.Add("Ser_OfficialSerial", "Ser_OfficialSerial");
            tableMapping.ColumnMappings.Add("Ser_ReadSerial", "Ser_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_SW_Code", "Ser_SW_Code");
            tableMapping.ColumnMappings.Add("Ser_SW_Code_Rev", "Ser_SW_Code_Rev");
            tableMapping.ColumnMappings.Add("Ser_SW_Std_Type", "Ser_SW_Std_Type");
            tableMapping.ColumnMappings.Add("Ser_SN_prod", "Ser_SN_prod");
            tableMapping.ColumnMappings.Add("Ser_Commessa", "Ser_Commessa");
            tableMapping.ColumnMappings.Add("Ser_DateProduction", "Ser_DateProduction");
            tableMapping.ColumnMappings.Add("Ser_Spedito", "Ser_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Data_Spedito", "Ser_Data_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Substition_ID_ReadSerial", "Ser_Substition_ID_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_Note", "Ser_Note");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [SerialNumbers] WHERE (([Id] = @Original_Id) AND ((@IsNull_Ser_Kit = " +
                "1 AND [Ser_Kit] IS NULL) OR ([Ser_Kit] = @Original_Ser_Kit)) AND ((@IsNull_Ser_I" +
                "D_Cli = 1 AND [Ser_ID_Cli] IS NULL) OR ([Ser_ID_Cli] = @Original_Ser_ID_Cli)) AN" +
                "D ((@IsNull_Ser_Device = 1 AND [Ser_Device] IS NULL) OR ([Ser_Device] = @Origina" +
                "l_Ser_Device)) AND ((@IsNull_Ser_Device_ID_Code = 1 AND [Ser_Device_ID_Code] IS " +
                "NULL) OR ([Ser_Device_ID_Code] = @Original_Ser_Device_ID_Code)) AND ((@IsNull_Se" +
                "r_OfficialSerial = 1 AND [Ser_OfficialSerial] IS NULL) OR ([Ser_OfficialSerial] " +
                "= @Original_Ser_OfficialSerial)) AND ((@IsNull_Ser_ReadSerial = 1 AND [Ser_ReadS" +
                "erial] IS NULL) OR ([Ser_ReadSerial] = @Original_Ser_ReadSerial)) AND ((@IsNull_" +
                "Ser_SW_Code = 1 AND [Ser_SW_Code] IS NULL) OR ([Ser_SW_Code] = @Original_Ser_SW_" +
                "Code)) AND ((@IsNull_Ser_SW_Code_Rev = 1 AND [Ser_SW_Code_Rev] IS NULL) OR ([Ser" +
                "_SW_Code_Rev] = @Original_Ser_SW_Code_Rev)) AND ((@IsNull_Ser_SW_Std_Type = 1 AN" +
                "D [Ser_SW_Std_Type] IS NULL) OR ([Ser_SW_Std_Type] = @Original_Ser_SW_Std_Type))" +
                " AND ((@IsNull_Ser_SN_prod = 1 AND [Ser_SN_prod] IS NULL) OR ([Ser_SN_prod] = @O" +
                "riginal_Ser_SN_prod)) AND ((@IsNull_Ser_Commessa = 1 AND [Ser_Commessa] IS NULL)" +
                " OR ([Ser_Commessa] = @Original_Ser_Commessa)) AND ((@IsNull_Ser_DateProduction " +
                "= 1 AND [Ser_DateProduction] IS NULL) OR ([Ser_DateProduction] = @Original_Ser_D" +
                "ateProduction)) AND ([Ser_Spedito] = @Original_Ser_Spedito) AND ((@IsNull_Ser_Da" +
                "ta_Spedito = 1 AND [Ser_Data_Spedito] IS NULL) OR ([Ser_Data_Spedito] = @Origina" +
                "l_Ser_Data_Spedito)) AND ((@IsNull_Ser_Substition_ID_ReadSerial = 1 AND [Ser_Sub" +
                "stition_ID_ReadSerial] IS NULL) OR ([Ser_Substition_ID_ReadSerial] = @Original_S" +
                "er_Substition_ID_ReadSerial)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Kit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device_ID_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_OfficialSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code_Rev", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Std_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SN_prod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Commessa", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_DateProduction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Data_Spedito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SerialNumbers] ([Ser_Kit], [Ser_ID_Cli], [Ser_Device], [Ser_Device_ID_Code], [Ser_OfficialSerial], [Ser_ReadSerial], [Ser_SW_Code], [Ser_SW_Code_Rev], [Ser_SW_Std_Type], [Ser_SN_prod], [Ser_Commessa], [Ser_DateProduction], [Ser_Spedito], [Ser_Data_Spedito], [Ser_Substition_ID_ReadSerial], [Ser_Note]) VALUES (@Ser_Kit, @Ser_ID_Cli, @Ser_Device, @Ser_Device_ID_Code, @Ser_OfficialSerial, @Ser_ReadSerial, @Ser_SW_Code, @Ser_SW_Code_Rev, @Ser_SW_Std_Type, @Ser_SN_prod, @Ser_Commessa, @Ser_DateProduction, @Ser_Spedito, @Ser_Data_Spedito, @Ser_Substition_ID_ReadSerial, @Ser_Note);
SELECT Id, Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note FROM SerialNumbers WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Note", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [SerialNumbers] SET [Ser_Kit] = @Ser_Kit, [Ser_ID_Cli] = @Ser_ID_Cli, [Ser" +
                "_Device] = @Ser_Device, [Ser_Device_ID_Code] = @Ser_Device_ID_Code, [Ser_Officia" +
                "lSerial] = @Ser_OfficialSerial, [Ser_ReadSerial] = @Ser_ReadSerial, [Ser_SW_Code" +
                "] = @Ser_SW_Code, [Ser_SW_Code_Rev] = @Ser_SW_Code_Rev, [Ser_SW_Std_Type] = @Ser" +
                "_SW_Std_Type, [Ser_SN_prod] = @Ser_SN_prod, [Ser_Commessa] = @Ser_Commessa, [Ser" +
                "_DateProduction] = @Ser_DateProduction, [Ser_Spedito] = @Ser_Spedito, [Ser_Data_" +
                "Spedito] = @Ser_Data_Spedito, [Ser_Substition_ID_ReadSerial] = @Ser_Substition_I" +
                "D_ReadSerial, [Ser_Note] = @Ser_Note WHERE (([Id] = @Original_Id) AND ((@IsNull_" +
                "Ser_Kit = 1 AND [Ser_Kit] IS NULL) OR ([Ser_Kit] = @Original_Ser_Kit)) AND ((@Is" +
                "Null_Ser_ID_Cli = 1 AND [Ser_ID_Cli] IS NULL) OR ([Ser_ID_Cli] = @Original_Ser_I" +
                "D_Cli)) AND ((@IsNull_Ser_Device = 1 AND [Ser_Device] IS NULL) OR ([Ser_Device] " +
                "= @Original_Ser_Device)) AND ((@IsNull_Ser_Device_ID_Code = 1 AND [Ser_Device_ID" +
                "_Code] IS NULL) OR ([Ser_Device_ID_Code] = @Original_Ser_Device_ID_Code)) AND ((" +
                "@IsNull_Ser_OfficialSerial = 1 AND [Ser_OfficialSerial] IS NULL) OR ([Ser_Offici" +
                "alSerial] = @Original_Ser_OfficialSerial)) AND ((@IsNull_Ser_ReadSerial = 1 AND " +
                "[Ser_ReadSerial] IS NULL) OR ([Ser_ReadSerial] = @Original_Ser_ReadSerial)) AND " +
                "((@IsNull_Ser_SW_Code = 1 AND [Ser_SW_Code] IS NULL) OR ([Ser_SW_Code] = @Origin" +
                "al_Ser_SW_Code)) AND ((@IsNull_Ser_SW_Code_Rev = 1 AND [Ser_SW_Code_Rev] IS NULL" +
                ") OR ([Ser_SW_Code_Rev] = @Original_Ser_SW_Code_Rev)) AND ((@IsNull_Ser_SW_Std_T" +
                "ype = 1 AND [Ser_SW_Std_Type] IS NULL) OR ([Ser_SW_Std_Type] = @Original_Ser_SW_" +
                "Std_Type)) AND ((@IsNull_Ser_SN_prod = 1 AND [Ser_SN_prod] IS NULL) OR ([Ser_SN_" +
                "prod] = @Original_Ser_SN_prod)) AND ((@IsNull_Ser_Commessa = 1 AND [Ser_Commessa" +
                "] IS NULL) OR ([Ser_Commessa] = @Original_Ser_Commessa)) AND ((@IsNull_Ser_DateP" +
                "roduction = 1 AND [Ser_DateProduction] IS NULL) OR ([Ser_DateProduction] = @Orig" +
                "inal_Ser_DateProduction)) AND ([Ser_Spedito] = @Original_Ser_Spedito) AND ((@IsN" +
                "ull_Ser_Data_Spedito = 1 AND [Ser_Data_Spedito] IS NULL) OR ([Ser_Data_Spedito] " +
                "= @Original_Ser_Data_Spedito)) AND ((@IsNull_Ser_Substition_ID_ReadSerial = 1 AN" +
                "D [Ser_Substition_ID_ReadSerial] IS NULL) OR ([Ser_Substition_ID_ReadSerial] = @" +
                "Original_Ser_Substition_ID_ReadSerial)));\r\nSELECT Id, Ser_Kit, Ser_ID_Cli, Ser_D" +
                "evice, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_" +
                "SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser" +
                "_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note FROM SerialNu" +
                "mbers WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Note", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Kit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Device_ID_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_OfficialSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Code_Rev", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SW_Std_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_SN_prod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Commessa", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_DateProduction", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Data_Spedito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note FROM SerialNumbers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT Id, Ser_Commessa, Ser_Data_Spedito, Ser_DateProduction, Ser_Device, Ser_Device_ID_Code, Ser_ID_Cli, Ser_Kit, Ser_Note, Ser_OfficialSerial, Ser_ReadSerial, Ser_SN_prod, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_Spedito, Ser_Substition_ID_ReadSerial FROM SerialNumbers WHERE (Ser_OfficialSerial = @BarCodeID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BarCodeID", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.SerialNumbersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.SerialNumbersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.SerialNumbersDataTable dataTable = new ds_Programmazione.SerialNumbersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy_Spedizioni_OfficialSerial(ds_Programmazione.SerialNumbersDataTable dataTable, string BarCodeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((BarCodeID == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(BarCodeID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ds_Programmazione.SerialNumbersDataTable GetDataBy_Spedizioni_OfficialSerial(string BarCodeID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((BarCodeID == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(BarCodeID));
            }
            ds_Programmazione.SerialNumbersDataTable dataTable = new ds_Programmazione.SerialNumbersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione.SerialNumbersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione dataSet) {
            return this.Adapter.Update(dataSet, "SerialNumbers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_Ser_Kit, 
                    global::System.Nullable<int> Original_Ser_ID_Cli, 
                    string Original_Ser_Device, 
                    string Original_Ser_Device_ID_Code, 
                    string Original_Ser_OfficialSerial, 
                    string Original_Ser_ReadSerial, 
                    string Original_Ser_SW_Code, 
                    string Original_Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Original_Ser_SW_Std_Type, 
                    string Original_Ser_SN_prod, 
                    string Original_Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_DateProduction, 
                    bool Original_Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_Data_Spedito, 
                    string Original_Ser_Substition_ID_ReadSerial) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Ser_Kit == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Ser_Kit));
            }
            if ((Original_Ser_ID_Cli.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Device == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Ser_Device));
            }
            if ((Original_Ser_Device_ID_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Ser_Device_ID_Code));
            }
            if ((Original_Ser_OfficialSerial == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Ser_OfficialSerial));
            }
            if ((Original_Ser_ReadSerial == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Ser_ReadSerial));
            }
            if ((Original_Ser_SW_Code == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Ser_SW_Code));
            }
            if ((Original_Ser_SW_Code_Rev == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Ser_SW_Code_Rev));
            }
            if ((Original_Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_SN_prod == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Ser_SN_prod));
            }
            if ((Original_Ser_Commessa == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Ser_Commessa));
            }
            if ((Original_Ser_DateProduction.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_Ser_DateProduction.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_Ser_Spedito));
            if ((Original_Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_Ser_Substition_ID_ReadSerial));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note) {
            if ((Ser_Kit == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ser_Kit));
            }
            if ((Ser_ID_Cli.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Ser_Device == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Ser_Device));
            }
            if ((Ser_Device_ID_Code == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Ser_Device_ID_Code));
            }
            if ((Ser_OfficialSerial == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ser_OfficialSerial));
            }
            if ((Ser_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Ser_ReadSerial));
            }
            if ((Ser_SW_Code == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Ser_SW_Code));
            }
            if ((Ser_SW_Code_Rev == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Ser_SW_Code_Rev));
            }
            if ((Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ser_SN_prod == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ser_SN_prod));
            }
            if ((Ser_Commessa == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Ser_Commessa));
            }
            if ((Ser_DateProduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Ser_DateProduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Ser_Spedito));
            if ((Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Ser_Substition_ID_ReadSerial));
            }
            if ((Ser_Note == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Ser_Note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note, 
                    int Original_Id, 
                    string Original_Ser_Kit, 
                    global::System.Nullable<int> Original_Ser_ID_Cli, 
                    string Original_Ser_Device, 
                    string Original_Ser_Device_ID_Code, 
                    string Original_Ser_OfficialSerial, 
                    string Original_Ser_ReadSerial, 
                    string Original_Ser_SW_Code, 
                    string Original_Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Original_Ser_SW_Std_Type, 
                    string Original_Ser_SN_prod, 
                    string Original_Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_DateProduction, 
                    bool Original_Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_Data_Spedito, 
                    string Original_Ser_Substition_ID_ReadSerial, 
                    int Id) {
            if ((Ser_Kit == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ser_Kit));
            }
            if ((Ser_ID_Cli.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Ser_Device == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Ser_Device));
            }
            if ((Ser_Device_ID_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Ser_Device_ID_Code));
            }
            if ((Ser_OfficialSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ser_OfficialSerial));
            }
            if ((Ser_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Ser_ReadSerial));
            }
            if ((Ser_SW_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Ser_SW_Code));
            }
            if ((Ser_SW_Code_Rev == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Ser_SW_Code_Rev));
            }
            if ((Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ser_SN_prod == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Ser_SN_prod));
            }
            if ((Ser_Commessa == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Ser_Commessa));
            }
            if ((Ser_DateProduction.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Ser_DateProduction.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Ser_Spedito));
            if ((Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Ser_Substition_ID_ReadSerial));
            }
            if ((Ser_Note == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Ser_Note));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Id));
            if ((Original_Ser_Kit == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Ser_Kit));
            }
            if ((Original_Ser_ID_Cli.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Device == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Ser_Device));
            }
            if ((Original_Ser_Device_ID_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Ser_Device_ID_Code));
            }
            if ((Original_Ser_OfficialSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Ser_OfficialSerial));
            }
            if ((Original_Ser_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Ser_ReadSerial));
            }
            if ((Original_Ser_SW_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Ser_SW_Code));
            }
            if ((Original_Ser_SW_Code_Rev == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Ser_SW_Code_Rev));
            }
            if ((Original_Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_SN_prod == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Ser_SN_prod));
            }
            if ((Original_Ser_Commessa == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_Ser_Commessa));
            }
            if ((Original_Ser_DateProduction.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_Ser_DateProduction.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(Original_Ser_Spedito));
            if ((Original_Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_Ser_Substition_ID_ReadSerial));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note, 
                    int Original_Id, 
                    string Original_Ser_Kit, 
                    global::System.Nullable<int> Original_Ser_ID_Cli, 
                    string Original_Ser_Device, 
                    string Original_Ser_Device_ID_Code, 
                    string Original_Ser_OfficialSerial, 
                    string Original_Ser_ReadSerial, 
                    string Original_Ser_SW_Code, 
                    string Original_Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Original_Ser_SW_Std_Type, 
                    string Original_Ser_SN_prod, 
                    string Original_Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_DateProduction, 
                    bool Original_Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Original_Ser_Data_Spedito, 
                    string Original_Ser_Substition_ID_ReadSerial) {
            return this.Update(Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note, Original_Id, Original_Ser_Kit, Original_Ser_ID_Cli, Original_Ser_Device, Original_Ser_Device_ID_Code, Original_Ser_OfficialSerial, Original_Ser_ReadSerial, Original_Ser_SW_Code, Original_Ser_SW_Code_Rev, Original_Ser_SW_Std_Type, Original_Ser_SN_prod, Original_Ser_Commessa, Original_Ser_DateProduction, Original_Ser_Spedito, Original_Ser_Data_Spedito, Original_Ser_Substition_ID_ReadSerial, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dt_Firmware_lookupCommesseSLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public dt_Firmware_lookupCommesseSLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dt_Firmware_lookupCommesseSL";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("SW_Code", "SW_Code");
            tableMapping.ColumnMappings.Add("SW_TipoDevice", "SW_TipoDevice");
            tableMapping.ColumnMappings.Add("SW_Descrizione", "SW_Descrizione");
            tableMapping.ColumnMappings.Add("SW_Descrizione_EN", "SW_Descrizione_EN");
            tableMapping.ColumnMappings.Add("SW_Versione", "SW_Versione");
            tableMapping.ColumnMappings.Add("SW_Revisione", "SW_Revisione");
            tableMapping.ColumnMappings.Add("SW_Standard", "SW_Standard");
            tableMapping.ColumnMappings.Add("SW_P_Opt_RF", "SW_P_Opt_RF");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Oled", "SW_P_Opt_Use_Oled");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_EmButt", "SW_P_Opt_Use_EmButt");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Backlight", "SW_P_Opt_Use_Backlight");
            tableMapping.ColumnMappings.Add("SW_P_Opt_ShiftPage", "SW_P_Opt_ShiftPage");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Accel", "SW_P_Opt_Use_Accel");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_SP", "SW_P_Opt_Use_SP");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Buzzer", "SW_P_Opt_Use_Buzzer");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_Vibracall", "SW_P_Opt_Use_Vibracall");
            tableMapping.ColumnMappings.Add("SW_P_Opt_Use_LedTorch", "SW_P_Opt_Use_LedTorch");
            tableMapping.ColumnMappings.Add("SW_P_Opt_MaxPairDevices", "SW_P_Opt_MaxPairDevices");
            tableMapping.ColumnMappings.Add("SW_R_Opt_RF", "SW_R_Opt_RF");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Plug_Exp", "SW_R_Opt_Plug_Exp");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Plug_Ple", "SW_R_Opt_Plug_Ple");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Em_Keyb", "SW_R_Opt_Em_Keyb");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Can", "SW_R_Opt_Can");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Prop_Out", "SW_R_Opt_Prop_Out");
            tableMapping.ColumnMappings.Add("SW_R_Opt_TimeOut", "SW_R_Opt_TimeOut");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Cont_Keys", "SW_R_Opt_Cont_Keys");
            tableMapping.ColumnMappings.Add("SW_R_Opt_LockSameRow", "SW_R_Opt_LockSameRow");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Use_SP", "SW_R_Opt_Use_SP");
            tableMapping.ColumnMappings.Add("SW_R_Opt_MaxPairDevices", "SW_R_Opt_MaxPairDevices");
            tableMapping.ColumnMappings.Add("SW_R_Opt_ShiftPage", "SW_R_Opt_ShiftPage");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Output_No", "SW_R_Opt_Output_No");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Dig_Input_No", "SW_R_Opt_Dig_Input_No");
            tableMapping.ColumnMappings.Add("SW_R_Opt_Ana_Input_No", "SW_R_Opt_Ana_Input_No");
            tableMapping.ColumnMappings.Add("SW_Revisioni", "SW_Revisioni");
            tableMapping.ColumnMappings.Add("SW_Funzionamento", "SW_Funzionamento");
            tableMapping.ColumnMappings.Add("SW_Config", "SW_Config");
            tableMapping.ColumnMappings.Add("SW_Obsolete_ver", "SW_Obsolete_ver");
            tableMapping.ColumnMappings.Add("SW_Obsolete_ver_from_date", "SW_Obsolete_ver_from_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Firmware] WHERE (([Id] = @Original_Id) AND ([SW_Code] = @Origi" +
                "nal_SW_Code) AND ([SW_TipoDevice] = @Original_SW_TipoDevice) AND ((@IsNull_SW_De" +
                "scrizione = 1 AND [SW_Descrizione] IS NULL) OR ([SW_Descrizione] = @Original_SW_" +
                "Descrizione)) AND ((@IsNull_SW_Descrizione_EN = 1 AND [SW_Descrizione_EN] IS NUL" +
                "L) OR ([SW_Descrizione_EN] = @Original_SW_Descrizione_EN)) AND ((@IsNull_SW_Vers" +
                "ione = 1 AND [SW_Versione] IS NULL) OR ([SW_Versione] = @Original_SW_Versione)) " +
                "AND ((@IsNull_SW_Revisione = 1 AND [SW_Revisione] IS NULL) OR ([SW_Revisione] = " +
                "@Original_SW_Revisione)) AND ([SW_Standard] = @Original_SW_Standard) AND ([SW_P_" +
                "Opt_RF] = @Original_SW_P_Opt_RF) AND ([SW_P_Opt_Use_Oled] = @Original_SW_P_Opt_U" +
                "se_Oled) AND ([SW_P_Opt_Use_EmButt] = @Original_SW_P_Opt_Use_EmButt) AND ([SW_P_" +
                "Opt_Use_Backlight] = @Original_SW_P_Opt_Use_Backlight) AND ([SW_P_Opt_ShiftPage]" +
                " = @Original_SW_P_Opt_ShiftPage) AND ([SW_P_Opt_Use_Accel] = @Original_SW_P_Opt_" +
                "Use_Accel) AND ([SW_P_Opt_Use_SP] = @Original_SW_P_Opt_Use_SP) AND ([SW_P_Opt_Us" +
                "e_Buzzer] = @Original_SW_P_Opt_Use_Buzzer) AND ([SW_P_Opt_Use_Vibracall] = @Orig" +
                "inal_SW_P_Opt_Use_Vibracall) AND ([SW_P_Opt_Use_LedTorch] = @Original_SW_P_Opt_U" +
                "se_LedTorch) AND ((@IsNull_SW_P_Opt_MaxPairDevices = 1 AND [SW_P_Opt_MaxPairDevi" +
                "ces] IS NULL) OR ([SW_P_Opt_MaxPairDevices] = @Original_SW_P_Opt_MaxPairDevices)" +
                ") AND ([SW_R_Opt_RF] = @Original_SW_R_Opt_RF) AND ([SW_R_Opt_Plug_Exp] = @Origin" +
                "al_SW_R_Opt_Plug_Exp) AND ([SW_R_Opt_Plug_Ple] = @Original_SW_R_Opt_Plug_Ple) AN" +
                "D ([SW_R_Opt_Em_Keyb] = @Original_SW_R_Opt_Em_Keyb) AND ([SW_R_Opt_Can] = @Origi" +
                "nal_SW_R_Opt_Can) AND ([SW_R_Opt_Prop_Out] = @Original_SW_R_Opt_Prop_Out) AND ([" +
                "SW_R_Opt_TimeOut] = @Original_SW_R_Opt_TimeOut) AND ((@IsNull_SW_R_Opt_Cont_Keys" +
                " = 1 AND [SW_R_Opt_Cont_Keys] IS NULL) OR ([SW_R_Opt_Cont_Keys] = @Original_SW_R" +
                "_Opt_Cont_Keys)) AND ([SW_R_Opt_LockSameRow] = @Original_SW_R_Opt_LockSameRow) A" +
                "ND ([SW_R_Opt_Use_SP] = @Original_SW_R_Opt_Use_SP) AND ((@IsNull_SW_R_Opt_MaxPai" +
                "rDevices = 1 AND [SW_R_Opt_MaxPairDevices] IS NULL) OR ([SW_R_Opt_MaxPairDevices" +
                "] = @Original_SW_R_Opt_MaxPairDevices)) AND ([SW_R_Opt_ShiftPage] = @Original_SW" +
                "_R_Opt_ShiftPage) AND ((@IsNull_SW_R_Opt_Output_No = 1 AND [SW_R_Opt_Output_No] " +
                "IS NULL) OR ([SW_R_Opt_Output_No] = @Original_SW_R_Opt_Output_No)) AND ((@IsNull" +
                "_SW_R_Opt_Dig_Input_No = 1 AND [SW_R_Opt_Dig_Input_No] IS NULL) OR ([SW_R_Opt_Di" +
                "g_Input_No] = @Original_SW_R_Opt_Dig_Input_No)) AND ((@IsNull_SW_R_Opt_Ana_Input" +
                "_No = 1 AND [SW_R_Opt_Ana_Input_No] IS NULL) OR ([SW_R_Opt_Ana_Input_No] = @Orig" +
                "inal_SW_R_Opt_Ana_Input_No)) AND ([SW_Obsolete_ver] = @Original_SW_Obsolete_ver)" +
                " AND ((@IsNull_SW_Obsolete_ver_from_date = 1 AND [SW_Obsolete_ver_from_date] IS " +
                "NULL) OR ([SW_Obsolete_ver_from_date] = @Original_SW_Obsolete_ver_from_date)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Versione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Revisione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Firmware] ([SW_Code], [SW_TipoDevice], [SW_Descrizione], [SW_D" +
                "escrizione_EN], [SW_Versione], [SW_Revisione], [SW_Standard], [SW_P_Opt_RF], [SW" +
                "_P_Opt_Use_Oled], [SW_P_Opt_Use_EmButt], [SW_P_Opt_Use_Backlight], [SW_P_Opt_Shi" +
                "ftPage], [SW_P_Opt_Use_Accel], [SW_P_Opt_Use_SP], [SW_P_Opt_Use_Buzzer], [SW_P_O" +
                "pt_Use_Vibracall], [SW_P_Opt_Use_LedTorch], [SW_P_Opt_MaxPairDevices], [SW_R_Opt" +
                "_RF], [SW_R_Opt_Plug_Exp], [SW_R_Opt_Plug_Ple], [SW_R_Opt_Em_Keyb], [SW_R_Opt_Ca" +
                "n], [SW_R_Opt_Prop_Out], [SW_R_Opt_TimeOut], [SW_R_Opt_Cont_Keys], [SW_R_Opt_Loc" +
                "kSameRow], [SW_R_Opt_Use_SP], [SW_R_Opt_MaxPairDevices], [SW_R_Opt_ShiftPage], [" +
                "SW_R_Opt_Output_No], [SW_R_Opt_Dig_Input_No], [SW_R_Opt_Ana_Input_No], [SW_Revis" +
                "ioni], [SW_Funzionamento], [SW_Config], [SW_Obsolete_ver], [SW_Obsolete_ver_from" +
                "_date]) VALUES (@SW_Code, @SW_TipoDevice, @SW_Descrizione, @SW_Descrizione_EN, @" +
                "SW_Versione, @SW_Revisione, @SW_Standard, @SW_P_Opt_RF, @SW_P_Opt_Use_Oled, @SW_" +
                "P_Opt_Use_EmButt, @SW_P_Opt_Use_Backlight, @SW_P_Opt_ShiftPage, @SW_P_Opt_Use_Ac" +
                "cel, @SW_P_Opt_Use_SP, @SW_P_Opt_Use_Buzzer, @SW_P_Opt_Use_Vibracall, @SW_P_Opt_" +
                "Use_LedTorch, @SW_P_Opt_MaxPairDevices, @SW_R_Opt_RF, @SW_R_Opt_Plug_Exp, @SW_R_" +
                "Opt_Plug_Ple, @SW_R_Opt_Em_Keyb, @SW_R_Opt_Can, @SW_R_Opt_Prop_Out, @SW_R_Opt_Ti" +
                "meOut, @SW_R_Opt_Cont_Keys, @SW_R_Opt_LockSameRow, @SW_R_Opt_Use_SP, @SW_R_Opt_M" +
                "axPairDevices, @SW_R_Opt_ShiftPage, @SW_R_Opt_Output_No, @SW_R_Opt_Dig_Input_No," +
                " @SW_R_Opt_Ana_Input_No, @SW_Revisioni, @SW_Funzionamento, @SW_Config, @SW_Obsol" +
                "ete_ver, @SW_Obsolete_ver_from_date);\r\nSELECT Id, SW_Code, SW_TipoDevice, SW_Des" +
                "crizione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_P_Opt_RF" +
                ", SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_Shift" +
                "Page, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vib" +
                "racall, SW_P_Opt_Use_LedTorch, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Pl" +
                "ug_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW" +
                "_R_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_" +
                "Opt_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_N" +
                "o, SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete" +
                "_ver, SW_Obsolete_ver_from_date FROM Firmware WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisioni", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisioni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Funzionamento", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Funzionamento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Config", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Config", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Firmware] SET [SW_Code] = @SW_Code, [SW_TipoDevice] = @SW_TipoDevic" +
                "e, [SW_Descrizione] = @SW_Descrizione, [SW_Descrizione_EN] = @SW_Descrizione_EN," +
                " [SW_Versione] = @SW_Versione, [SW_Revisione] = @SW_Revisione, [SW_Standard] = @" +
                "SW_Standard, [SW_P_Opt_RF] = @SW_P_Opt_RF, [SW_P_Opt_Use_Oled] = @SW_P_Opt_Use_O" +
                "led, [SW_P_Opt_Use_EmButt] = @SW_P_Opt_Use_EmButt, [SW_P_Opt_Use_Backlight] = @S" +
                "W_P_Opt_Use_Backlight, [SW_P_Opt_ShiftPage] = @SW_P_Opt_ShiftPage, [SW_P_Opt_Use" +
                "_Accel] = @SW_P_Opt_Use_Accel, [SW_P_Opt_Use_SP] = @SW_P_Opt_Use_SP, [SW_P_Opt_U" +
                "se_Buzzer] = @SW_P_Opt_Use_Buzzer, [SW_P_Opt_Use_Vibracall] = @SW_P_Opt_Use_Vibr" +
                "acall, [SW_P_Opt_Use_LedTorch] = @SW_P_Opt_Use_LedTorch, [SW_P_Opt_MaxPairDevice" +
                "s] = @SW_P_Opt_MaxPairDevices, [SW_R_Opt_RF] = @SW_R_Opt_RF, [SW_R_Opt_Plug_Exp]" +
                " = @SW_R_Opt_Plug_Exp, [SW_R_Opt_Plug_Ple] = @SW_R_Opt_Plug_Ple, [SW_R_Opt_Em_Ke" +
                "yb] = @SW_R_Opt_Em_Keyb, [SW_R_Opt_Can] = @SW_R_Opt_Can, [SW_R_Opt_Prop_Out] = @" +
                "SW_R_Opt_Prop_Out, [SW_R_Opt_TimeOut] = @SW_R_Opt_TimeOut, [SW_R_Opt_Cont_Keys] " +
                "= @SW_R_Opt_Cont_Keys, [SW_R_Opt_LockSameRow] = @SW_R_Opt_LockSameRow, [SW_R_Opt" +
                "_Use_SP] = @SW_R_Opt_Use_SP, [SW_R_Opt_MaxPairDevices] = @SW_R_Opt_MaxPairDevice" +
                "s, [SW_R_Opt_ShiftPage] = @SW_R_Opt_ShiftPage, [SW_R_Opt_Output_No] = @SW_R_Opt_" +
                "Output_No, [SW_R_Opt_Dig_Input_No] = @SW_R_Opt_Dig_Input_No, [SW_R_Opt_Ana_Input" +
                "_No] = @SW_R_Opt_Ana_Input_No, [SW_Revisioni] = @SW_Revisioni, [SW_Funzionamento" +
                "] = @SW_Funzionamento, [SW_Config] = @SW_Config, [SW_Obsolete_ver] = @SW_Obsolet" +
                "e_ver, [SW_Obsolete_ver_from_date] = @SW_Obsolete_ver_from_date WHERE (([Id] = @" +
                "Original_Id) AND ([SW_Code] = @Original_SW_Code) AND ([SW_TipoDevice] = @Origina" +
                "l_SW_TipoDevice) AND ((@IsNull_SW_Descrizione = 1 AND [SW_Descrizione] IS NULL) " +
                "OR ([SW_Descrizione] = @Original_SW_Descrizione)) AND ((@IsNull_SW_Descrizione_E" +
                "N = 1 AND [SW_Descrizione_EN] IS NULL) OR ([SW_Descrizione_EN] = @Original_SW_De" +
                "scrizione_EN)) AND ((@IsNull_SW_Versione = 1 AND [SW_Versione] IS NULL) OR ([SW_" +
                "Versione] = @Original_SW_Versione)) AND ((@IsNull_SW_Revisione = 1 AND [SW_Revis" +
                "ione] IS NULL) OR ([SW_Revisione] = @Original_SW_Revisione)) AND ([SW_Standard] " +
                "= @Original_SW_Standard) AND ([SW_P_Opt_RF] = @Original_SW_P_Opt_RF) AND ([SW_P_" +
                "Opt_Use_Oled] = @Original_SW_P_Opt_Use_Oled) AND ([SW_P_Opt_Use_EmButt] = @Origi" +
                "nal_SW_P_Opt_Use_EmButt) AND ([SW_P_Opt_Use_Backlight] = @Original_SW_P_Opt_Use_" +
                "Backlight) AND ([SW_P_Opt_ShiftPage] = @Original_SW_P_Opt_ShiftPage) AND ([SW_P_" +
                "Opt_Use_Accel] = @Original_SW_P_Opt_Use_Accel) AND ([SW_P_Opt_Use_SP] = @Origina" +
                "l_SW_P_Opt_Use_SP) AND ([SW_P_Opt_Use_Buzzer] = @Original_SW_P_Opt_Use_Buzzer) A" +
                "ND ([SW_P_Opt_Use_Vibracall] = @Original_SW_P_Opt_Use_Vibracall) AND ([SW_P_Opt_" +
                "Use_LedTorch] = @Original_SW_P_Opt_Use_LedTorch) AND ((@IsNull_SW_P_Opt_MaxPairD" +
                "evices = 1 AND [SW_P_Opt_MaxPairDevices] IS NULL) OR ([SW_P_Opt_MaxPairDevices] " +
                "= @Original_SW_P_Opt_MaxPairDevices)) AND ([SW_R_Opt_RF] = @Original_SW_R_Opt_RF" +
                ") AND ([SW_R_Opt_Plug_Exp] = @Original_SW_R_Opt_Plug_Exp) AND ([SW_R_Opt_Plug_Pl" +
                "e] = @Original_SW_R_Opt_Plug_Ple) AND ([SW_R_Opt_Em_Keyb] = @Original_SW_R_Opt_E" +
                "m_Keyb) AND ([SW_R_Opt_Can] = @Original_SW_R_Opt_Can) AND ([SW_R_Opt_Prop_Out] =" +
                " @Original_SW_R_Opt_Prop_Out) AND ([SW_R_Opt_TimeOut] = @Original_SW_R_Opt_TimeO" +
                "ut) AND ((@IsNull_SW_R_Opt_Cont_Keys = 1 AND [SW_R_Opt_Cont_Keys] IS NULL) OR ([" +
                "SW_R_Opt_Cont_Keys] = @Original_SW_R_Opt_Cont_Keys)) AND ([SW_R_Opt_LockSameRow]" +
                " = @Original_SW_R_Opt_LockSameRow) AND ([SW_R_Opt_Use_SP] = @Original_SW_R_Opt_U" +
                "se_SP) AND ((@IsNull_SW_R_Opt_MaxPairDevices = 1 AND [SW_R_Opt_MaxPairDevices] I" +
                "S NULL) OR ([SW_R_Opt_MaxPairDevices] = @Original_SW_R_Opt_MaxPairDevices)) AND " +
                "([SW_R_Opt_ShiftPage] = @Original_SW_R_Opt_ShiftPage) AND ((@IsNull_SW_R_Opt_Out" +
                "put_No = 1 AND [SW_R_Opt_Output_No] IS NULL) OR ([SW_R_Opt_Output_No] = @Origina" +
                "l_SW_R_Opt_Output_No)) AND ((@IsNull_SW_R_Opt_Dig_Input_No = 1 AND [SW_R_Opt_Dig" +
                "_Input_No] IS NULL) OR ([SW_R_Opt_Dig_Input_No] = @Original_SW_R_Opt_Dig_Input_N" +
                "o)) AND ((@IsNull_SW_R_Opt_Ana_Input_No = 1 AND [SW_R_Opt_Ana_Input_No] IS NULL)" +
                " OR ([SW_R_Opt_Ana_Input_No] = @Original_SW_R_Opt_Ana_Input_No)) AND ([SW_Obsole" +
                "te_ver] = @Original_SW_Obsolete_ver) AND ((@IsNull_SW_Obsolete_ver_from_date = 1" +
                " AND [SW_Obsolete_ver_from_date] IS NULL) OR ([SW_Obsolete_ver_from_date] = @Ori" +
                "ginal_SW_Obsolete_ver_from_date)));\r\nSELECT Id, SW_Code, SW_TipoDevice, SW_Descr" +
                "izione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_P_Opt_RF, " +
                "SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPa" +
                "ge, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibra" +
                "call, SW_P_Opt_Use_LedTorch, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug" +
                "_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R" +
                "_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Op" +
                "t_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No," +
                " SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_v" +
                "er, SW_Obsolete_ver_from_date FROM Firmware WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Revisioni", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisioni", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Funzionamento", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Funzionamento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Config", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Config", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_TipoDevice", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_TipoDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Descrizione_EN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Descrizione_EN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Descrizione_EN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Versione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Versione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Versione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Revisione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Revisione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Revisione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Standard", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Standard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Oled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Oled", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_EmButt", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_EmButt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Backlight", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Backlight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Accel", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Accel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Buzzer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Buzzer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_Vibracall", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_Vibracall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_Use_LedTorch", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_Use_LedTorch", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_P_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_P_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_RF", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_RF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Exp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Exp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Plug_Ple", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Plug_Ple", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Em_Keyb", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Em_Keyb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Can", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Can", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Prop_Out", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Prop_Out", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_TimeOut", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_TimeOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Cont_Keys", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Cont_Keys", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_LockSameRow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_LockSameRow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Use_SP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Use_SP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_MaxPairDevices", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_MaxPairDevices", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_ShiftPage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_ShiftPage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Output_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Output_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Dig_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Dig_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_R_Opt_Ana_Input_No", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_R_Opt_Ana_Input_No", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SW_Obsolete_ver_from_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Obsolete_ver_from_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW_Obsolete_ver_from_date FROM dbo.Firmware";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Id, SW_Code, SW_Config, SW_Descrizione, SW_Descrizione_EN, SW_Funzionamento, SW_Obsolete_ver, SW_Obsolete_ver_from_date, SW_P_Opt_MaxPairDevices, SW_P_Opt_RF, SW_P_Opt_ShiftPage, 
                         SW_P_Opt_Use_Accel, SW_P_Opt_Use_Backlight, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_LedTorch, SW_P_Opt_Use_Oled, SW_P_Opt_Use_SP, SW_P_Opt_Use_Vibracall, 
                         SW_R_Opt_Ana_Input_No, SW_R_Opt_Can, SW_R_Opt_Cont_Keys, SW_R_Opt_Dig_Input_No, SW_R_Opt_Em_Keyb, SW_R_Opt_LockSameRow, SW_R_Opt_MaxPairDevices, SW_R_Opt_Output_No, SW_R_Opt_Plug_Exp, 
                         SW_R_Opt_Plug_Ple, SW_R_Opt_Prop_Out, SW_R_Opt_RF, SW_R_Opt_ShiftPage, SW_R_Opt_TimeOut, SW_R_Opt_Use_SP, SW_Revisione, SW_Revisioni, SW_Standard, SW_TipoDevice, SW_Versione
FROM            Firmware
WHERE        (SW_Code = @SW_Code) AND (SW_Obsolete_ver = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SW_Code", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, "SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable dataTable = new ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable dataTable, string SW_Code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable GetDataBy(string SW_Code) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable dataTable = new ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione.dt_Firmware_lookupCommesseSLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione dataSet) {
            return this.Adapter.Update(dataSet, "dt_Firmware_lookupCommesseSL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_SW_Code == null)) {
                throw new global::System.ArgumentNullException("Original_SW_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SW_Code));
            }
            if ((Original_SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("Original_SW_TipoDevice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SW_TipoDevice));
            }
            if ((Original_SW_Descrizione == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SW_Descrizione));
            }
            if ((Original_SW_Descrizione_EN == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SW_Descrizione_EN));
            }
            if ((Original_SW_Versione == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SW_Versione));
            }
            if ((Original_SW_Revisione == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SW_Revisione));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_SW_Standard));
            if ((Original_SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_P_Opt_RF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_SW_P_Opt_RF));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_SW_P_Opt_Use_Oled));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_SW_P_Opt_Use_EmButt));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_SW_P_Opt_Use_Backlight));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_SW_P_Opt_ShiftPage));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_SW_P_Opt_Use_Accel));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_SW_P_Opt_Use_SP));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_SW_P_Opt_Use_Buzzer));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_SW_P_Opt_Use_Vibracall));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_SW_P_Opt_Use_LedTorch));
            if ((Original_SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_RF");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_SW_R_Opt_RF));
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_SW_R_Opt_Plug_Exp));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_SW_R_Opt_Plug_Ple));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_SW_R_Opt_Em_Keyb));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_SW_R_Opt_Can));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_SW_R_Opt_Prop_Out));
            if ((Original_SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_SW_R_Opt_TimeOut));
            }
            if ((Original_SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((bool)(Original_SW_R_Opt_LockSameRow));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_SW_R_Opt_Use_SP));
            if ((Original_SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((bool)(Original_SW_R_Opt_ShiftPage));
            if ((Original_SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((int)(Original_SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_SW_Obsolete_ver));
            if ((Original_SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((System.DateTime)(Original_SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date) {
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            if ((SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("SW_TipoDevice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SW_TipoDevice));
            }
            if ((SW_Descrizione == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SW_Descrizione));
            }
            if ((SW_Descrizione_EN == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SW_Descrizione_EN));
            }
            if ((SW_Versione == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SW_Versione));
            }
            if ((SW_Revisione == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SW_Revisione));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(SW_Standard));
            if ((SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_P_Opt_RF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SW_P_Opt_RF));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(SW_P_Opt_Use_Oled));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(SW_P_Opt_Use_EmButt));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(SW_P_Opt_Use_Backlight));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(SW_P_Opt_ShiftPage));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(SW_P_Opt_Use_Accel));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(SW_P_Opt_Use_SP));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(SW_P_Opt_Use_Buzzer));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(SW_P_Opt_Use_Vibracall));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(SW_P_Opt_Use_LedTorch));
            if ((SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_RF");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(SW_R_Opt_RF));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(SW_R_Opt_Plug_Exp));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(SW_R_Opt_Plug_Ple));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(SW_R_Opt_Em_Keyb));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(SW_R_Opt_Can));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(SW_R_Opt_Prop_Out));
            if ((SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(SW_R_Opt_TimeOut));
            }
            if ((SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(SW_R_Opt_LockSameRow));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(SW_R_Opt_Use_SP));
            if ((SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(SW_R_Opt_ShiftPage));
            if ((SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SW_Revisioni == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(SW_Revisioni));
            }
            if ((SW_Funzionamento == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(SW_Funzionamento));
            }
            if ((SW_Config == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SW_Config));
            }
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(SW_Obsolete_ver));
            if ((SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date, 
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date, 
                    int Id) {
            if ((SW_Code == null)) {
                throw new global::System.ArgumentNullException("SW_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SW_Code));
            }
            if ((SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("SW_TipoDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SW_TipoDevice));
            }
            if ((SW_Descrizione == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SW_Descrizione));
            }
            if ((SW_Descrizione_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SW_Descrizione_EN));
            }
            if ((SW_Versione == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SW_Versione));
            }
            if ((SW_Revisione == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SW_Revisione));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(SW_Standard));
            if ((SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_P_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SW_P_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(SW_P_Opt_Use_Oled));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(SW_P_Opt_Use_EmButt));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(SW_P_Opt_Use_Backlight));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(SW_P_Opt_ShiftPage));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(SW_P_Opt_Use_Accel));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(SW_P_Opt_Use_SP));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(SW_P_Opt_Use_Buzzer));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(SW_P_Opt_Use_Vibracall));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(SW_P_Opt_Use_LedTorch));
            if ((SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(SW_R_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(SW_R_Opt_Plug_Exp));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(SW_R_Opt_Plug_Ple));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(SW_R_Opt_Em_Keyb));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(SW_R_Opt_Can));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(SW_R_Opt_Prop_Out));
            if ((SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(SW_R_Opt_TimeOut));
            }
            if ((SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(SW_R_Opt_LockSameRow));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(SW_R_Opt_Use_SP));
            if ((SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(SW_R_Opt_ShiftPage));
            if ((SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((SW_Revisioni == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(SW_Revisioni));
            }
            if ((SW_Funzionamento == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(SW_Funzionamento));
            }
            if ((SW_Config == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SW_Config));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(SW_Obsolete_ver));
            if ((SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Id));
            if ((Original_SW_Code == null)) {
                throw new global::System.ArgumentNullException("Original_SW_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_SW_Code));
            }
            if ((Original_SW_TipoDevice == null)) {
                throw new global::System.ArgumentNullException("Original_SW_TipoDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_SW_TipoDevice));
            }
            if ((Original_SW_Descrizione == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_SW_Descrizione));
            }
            if ((Original_SW_Descrizione_EN == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_SW_Descrizione_EN));
            }
            if ((Original_SW_Versione == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_SW_Versione));
            }
            if ((Original_SW_Revisione == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_SW_Revisione));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_SW_Standard));
            if ((Original_SW_P_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_P_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_SW_P_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_SW_P_Opt_Use_Oled));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(Original_SW_P_Opt_Use_EmButt));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(Original_SW_P_Opt_Use_Backlight));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(Original_SW_P_Opt_ShiftPage));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_SW_P_Opt_Use_Accel));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_SW_P_Opt_Use_SP));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_SW_P_Opt_Use_Buzzer));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_SW_P_Opt_Use_Vibracall));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_SW_P_Opt_Use_LedTorch));
            if ((Original_SW_P_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_SW_P_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_RF == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_RF");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_SW_R_Opt_RF));
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Original_SW_R_Opt_Plug_Exp));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_SW_R_Opt_Plug_Ple));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_SW_R_Opt_Em_Keyb));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_SW_R_Opt_Can));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_SW_R_Opt_Prop_Out));
            if ((Original_SW_R_Opt_TimeOut == null)) {
                throw new global::System.ArgumentNullException("Original_SW_R_Opt_TimeOut");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_SW_R_Opt_TimeOut));
            }
            if ((Original_SW_R_Opt_Cont_Keys.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_SW_R_Opt_Cont_Keys.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[71].Value = ((bool)(Original_SW_R_Opt_LockSameRow));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_SW_R_Opt_Use_SP));
            if ((Original_SW_R_Opt_MaxPairDevices.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_SW_R_Opt_MaxPairDevices.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((bool)(Original_SW_R_Opt_ShiftPage));
            if ((Original_SW_R_Opt_Output_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((int)(Original_SW_R_Opt_Output_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Dig_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(Original_SW_R_Opt_Dig_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_SW_R_Opt_Ana_Input_No.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_SW_R_Opt_Ana_Input_No.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(Original_SW_Obsolete_ver));
            if ((Original_SW_Obsolete_ver_from_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(Original_SW_Obsolete_ver_from_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SW_Code, 
                    string SW_TipoDevice, 
                    string SW_Descrizione, 
                    string SW_Descrizione_EN, 
                    string SW_Versione, 
                    string SW_Revisione, 
                    bool SW_Standard, 
                    string SW_P_Opt_RF, 
                    bool SW_P_Opt_Use_Oled, 
                    bool SW_P_Opt_Use_EmButt, 
                    bool SW_P_Opt_Use_Backlight, 
                    bool SW_P_Opt_ShiftPage, 
                    bool SW_P_Opt_Use_Accel, 
                    bool SW_P_Opt_Use_SP, 
                    bool SW_P_Opt_Use_Buzzer, 
                    bool SW_P_Opt_Use_Vibracall, 
                    bool SW_P_Opt_Use_LedTorch, 
                    global::System.Nullable<int> SW_P_Opt_MaxPairDevices, 
                    string SW_R_Opt_RF, 
                    bool SW_R_Opt_Plug_Exp, 
                    bool SW_R_Opt_Plug_Ple, 
                    bool SW_R_Opt_Em_Keyb, 
                    bool SW_R_Opt_Can, 
                    bool SW_R_Opt_Prop_Out, 
                    string SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> SW_R_Opt_Cont_Keys, 
                    bool SW_R_Opt_LockSameRow, 
                    bool SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> SW_R_Opt_MaxPairDevices, 
                    bool SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> SW_R_Opt_Output_No, 
                    global::System.Nullable<int> SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> SW_R_Opt_Ana_Input_No, 
                    string SW_Revisioni, 
                    string SW_Funzionamento, 
                    string SW_Config, 
                    bool SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> SW_Obsolete_ver_from_date, 
                    int Original_Id, 
                    string Original_SW_Code, 
                    string Original_SW_TipoDevice, 
                    string Original_SW_Descrizione, 
                    string Original_SW_Descrizione_EN, 
                    string Original_SW_Versione, 
                    string Original_SW_Revisione, 
                    bool Original_SW_Standard, 
                    string Original_SW_P_Opt_RF, 
                    bool Original_SW_P_Opt_Use_Oled, 
                    bool Original_SW_P_Opt_Use_EmButt, 
                    bool Original_SW_P_Opt_Use_Backlight, 
                    bool Original_SW_P_Opt_ShiftPage, 
                    bool Original_SW_P_Opt_Use_Accel, 
                    bool Original_SW_P_Opt_Use_SP, 
                    bool Original_SW_P_Opt_Use_Buzzer, 
                    bool Original_SW_P_Opt_Use_Vibracall, 
                    bool Original_SW_P_Opt_Use_LedTorch, 
                    global::System.Nullable<int> Original_SW_P_Opt_MaxPairDevices, 
                    string Original_SW_R_Opt_RF, 
                    bool Original_SW_R_Opt_Plug_Exp, 
                    bool Original_SW_R_Opt_Plug_Ple, 
                    bool Original_SW_R_Opt_Em_Keyb, 
                    bool Original_SW_R_Opt_Can, 
                    bool Original_SW_R_Opt_Prop_Out, 
                    string Original_SW_R_Opt_TimeOut, 
                    global::System.Nullable<int> Original_SW_R_Opt_Cont_Keys, 
                    bool Original_SW_R_Opt_LockSameRow, 
                    bool Original_SW_R_Opt_Use_SP, 
                    global::System.Nullable<int> Original_SW_R_Opt_MaxPairDevices, 
                    bool Original_SW_R_Opt_ShiftPage, 
                    global::System.Nullable<int> Original_SW_R_Opt_Output_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Dig_Input_No, 
                    global::System.Nullable<int> Original_SW_R_Opt_Ana_Input_No, 
                    bool Original_SW_Obsolete_ver, 
                    global::System.Nullable<global::System.DateTime> Original_SW_Obsolete_ver_from_date) {
            return this.Update(SW_Code, SW_TipoDevice, SW_Descrizione, SW_Descrizione_EN, SW_Versione, SW_Revisione, SW_Standard, SW_P_Opt_RF, SW_P_Opt_Use_Oled, SW_P_Opt_Use_EmButt, SW_P_Opt_Use_Backlight, SW_P_Opt_ShiftPage, SW_P_Opt_Use_Accel, SW_P_Opt_Use_SP, SW_P_Opt_Use_Buzzer, SW_P_Opt_Use_Vibracall, SW_P_Opt_Use_LedTorch, SW_P_Opt_MaxPairDevices, SW_R_Opt_RF, SW_R_Opt_Plug_Exp, SW_R_Opt_Plug_Ple, SW_R_Opt_Em_Keyb, SW_R_Opt_Can, SW_R_Opt_Prop_Out, SW_R_Opt_TimeOut, SW_R_Opt_Cont_Keys, SW_R_Opt_LockSameRow, SW_R_Opt_Use_SP, SW_R_Opt_MaxPairDevices, SW_R_Opt_ShiftPage, SW_R_Opt_Output_No, SW_R_Opt_Dig_Input_No, SW_R_Opt_Ana_Input_No, SW_Revisioni, SW_Funzionamento, SW_Config, SW_Obsolete_ver, SW_Obsolete_ver_from_date, Original_Id, Original_SW_Code, Original_SW_TipoDevice, Original_SW_Descrizione, Original_SW_Descrizione_EN, Original_SW_Versione, Original_SW_Revisione, Original_SW_Standard, Original_SW_P_Opt_RF, Original_SW_P_Opt_Use_Oled, Original_SW_P_Opt_Use_EmButt, Original_SW_P_Opt_Use_Backlight, Original_SW_P_Opt_ShiftPage, Original_SW_P_Opt_Use_Accel, Original_SW_P_Opt_Use_SP, Original_SW_P_Opt_Use_Buzzer, Original_SW_P_Opt_Use_Vibracall, Original_SW_P_Opt_Use_LedTorch, Original_SW_P_Opt_MaxPairDevices, Original_SW_R_Opt_RF, Original_SW_R_Opt_Plug_Exp, Original_SW_R_Opt_Plug_Ple, Original_SW_R_Opt_Em_Keyb, Original_SW_R_Opt_Can, Original_SW_R_Opt_Prop_Out, Original_SW_R_Opt_TimeOut, Original_SW_R_Opt_Cont_Keys, Original_SW_R_Opt_LockSameRow, Original_SW_R_Opt_Use_SP, Original_SW_R_Opt_MaxPairDevices, Original_SW_R_Opt_ShiftPage, Original_SW_R_Opt_Output_No, Original_SW_R_Opt_Dig_Input_No, Original_SW_R_Opt_Ana_Input_No, Original_SW_Obsolete_ver, Original_SW_Obsolete_ver_from_date, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SerialNumbers_ObsoleteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SerialNumbers_ObsoleteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SerialNumbers_Obsolete";
            tableMapping.ColumnMappings.Add("Ser_Kit", "Ser_Kit");
            tableMapping.ColumnMappings.Add("Ser_ID_Cli", "Ser_ID_Cli");
            tableMapping.ColumnMappings.Add("Ser_Device", "Ser_Device");
            tableMapping.ColumnMappings.Add("Ser_Device_ID_Code", "Ser_Device_ID_Code");
            tableMapping.ColumnMappings.Add("Ser_OfficialSerial", "Ser_OfficialSerial");
            tableMapping.ColumnMappings.Add("Ser_ReadSerial", "Ser_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_SW_Code", "Ser_SW_Code");
            tableMapping.ColumnMappings.Add("Ser_SW_Code_Rev", "Ser_SW_Code_Rev");
            tableMapping.ColumnMappings.Add("Ser_SW_Std_Type", "Ser_SW_Std_Type");
            tableMapping.ColumnMappings.Add("Ser_SN_prod", "Ser_SN_prod");
            tableMapping.ColumnMappings.Add("Ser_Commessa", "Ser_Commessa");
            tableMapping.ColumnMappings.Add("Ser_DateProduction", "Ser_DateProduction");
            tableMapping.ColumnMappings.Add("Ser_Spedito", "Ser_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Data_Spedito", "Ser_Data_Spedito");
            tableMapping.ColumnMappings.Add("Ser_Substition_ID_ReadSerial", "Ser_Substition_ID_ReadSerial");
            tableMapping.ColumnMappings.Add("Ser_Note", "Ser_Note");
            tableMapping.ColumnMappings.Add("Ser_ObsoleteFromDate", "Ser_ObsoleteFromDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SerialNumbers_Obsolete] ([Ser_Kit], [Ser_ID_Cli], [Ser_Device], [Ser_Device_ID_Code], [Ser_OfficialSerial], [Ser_ReadSerial], [Ser_SW_Code], [Ser_SW_Code_Rev], [Ser_SW_Std_Type], [Ser_SN_prod], [Ser_Commessa], [Ser_DateProduction], [Ser_Spedito], [Ser_Data_Spedito], [Ser_Substition_ID_ReadSerial], [Ser_Note], [Ser_ObsoleteFromDate]) VALUES (@Ser_Kit, @Ser_ID_Cli, @Ser_Device, @Ser_Device_ID_Code, @Ser_OfficialSerial, @Ser_ReadSerial, @Ser_SW_Code, @Ser_SW_Code_Rev, @Ser_SW_Std_Type, @Ser_SN_prod, @Ser_Commessa, @Ser_DateProduction, @Ser_Spedito, @Ser_Data_Spedito, @Ser_Substition_ID_ReadSerial, @Ser_Note, @Ser_ObsoleteFromDate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Kit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Kit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ID_Cli", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ID_Cli", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Device_ID_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Device_ID_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Code_Rev", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Code_Rev", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SW_Std_Type", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SW_Std_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_SN_prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_SN_prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Commessa", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Commessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_DateProduction", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_DateProduction", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Spedito", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Data_Spedito", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Data_Spedito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Substition_ID_ReadSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Substition_ID_ReadSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_Note", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ser_ObsoleteFromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ser_ObsoleteFromDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Ser_Kit, Ser_ID_Cli, Ser_Device, Ser_Device_ID_Code, Ser_OfficialSerial, Ser_ReadSerial, Ser_SW_Code, Ser_SW_Code_Rev, Ser_SW_Std_Type, Ser_SN_prod, Ser_Commessa, Ser_DateProduction, Ser_Spedito, 
                         Ser_Data_Spedito, Ser_Substition_ID_ReadSerial, Ser_Note, Ser_ObsoleteFromDate
FROM            SerialNumbers_Obsolete";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.SerialNumbers_ObsoleteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.SerialNumbers_ObsoleteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.SerialNumbers_ObsoleteDataTable dataTable = new ds_Programmazione.SerialNumbers_ObsoleteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione.SerialNumbers_ObsoleteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione dataSet) {
            return this.Adapter.Update(dataSet, "SerialNumbers_Obsolete");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Ser_Kit, 
                    global::System.Nullable<int> Ser_ID_Cli, 
                    string Ser_Device, 
                    string Ser_Device_ID_Code, 
                    string Ser_OfficialSerial, 
                    string Ser_ReadSerial, 
                    string Ser_SW_Code, 
                    string Ser_SW_Code_Rev, 
                    global::System.Nullable<bool> Ser_SW_Std_Type, 
                    string Ser_SN_prod, 
                    string Ser_Commessa, 
                    global::System.Nullable<global::System.DateTime> Ser_DateProduction, 
                    bool Ser_Spedito, 
                    global::System.Nullable<global::System.DateTime> Ser_Data_Spedito, 
                    string Ser_Substition_ID_ReadSerial, 
                    string Ser_Note, 
                    global::System.Nullable<global::System.DateTime> Ser_ObsoleteFromDate) {
            if ((Ser_Kit == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ser_Kit));
            }
            if ((Ser_ID_Cli.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Ser_ID_Cli.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Ser_Device == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Ser_Device));
            }
            if ((Ser_Device_ID_Code == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Ser_Device_ID_Code));
            }
            if ((Ser_OfficialSerial == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ser_OfficialSerial));
            }
            if ((Ser_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Ser_ReadSerial));
            }
            if ((Ser_SW_Code == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Ser_SW_Code));
            }
            if ((Ser_SW_Code_Rev == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Ser_SW_Code_Rev));
            }
            if ((Ser_SW_Std_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Ser_SW_Std_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Ser_SN_prod == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Ser_SN_prod));
            }
            if ((Ser_Commessa == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Ser_Commessa));
            }
            if ((Ser_DateProduction.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Ser_DateProduction.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Ser_Spedito));
            if ((Ser_Data_Spedito.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(Ser_Data_Spedito.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Ser_Substition_ID_ReadSerial == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Ser_Substition_ID_ReadSerial));
            }
            if ((Ser_Note == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Ser_Note));
            }
            if ((Ser_ObsoleteFromDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(Ser_ObsoleteFromDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SafetyPointRFIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SafetyPointRFIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SafetyPointRFID";
            tableMapping.ColumnMappings.Add("Rfid_ID", "Rfid_ID");
            tableMapping.ColumnMappings.Add("Rfid_UUID", "Rfid_UUID");
            tableMapping.ColumnMappings.Add("Rfid_Technology", "Rfid_Technology");
            tableMapping.ColumnMappings.Add("Rfid_Ser_SN_Prod", "Rfid_Ser_SN_Prod");
            tableMapping.ColumnMappings.Add("Rfid_Obsolete", "Rfid_Obsolete");
            tableMapping.ColumnMappings.Add("Rfid_Verified", "Rfid_Verified");
            tableMapping.ColumnMappings.Add("Rfid_Note", "Rfid_Note");
            tableMapping.ColumnMappings.Add("Rfid_Ser_OfficialSerial", "Rfid_Ser_OfficialSerial");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SafetyPointRFID] WHERE (([Rfid_ID] = @Original_Rfid_ID) AND ((@IsNull_Rfid_UUID = 1 AND [Rfid_UUID] IS NULL) OR ([Rfid_UUID] = @Original_Rfid_UUID)) AND ((@IsNull_Rfid_Technology = 1 AND [Rfid_Technology] IS NULL) OR ([Rfid_Technology] = @Original_Rfid_Technology)) AND ((@IsNull_Rfid_Ser_SN_Prod = 1 AND [Rfid_Ser_SN_Prod] IS NULL) OR ([Rfid_Ser_SN_Prod] = @Original_Rfid_Ser_SN_Prod)) AND ((@IsNull_Rfid_Ser_OfficialSerial = 1 AND [Rfid_Ser_OfficialSerial] IS NULL) OR ([Rfid_Ser_OfficialSerial] = @Original_Rfid_Ser_OfficialSerial)) AND ([Rfid_Obsolete] = @Original_Rfid_Obsolete) AND ([Rfid_Verified] = @Original_Rfid_Verified))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_UUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_UUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_UUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_UUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_Technology", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Technology", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Technology", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Technology", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_Ser_SN_Prod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_SN_Prod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Ser_SN_Prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_SN_Prod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_Ser_OfficialSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Obsolete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Obsolete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Verified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Verified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SafetyPointRFID] ([Rfid_UUID], [Rfid_Technology], [Rfid_Ser_SN_Prod], [Rfid_Ser_OfficialSerial], [Rfid_Obsolete], [Rfid_Verified], [Rfid_Note]) VALUES (@Rfid_UUID, @Rfid_Technology, @Rfid_Ser_SN_Prod, @Rfid_Ser_OfficialSerial, @Rfid_Obsolete, @Rfid_Verified, @Rfid_Note);
SELECT Rfid_ID, Rfid_UUID, Rfid_Technology, Rfid_Ser_SN_Prod, Rfid_Ser_OfficialSerial, Rfid_Obsolete, Rfid_Verified, Rfid_Note FROM SafetyPointRFID WHERE (Rfid_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_UUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_UUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Technology", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Technology", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Ser_SN_Prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_SN_Prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Obsolete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Obsolete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Verified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Verified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Note", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SafetyPointRFID] SET [Rfid_UUID] = @Rfid_UUID, [Rfid_Technology] = @Rfid_Technology, [Rfid_Ser_SN_Prod] = @Rfid_Ser_SN_Prod, [Rfid_Ser_OfficialSerial] = @Rfid_Ser_OfficialSerial, [Rfid_Obsolete] = @Rfid_Obsolete, [Rfid_Verified] = @Rfid_Verified, [Rfid_Note] = @Rfid_Note WHERE (([Rfid_ID] = @Original_Rfid_ID) AND ((@IsNull_Rfid_UUID = 1 AND [Rfid_UUID] IS NULL) OR ([Rfid_UUID] = @Original_Rfid_UUID)) AND ((@IsNull_Rfid_Technology = 1 AND [Rfid_Technology] IS NULL) OR ([Rfid_Technology] = @Original_Rfid_Technology)) AND ((@IsNull_Rfid_Ser_SN_Prod = 1 AND [Rfid_Ser_SN_Prod] IS NULL) OR ([Rfid_Ser_SN_Prod] = @Original_Rfid_Ser_SN_Prod)) AND ((@IsNull_Rfid_Ser_OfficialSerial = 1 AND [Rfid_Ser_OfficialSerial] IS NULL) OR ([Rfid_Ser_OfficialSerial] = @Original_Rfid_Ser_OfficialSerial)) AND ([Rfid_Obsolete] = @Original_Rfid_Obsolete) AND ([Rfid_Verified] = @Original_Rfid_Verified));
SELECT Rfid_ID, Rfid_UUID, Rfid_Technology, Rfid_Ser_SN_Prod, Rfid_Ser_OfficialSerial, Rfid_Obsolete, Rfid_Verified, Rfid_Note FROM SafetyPointRFID WHERE (Rfid_ID = @Rfid_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_UUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_UUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Technology", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Technology", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Ser_SN_Prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_SN_Prod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_OfficialSerial", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Obsolete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Obsolete", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Verified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Verified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_Note", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_UUID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_UUID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_UUID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_UUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_Technology", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Technology", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Technology", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Technology", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_Ser_SN_Prod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_SN_Prod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Ser_SN_Prod", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_SN_Prod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rfid_Ser_OfficialSerial", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Ser_OfficialSerial", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Ser_OfficialSerial", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Obsolete", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Obsolete", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rfid_Verified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_Verified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rfid_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Rfid_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Rfid_ID, Rfid_UUID, Rfid_Technology, Rfid_Ser_SN_Prod, Rfid_Ser_Off" +
                "icialSerial, Rfid_Obsolete, Rfid_Verified, Rfid_Note\r\nFROM            SafetyPoin" +
                "tRFID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.SafetyPointRFIDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.SafetyPointRFIDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.SafetyPointRFIDDataTable dataTable = new ds_Programmazione.SafetyPointRFIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione.SafetyPointRFIDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione dataSet) {
            return this.Adapter.Update(dataSet, "SafetyPointRFID");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Rfid_ID, string Original_Rfid_UUID, string Original_Rfid_Technology, string Original_Rfid_Ser_SN_Prod, string Original_Rfid_Ser_OfficialSerial, bool Original_Rfid_Obsolete, bool Original_Rfid_Verified) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Rfid_ID));
            if ((Original_Rfid_UUID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Rfid_UUID));
            }
            if ((Original_Rfid_Technology == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Rfid_Technology));
            }
            if ((Original_Rfid_Ser_SN_Prod == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Rfid_Ser_SN_Prod));
            }
            if ((Original_Rfid_Ser_OfficialSerial == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Rfid_Ser_OfficialSerial));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_Rfid_Obsolete));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_Rfid_Verified));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Rfid_UUID, string Rfid_Technology, string Rfid_Ser_SN_Prod, string Rfid_Ser_OfficialSerial, bool Rfid_Obsolete, bool Rfid_Verified, string Rfid_Note) {
            if ((Rfid_UUID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Rfid_UUID));
            }
            if ((Rfid_Technology == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Rfid_Technology));
            }
            if ((Rfid_Ser_SN_Prod == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Rfid_Ser_SN_Prod));
            }
            if ((Rfid_Ser_OfficialSerial == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Rfid_Ser_OfficialSerial));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Rfid_Obsolete));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(Rfid_Verified));
            if ((Rfid_Note == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Rfid_Note));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Rfid_UUID, string Rfid_Technology, string Rfid_Ser_SN_Prod, string Rfid_Ser_OfficialSerial, bool Rfid_Obsolete, bool Rfid_Verified, string Rfid_Note, int Original_Rfid_ID, string Original_Rfid_UUID, string Original_Rfid_Technology, string Original_Rfid_Ser_SN_Prod, string Original_Rfid_Ser_OfficialSerial, bool Original_Rfid_Obsolete, bool Original_Rfid_Verified, int Rfid_ID) {
            if ((Rfid_UUID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Rfid_UUID));
            }
            if ((Rfid_Technology == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Rfid_Technology));
            }
            if ((Rfid_Ser_SN_Prod == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Rfid_Ser_SN_Prod));
            }
            if ((Rfid_Ser_OfficialSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Rfid_Ser_OfficialSerial));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Rfid_Obsolete));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Rfid_Verified));
            if ((Rfid_Note == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Rfid_Note));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Rfid_ID));
            if ((Original_Rfid_UUID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Rfid_UUID));
            }
            if ((Original_Rfid_Technology == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Rfid_Technology));
            }
            if ((Original_Rfid_Ser_SN_Prod == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Rfid_Ser_SN_Prod));
            }
            if ((Original_Rfid_Ser_OfficialSerial == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Rfid_Ser_OfficialSerial));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_Rfid_Obsolete));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_Rfid_Verified));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Rfid_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Rfid_UUID, string Rfid_Technology, string Rfid_Ser_SN_Prod, string Rfid_Ser_OfficialSerial, bool Rfid_Obsolete, bool Rfid_Verified, string Rfid_Note, int Original_Rfid_ID, string Original_Rfid_UUID, string Original_Rfid_Technology, string Original_Rfid_Ser_SN_Prod, string Original_Rfid_Ser_OfficialSerial, bool Original_Rfid_Obsolete, bool Original_Rfid_Verified) {
            return this.Update(Rfid_UUID, Rfid_Technology, Rfid_Ser_SN_Prod, Rfid_Ser_OfficialSerial, Rfid_Obsolete, Rfid_Verified, Rfid_Note, Original_Rfid_ID, Original_Rfid_UUID, Original_Rfid_Technology, Original_Rfid_Ser_SN_Prod, Original_Rfid_Ser_OfficialSerial, Original_Rfid_Obsolete, Original_Rfid_Verified, Original_Rfid_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Fam_ProdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Fam_ProdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Fam_Prod";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Fam_Prefix", "Fam_Prefix");
            tableMapping.ColumnMappings.Add("Fam_Name", "Fam_Name");
            tableMapping.ColumnMappings.Add("Fam_Label", "Fam_Label");
            tableMapping.ColumnMappings.Add("Fam_Tipo", "Fam_Tipo");
            tableMapping.ColumnMappings.Add("Fam_IsDevice", "Fam_IsDevice");
            tableMapping.ColumnMappings.Add("Fam_ToCommessa", "Fam_ToCommessa");
            tableMapping.ColumnMappings.Add("LEN(Fam_Prefix)", "LEN(Fam_Prefix)");
            tableMapping.ColumnMappings.Add("Fam_ID_Identifier", "Fam_ID_Identifier");
            tableMapping.ColumnMappings.Add("Fam_Alias_Progettazione", "Fam_Alias_Progettazione");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Fam_Prod] WHERE (([Id] = @Original_Id) AND ((@IsNull_Fam_Prefix = 1 AND [Fam_Prefix] IS NULL) OR ([Fam_Prefix] = @Original_Fam_Prefix)) AND ([Fam_Name] = @Original_Fam_Name) AND ((@IsNull_Fam_Label = 1 AND [Fam_Label] IS NULL) OR ([Fam_Label] = @Original_Fam_Label)) AND ((@IsNull_Fam_Tipo = 1 AND [Fam_Tipo] IS NULL) OR ([Fam_Tipo] = @Original_Fam_Tipo)) AND ([Fam_IsDevice] = @Original_Fam_IsDevice) AND ((@IsNull_Fam_ToCommessa = 1 AND [Fam_ToCommessa] IS NULL) OR ([Fam_ToCommessa] = @Original_Fam_ToCommessa)) AND ((@p3 = 1 AND [LEN(Fam_Prefix)] IS NULL) OR ([LEN(Fam_Prefix)] = @p2)) AND ((@IsNull_Fam_ID_Identifier = 1 AND [Fam_ID_Identifier] IS NULL) OR ([Fam_ID_Identifier] = @Original_Fam_ID_Identifier)) AND ((@IsNull_Fam_Alias_Progettazione = 1 AND [Fam_Alias_Progettazione] IS NULL) OR ([Fam_Alias_Progettazione] = @Original_Fam_Alias_Progettazione)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Prefix", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Prefix", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Prefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Prefix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Label", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Label", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Label", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Tipo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_IsDevice", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_IsDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_ToCommessa", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ToCommessa", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_ToCommessa", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ToCommessa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEN(Fam_Prefix)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEN(Fam_Prefix)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_ID_Identifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ID_Identifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_ID_Identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ID_Identifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Alias_Progettazione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Alias_Progettazione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Alias_Progettazione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Alias_Progettazione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Fam_Prod] ([Fam_Prefix], [Fam_Name], [Fam_Label], [Fam_Tipo], [Fam_IsDevice], [Fam_ToCommessa], [LEN(Fam_Prefix)], [Fam_ID_Identifier], [Fam_Alias_Progettazione]) VALUES (@Fam_Prefix, @Fam_Name, @Fam_Label, @Fam_Tipo, @Fam_IsDevice, @Fam_ToCommessa, @p1, @Fam_ID_Identifier, @Fam_Alias_Progettazione);
SELECT Id, Fam_Prefix, Fam_Name, Fam_Label, Fam_Tipo, Fam_IsDevice, Fam_ToCommessa, [LEN(Fam_Prefix)], Fam_ID_Identifier, Fam_Alias_Progettazione FROM Fam_Prod WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Prefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Prefix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_IsDevice", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_IsDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_ToCommessa", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ToCommessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEN(Fam_Prefix)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_ID_Identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ID_Identifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Alias_Progettazione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Alias_Progettazione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Fam_Prod] SET [Fam_Prefix] = @Fam_Prefix, [Fam_Name] = @Fam_Name, [Fam_Label] = @Fam_Label, [Fam_Tipo] = @Fam_Tipo, [Fam_IsDevice] = @Fam_IsDevice, [Fam_ToCommessa] = @Fam_ToCommessa, [LEN(Fam_Prefix)] = @p1, [Fam_ID_Identifier] = @Fam_ID_Identifier, [Fam_Alias_Progettazione] = @Fam_Alias_Progettazione WHERE (([Id] = @Original_Id) AND ((@IsNull_Fam_Prefix = 1 AND [Fam_Prefix] IS NULL) OR ([Fam_Prefix] = @Original_Fam_Prefix)) AND ([Fam_Name] = @Original_Fam_Name) AND ((@IsNull_Fam_Label = 1 AND [Fam_Label] IS NULL) OR ([Fam_Label] = @Original_Fam_Label)) AND ((@IsNull_Fam_Tipo = 1 AND [Fam_Tipo] IS NULL) OR ([Fam_Tipo] = @Original_Fam_Tipo)) AND ([Fam_IsDevice] = @Original_Fam_IsDevice) AND ((@IsNull_Fam_ToCommessa = 1 AND [Fam_ToCommessa] IS NULL) OR ([Fam_ToCommessa] = @Original_Fam_ToCommessa)) AND ((@p3 = 1 AND [LEN(Fam_Prefix)] IS NULL) OR ([LEN(Fam_Prefix)] = @p2)) AND ((@IsNull_Fam_ID_Identifier = 1 AND [Fam_ID_Identifier] IS NULL) OR ([Fam_ID_Identifier] = @Original_Fam_ID_Identifier)) AND ((@IsNull_Fam_Alias_Progettazione = 1 AND [Fam_Alias_Progettazione] IS NULL) OR ([Fam_Alias_Progettazione] = @Original_Fam_Alias_Progettazione)));
SELECT Id, Fam_Prefix, Fam_Name, Fam_Label, Fam_Tipo, Fam_IsDevice, Fam_ToCommessa, [LEN(Fam_Prefix)], Fam_ID_Identifier, Fam_Alias_Progettazione FROM Fam_Prod WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Prefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Prefix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_IsDevice", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_IsDevice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_ToCommessa", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ToCommessa", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEN(Fam_Prefix)", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_ID_Identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ID_Identifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fam_Alias_Progettazione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Alias_Progettazione", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Prefix", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Prefix", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Prefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Prefix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Label", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Label", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Label", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Tipo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Tipo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_IsDevice", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_IsDevice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_ToCommessa", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ToCommessa", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_ToCommessa", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ToCommessa", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEN(Fam_Prefix)", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LEN(Fam_Prefix)", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_ID_Identifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ID_Identifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_ID_Identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_ID_Identifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fam_Alias_Progettazione", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Alias_Progettazione", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fam_Alias_Progettazione", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fam_Alias_Progettazione", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SmartLineProduction.Properties.Settings.Default.SISTEMATICA_FACTORYConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Fam_Prefix, Fam_Name, Fam_Label, Fam_Tipo, Fam_IsDevice, Fam_ToCommess" +
                "a, [LEN(Fam_Prefix)], Fam_ID_Identifier, Fam_Alias_Progettazione FROM dbo.Fam_Pr" +
                "od";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ds_Programmazione.Fam_ProdDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ds_Programmazione.Fam_ProdDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ds_Programmazione.Fam_ProdDataTable dataTable = new ds_Programmazione.Fam_ProdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione.Fam_ProdDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ds_Programmazione dataSet) {
            return this.Adapter.Update(dataSet, "Fam_Prod");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_Fam_Prefix, string Original_Fam_Name, string Original_Fam_Label, string Original_Fam_Tipo, string Original_Fam_IsDevice, string Original_Fam_ToCommessa, global::System.Nullable<int> p2, string Original_Fam_ID_Identifier, string Original_Fam_Alias_Progettazione) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_Fam_Prefix == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Fam_Prefix));
            }
            if ((Original_Fam_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Fam_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Fam_Name));
            }
            if ((Original_Fam_Label == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Fam_Label));
            }
            if ((Original_Fam_Tipo == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Fam_Tipo));
            }
            if ((Original_Fam_IsDevice == null)) {
                throw new global::System.ArgumentNullException("Original_Fam_IsDevice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Fam_IsDevice));
            }
            if ((Original_Fam_ToCommessa == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Fam_ToCommessa));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Fam_ID_Identifier == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Fam_ID_Identifier));
            }
            if ((Original_Fam_Alias_Progettazione == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Fam_Alias_Progettazione));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Fam_Prefix, string Fam_Name, string Fam_Label, string Fam_Tipo, string Fam_IsDevice, string Fam_ToCommessa, global::System.Nullable<int> p1, string Fam_ID_Identifier, string Fam_Alias_Progettazione) {
            if ((Fam_Prefix == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Fam_Prefix));
            }
            if ((Fam_Name == null)) {
                throw new global::System.ArgumentNullException("Fam_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Fam_Name));
            }
            if ((Fam_Label == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Fam_Label));
            }
            if ((Fam_Tipo == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Fam_Tipo));
            }
            if ((Fam_IsDevice == null)) {
                throw new global::System.ArgumentNullException("Fam_IsDevice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Fam_IsDevice));
            }
            if ((Fam_ToCommessa == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Fam_ToCommessa));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Fam_ID_Identifier == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Fam_ID_Identifier));
            }
            if ((Fam_Alias_Progettazione == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Fam_Alias_Progettazione));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Fam_Prefix, 
                    string Fam_Name, 
                    string Fam_Label, 
                    string Fam_Tipo, 
                    string Fam_IsDevice, 
                    string Fam_ToCommessa, 
                    global::System.Nullable<int> p1, 
                    string Fam_ID_Identifier, 
                    string Fam_Alias_Progettazione, 
                    int Original_Id, 
                    string Original_Fam_Prefix, 
                    string Original_Fam_Name, 
                    string Original_Fam_Label, 
                    string Original_Fam_Tipo, 
                    string Original_Fam_IsDevice, 
                    string Original_Fam_ToCommessa, 
                    global::System.Nullable<int> p2, 
                    string Original_Fam_ID_Identifier, 
                    string Original_Fam_Alias_Progettazione, 
                    int Id) {
            if ((Fam_Prefix == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Fam_Prefix));
            }
            if ((Fam_Name == null)) {
                throw new global::System.ArgumentNullException("Fam_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Fam_Name));
            }
            if ((Fam_Label == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Fam_Label));
            }
            if ((Fam_Tipo == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Fam_Tipo));
            }
            if ((Fam_IsDevice == null)) {
                throw new global::System.ArgumentNullException("Fam_IsDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Fam_IsDevice));
            }
            if ((Fam_ToCommessa == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Fam_ToCommessa));
            }
            if ((p1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(p1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Fam_ID_Identifier == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Fam_ID_Identifier));
            }
            if ((Fam_Alias_Progettazione == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Fam_Alias_Progettazione));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Id));
            if ((Original_Fam_Prefix == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Fam_Prefix));
            }
            if ((Original_Fam_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Fam_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Fam_Name));
            }
            if ((Original_Fam_Label == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Fam_Label));
            }
            if ((Original_Fam_Tipo == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Fam_Tipo));
            }
            if ((Original_Fam_IsDevice == null)) {
                throw new global::System.ArgumentNullException("Original_Fam_IsDevice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Fam_IsDevice));
            }
            if ((Original_Fam_ToCommessa == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Fam_ToCommessa));
            }
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Fam_ID_Identifier == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Fam_ID_Identifier));
            }
            if ((Original_Fam_Alias_Progettazione == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Fam_Alias_Progettazione));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Fam_Prefix, 
                    string Fam_Name, 
                    string Fam_Label, 
                    string Fam_Tipo, 
                    string Fam_IsDevice, 
                    string Fam_ToCommessa, 
                    global::System.Nullable<int> p1, 
                    string Fam_ID_Identifier, 
                    string Fam_Alias_Progettazione, 
                    int Original_Id, 
                    string Original_Fam_Prefix, 
                    string Original_Fam_Name, 
                    string Original_Fam_Label, 
                    string Original_Fam_Tipo, 
                    string Original_Fam_IsDevice, 
                    string Original_Fam_ToCommessa, 
                    global::System.Nullable<int> p2, 
                    string Original_Fam_ID_Identifier, 
                    string Original_Fam_Alias_Progettazione) {
            return this.Update(Fam_Prefix, Fam_Name, Fam_Label, Fam_Tipo, Fam_IsDevice, Fam_ToCommessa, p1, Fam_ID_Identifier, Fam_Alias_Progettazione, Original_Id, Original_Fam_Prefix, Original_Fam_Name, Original_Fam_Label, Original_Fam_Tipo, Original_Fam_IsDevice, Original_Fam_ToCommessa, p2, Original_Fam_ID_Identifier, Original_Fam_Alias_Progettazione, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FirmwareTableAdapter _firmwareTableAdapter;
        
        private FW_ClientiTableAdapter _fW_ClientiTableAdapter;
        
        private SerialNumbersTableAdapter _serialNumbersTableAdapter;
        
        private dt_Firmware_lookupCommesseSLTableAdapter _dt_Firmware_lookupCommesseSLTableAdapter;
        
        private SerialNumbers_ObsoleteTableAdapter _serialNumbers_ObsoleteTableAdapter;
        
        private SafetyPointRFIDTableAdapter _safetyPointRFIDTableAdapter;
        
        private Fam_ProdTableAdapter _fam_ProdTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FirmwareTableAdapter FirmwareTableAdapter {
            get {
                return this._firmwareTableAdapter;
            }
            set {
                this._firmwareTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FW_ClientiTableAdapter FW_ClientiTableAdapter {
            get {
                return this._fW_ClientiTableAdapter;
            }
            set {
                this._fW_ClientiTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SerialNumbersTableAdapter SerialNumbersTableAdapter {
            get {
                return this._serialNumbersTableAdapter;
            }
            set {
                this._serialNumbersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public dt_Firmware_lookupCommesseSLTableAdapter dt_Firmware_lookupCommesseSLTableAdapter {
            get {
                return this._dt_Firmware_lookupCommesseSLTableAdapter;
            }
            set {
                this._dt_Firmware_lookupCommesseSLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SerialNumbers_ObsoleteTableAdapter SerialNumbers_ObsoleteTableAdapter {
            get {
                return this._serialNumbers_ObsoleteTableAdapter;
            }
            set {
                this._serialNumbers_ObsoleteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SafetyPointRFIDTableAdapter SafetyPointRFIDTableAdapter {
            get {
                return this._safetyPointRFIDTableAdapter;
            }
            set {
                this._safetyPointRFIDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Fam_ProdTableAdapter Fam_ProdTableAdapter {
            get {
                return this._fam_ProdTableAdapter;
            }
            set {
                this._fam_ProdTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._firmwareTableAdapter != null) 
                            && (this._firmwareTableAdapter.Connection != null))) {
                    return this._firmwareTableAdapter.Connection;
                }
                if (((this._fW_ClientiTableAdapter != null) 
                            && (this._fW_ClientiTableAdapter.Connection != null))) {
                    return this._fW_ClientiTableAdapter.Connection;
                }
                if (((this._serialNumbersTableAdapter != null) 
                            && (this._serialNumbersTableAdapter.Connection != null))) {
                    return this._serialNumbersTableAdapter.Connection;
                }
                if (((this._dt_Firmware_lookupCommesseSLTableAdapter != null) 
                            && (this._dt_Firmware_lookupCommesseSLTableAdapter.Connection != null))) {
                    return this._dt_Firmware_lookupCommesseSLTableAdapter.Connection;
                }
                if (((this._serialNumbers_ObsoleteTableAdapter != null) 
                            && (this._serialNumbers_ObsoleteTableAdapter.Connection != null))) {
                    return this._serialNumbers_ObsoleteTableAdapter.Connection;
                }
                if (((this._safetyPointRFIDTableAdapter != null) 
                            && (this._safetyPointRFIDTableAdapter.Connection != null))) {
                    return this._safetyPointRFIDTableAdapter.Connection;
                }
                if (((this._fam_ProdTableAdapter != null) 
                            && (this._fam_ProdTableAdapter.Connection != null))) {
                    return this._fam_ProdTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._firmwareTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fW_ClientiTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._serialNumbersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dt_Firmware_lookupCommesseSLTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._safetyPointRFIDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fam_ProdTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(ds_Programmazione dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._firmwareTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Firmware.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._firmwareTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fW_ClientiTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FW_Clienti.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fW_ClientiTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._serialNumbersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SerialNumbers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._serialNumbersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dt_Firmware_lookupCommesseSLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dt_Firmware_lookupCommesseSL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dt_Firmware_lookupCommesseSLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SerialNumbers_Obsolete.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._serialNumbers_ObsoleteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._safetyPointRFIDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SafetyPointRFID.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._safetyPointRFIDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fam_ProdTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Fam_Prod.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fam_ProdTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(ds_Programmazione dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._firmwareTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Firmware.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._firmwareTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fW_ClientiTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FW_Clienti.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fW_ClientiTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._serialNumbersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SerialNumbers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._serialNumbersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dt_Firmware_lookupCommesseSLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dt_Firmware_lookupCommesseSL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dt_Firmware_lookupCommesseSLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SerialNumbers_Obsolete.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._serialNumbers_ObsoleteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._safetyPointRFIDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SafetyPointRFID.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._safetyPointRFIDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fam_ProdTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Fam_Prod.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fam_ProdTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(ds_Programmazione dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._fam_ProdTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Fam_Prod.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fam_ProdTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._safetyPointRFIDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SafetyPointRFID.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._safetyPointRFIDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SerialNumbers_Obsolete.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._serialNumbers_ObsoleteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dt_Firmware_lookupCommesseSLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dt_Firmware_lookupCommesseSL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dt_Firmware_lookupCommesseSLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._serialNumbersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SerialNumbers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._serialNumbersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fW_ClientiTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FW_Clienti.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fW_ClientiTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._firmwareTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Firmware.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._firmwareTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(ds_Programmazione dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._firmwareTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._firmwareTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._fW_ClientiTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fW_ClientiTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._serialNumbersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._serialNumbersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._dt_Firmware_lookupCommesseSLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dt_Firmware_lookupCommesseSLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._serialNumbers_ObsoleteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._serialNumbers_ObsoleteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._safetyPointRFIDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._safetyPointRFIDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            if (((this._fam_ProdTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fam_ProdTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tutti gli oggetti TableAdapter gestiti da TableAdapterManager devono utilizzare l" +
                        "a stessa stringa di connessione.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager non contiene informazioni di connessione. Impostare la propri" +
                        "età TableAdapter di ciascun oggetto TableAdapterManager su un\'istanza TableAdapt" +
                        "er valida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Impossibile avviare la transazione. La connessione dati corrente non supporta le " +
                        "transazioni oppure lo stato corrente non consente l\'avvio della transazione.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._firmwareTableAdapter != null)) {
                    revertConnections.Add(this._firmwareTableAdapter, this._firmwareTableAdapter.Connection);
                    this._firmwareTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._firmwareTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._firmwareTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._firmwareTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._firmwareTableAdapter.Adapter);
                    }
                }
                if ((this._fW_ClientiTableAdapter != null)) {
                    revertConnections.Add(this._fW_ClientiTableAdapter, this._fW_ClientiTableAdapter.Connection);
                    this._fW_ClientiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fW_ClientiTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fW_ClientiTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fW_ClientiTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fW_ClientiTableAdapter.Adapter);
                    }
                }
                if ((this._serialNumbersTableAdapter != null)) {
                    revertConnections.Add(this._serialNumbersTableAdapter, this._serialNumbersTableAdapter.Connection);
                    this._serialNumbersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._serialNumbersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._serialNumbersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._serialNumbersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._serialNumbersTableAdapter.Adapter);
                    }
                }
                if ((this._dt_Firmware_lookupCommesseSLTableAdapter != null)) {
                    revertConnections.Add(this._dt_Firmware_lookupCommesseSLTableAdapter, this._dt_Firmware_lookupCommesseSLTableAdapter.Connection);
                    this._dt_Firmware_lookupCommesseSLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dt_Firmware_lookupCommesseSLTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dt_Firmware_lookupCommesseSLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dt_Firmware_lookupCommesseSLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dt_Firmware_lookupCommesseSLTableAdapter.Adapter);
                    }
                }
                if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                    revertConnections.Add(this._serialNumbers_ObsoleteTableAdapter, this._serialNumbers_ObsoleteTableAdapter.Connection);
                    this._serialNumbers_ObsoleteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._serialNumbers_ObsoleteTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._serialNumbers_ObsoleteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._serialNumbers_ObsoleteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._serialNumbers_ObsoleteTableAdapter.Adapter);
                    }
                }
                if ((this._safetyPointRFIDTableAdapter != null)) {
                    revertConnections.Add(this._safetyPointRFIDTableAdapter, this._safetyPointRFIDTableAdapter.Connection);
                    this._safetyPointRFIDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._safetyPointRFIDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._safetyPointRFIDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._safetyPointRFIDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._safetyPointRFIDTableAdapter.Adapter);
                    }
                }
                if ((this._fam_ProdTableAdapter != null)) {
                    revertConnections.Add(this._fam_ProdTableAdapter, this._fam_ProdTableAdapter.Connection);
                    this._fam_ProdTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fam_ProdTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fam_ProdTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fam_ProdTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fam_ProdTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._firmwareTableAdapter != null)) {
                    this._firmwareTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._firmwareTableAdapter]));
                    this._firmwareTableAdapter.Transaction = null;
                }
                if ((this._fW_ClientiTableAdapter != null)) {
                    this._fW_ClientiTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fW_ClientiTableAdapter]));
                    this._fW_ClientiTableAdapter.Transaction = null;
                }
                if ((this._serialNumbersTableAdapter != null)) {
                    this._serialNumbersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._serialNumbersTableAdapter]));
                    this._serialNumbersTableAdapter.Transaction = null;
                }
                if ((this._dt_Firmware_lookupCommesseSLTableAdapter != null)) {
                    this._dt_Firmware_lookupCommesseSLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dt_Firmware_lookupCommesseSLTableAdapter]));
                    this._dt_Firmware_lookupCommesseSLTableAdapter.Transaction = null;
                }
                if ((this._serialNumbers_ObsoleteTableAdapter != null)) {
                    this._serialNumbers_ObsoleteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._serialNumbers_ObsoleteTableAdapter]));
                    this._serialNumbers_ObsoleteTableAdapter.Transaction = null;
                }
                if ((this._safetyPointRFIDTableAdapter != null)) {
                    this._safetyPointRFIDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._safetyPointRFIDTableAdapter]));
                    this._safetyPointRFIDTableAdapter.Transaction = null;
                }
                if ((this._fam_ProdTableAdapter != null)) {
                    this._fam_ProdTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fam_ProdTableAdapter]));
                    this._fam_ProdTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591